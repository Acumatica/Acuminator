<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:platformUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
					x:ClassModifier="public"
					x:Class="Acuminator.Vsix.Themes.Styles">
	<!--#region VS Image Style-->
    <Style x:Key="vsImageStyle" TargetType="{x:Type Image}">
        <Setter Property="MaxHeight" Value="16"/>
        <Setter Property="MaxWidth" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
	<!--#endregion-->
	<!--#region VS Read Only Data Grid Style-->
    <!--#region DataGrid Row-->
    <Style x:Key="dataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarTextActiveBrushKey}}"/>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemActiveBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemActiveTextBrushKey}}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsFocused" Value="False"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemInactiveBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemInactiveTextBrushKey}}"/>
            </MultiTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:HeaderColors.MouseOverBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:HeaderColors.MouseOverTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <Style x:Key="vsDataGridStyle" TargetType="DataGrid">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:HeaderColors.SeparatorLineBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarTextActiveBrushKey}}"/>
        <Setter Property="RowStyle" Value="{StaticResource dataGridRowStyle}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="ClipboardCopyMode" Value="IncludeHeader"/>

        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="Copy" >
                        <MenuItem.Icon>
                            <Image Style="{StaticResource vsImageStyle}" Source="pack://application:,,,/Acuminator;component/Resources/Copy.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="MinHeight" Value="24"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:HeaderColors.DefaultBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:HeaderColors.DefaultTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:HeaderColors.SeparatorLineBrushKey}}"/>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Margin="2,0" ToolTip="{Binding}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:HeaderColors.MouseOverBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:HeaderColors.MouseOverTextBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:HeaderColors.MouseDownBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:HeaderColors.MouseDownTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="readonlyDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource vsDataGridStyle}">
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
    </Style>
	<!--#endregion-->
	<!--#region VS Button Style-->
    <Style x:Key="vsButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ButtonStyleKey}}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="3"/>
            </Style>
        </Style.Resources>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemActiveBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonHoverTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonBorderHoverBrushKey}}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonPressedBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonPressedTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonBorderPressedBrushKey}}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonDisabledBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonDisabledTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonBorderDisabledBrushKey}}"/>
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
	<!--#endregion-->
	<!--#region TreeViewItem Style-->
    <Style x:Key="vsTreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:TreeViewColors.BackgroundBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:TreeViewColors.BackgroundTextBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:HeaderColors.SeparatorLineBrushKey}}"/>

		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemActiveBrushKey}}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemActiveTextBrushKey}}"/>
			</Trigger>
		</Style.Triggers>
    </Style>
	<!--#endregion-->
	<!--#region TreeView Style-->
    <Style x:Key="vsTreeViewStyle" TargetType="TreeView">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
	<!--#endregion-->
	
	<!--#region VS ListBox Style-->
    <Style x:Key="vsListBoxItemStyle" TargetType="ListBoxItem">
		<Setter Property="Background" Value="{DynamicResource {x:Static platformUI:TreeViewColors.BackgroundBrushKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:TreeViewColors.BackgroundTextBrushKey}}"/>

		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemActiveBrushKey}}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:TreeViewColors.SelectedItemActiveTextBrushKey}}"/>
			</Trigger>
		</Style.Triggers>
    </Style>

    <Style x:Key="vsListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:HeaderColors.SeparatorLineBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarTextActiveBrushKey}}"/>

        <Setter Property="ItemContainerStyle" Value="{StaticResource vsListBoxItemStyle}"/>
    </Style>
	<!--#endregion-->
	
	<!--#region Menu Styles-->
	<!--#region Context Menu Template-->
	<ControlTemplate x:Key="CodeMapContextMenuControlTemplate" TargetType="{x:Type ContextMenu}">
		<platformUI:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" SnapsToDevicePixels="True">
			<Border x:Name="ContextMenuBorder" BorderBrush="{TemplateBinding BorderBrush}" 
					BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
				
				<ScrollViewer x:Name="ContextMenuScrollViewer" Grid.ColumnSpan="2" Margin="1,0" 
							  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
					<Grid RenderOptions.ClearTypeHint="Enabled">
						<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
							<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=ContextMenuBorder}" 
									   Height="{Binding ActualHeight, ElementName=ContextMenuBorder}" 
									   Width="{Binding ActualWidth, ElementName=ContextMenuBorder}"/>
						</Canvas>

						<ItemsPresenter x:Name="ItemsPresenter" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										KeyboardNavigation.DirectionalNavigation="Cycle"/>
					</Grid>
				</ScrollViewer>
			</Border>
		</platformUI:SystemDropShadowChrome>
		
		<ControlTemplate.Triggers>
			<Trigger Property="HasDropShadow" Value="True">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="Shdw" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.DropShadowBackgroundColorKey}}"/>
			</Trigger>
			<Trigger Property="CanContentScroll" SourceName="ContextMenuScrollViewer" Value="False">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=ContextMenuScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=ContextMenuScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!--#endregion-->

	<!--#region Menu control templates and styles-->
	<ControlTemplate x:Key="CodeMapMenuItemWithItemsControlTemplate" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
				Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<Grid Margin="-1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="13"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="30"/>
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>

				<ContentPresenter x:Name="Icon" Height="16" Width="16" Margin="3"  HorizontalAlignment="Center" VerticalAlignment="Center"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Icon}" ContentSource="Icon"/>

				<Border x:Name="GlyphPanel" Height="22" Width="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" BorderThickness="1"
						BorderBrush="#FF26A0DA"  
						Background="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuIconBackgroundBrushKey}}">

					<Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
						  Fill="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxBrushKey}}"
						  FlowDirection="LeftToRight" Height="11" Width="9"/>
				</Border>

				<ContentPresenter Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
								  ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
								  ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" 
								  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

				<TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>

				<Path x:Name="RightArrow" Grid.Column="5" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
					  Data="M0,0L4,3.5 0,7z" Fill="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxBrushKey}}"/>

				<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" Placement="Right" HorizontalOffset="-2" VerticalOffset="-3"
					   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
					   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">

					<Border x:Name="SubMenuBorder" BorderThickness="1" Padding="2"
							BorderBrush="{Binding ElementName=templateRoot, Path=BorderBrush}"
							Background="{Binding ElementName=templateRoot, Path=Background}">
						<ScrollViewer x:Name="SubMenuScrollViewer" 
									  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" 
											   Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
											   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
								</Canvas>
								<Rectangle Fill="{Binding Background, ElementName=SubMenuBorder}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>

								<ItemsPresenter x:Name="ItemsPresenter" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
												KeyboardNavigation.DirectionalNavigation="Cycle"  KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>

			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Background" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconBrushKey}}"/>
				<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconBorderBrushKey}}"/>

				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>

			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}"/>
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverTextBrushKey}}"/>

				<Setter Property="Background" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarHoverOverSelectedIconBrushKey}}"/>
				<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxMouseOverBrushKey}}"/>
				<Setter Property="Fill" TargetName="RightArrow" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxMouseOverBrushKey}}"/>
			</Trigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarTextInactiveBrushKey}}"/>

				<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxDisabledBrushKey}}"/>
				<Setter Property="Background" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconDisabledBrushKey}}"/>
				<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconDisabledBorderBrushKey}}"/>

				<Setter Property="Fill" TargetName="RightArrow" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxDisabledBrushKey}}"/>
			</Trigger>

			<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="MenuItemWithoutItemsControlTemplate" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
				Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			
			<Grid Margin="-1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="13"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="30"/>
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>

				<ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="3" Height="16"  Width="16"
								  HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

				<Border x:Name="GlyphPanel" Margin="-1,0,0,0" ClipToBounds="False" HorizontalAlignment="Center" VerticalAlignment="Center" 
						Width="22" Height="22" BorderThickness="1" Visibility="Hidden" BorderBrush="#FF26A0DA" 
						Background="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuIconBackgroundBrushKey}}">

					<Path x:Name="Glyph" FlowDirection="LeftToRight" Height="11" Width="10"
						  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
						  Fill="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxBrushKey}}" />
				</Border>

				<ContentPresenter x:Name="menuHeaderContainer" Grid.Column="2" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Left"
								  ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}"
								  ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header"  
								  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				
				<TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
			</Grid>
		</Border>
		
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Background" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconBrushKey}}"/>
				<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconBorderBrushKey}}"/>

				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}"/>
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverTextBrushKey}}"/>
				
				<Setter Property="Background" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarHoverOverSelectedIconBrushKey}}"/>
				<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxMouseOverBrushKey}}"/>
			</Trigger>
			
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarTextInactiveBrushKey}}"/>

				<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarCheckBoxDisabledBrushKey}}"/>
				<Setter Property="Background" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconDisabledBrushKey}}"/>
				<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedIconDisabledBorderBrushKey}}"/>
			</Trigger>
			
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True"/>
					<Condition Property="IsEnabled" Value="False"/>
				</MultiTrigger.Conditions>
				
				<Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="vsCodeMapContextMenuStyle" TargetType="ContextMenu">
		<Setter Property="Template" Value="{DynamicResource CodeMapContextMenuControlTemplate}"/>

		<Setter Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBackgroundGradientBeginBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBorderBrushKey}}"/>
		<Setter Property="HasDropShadow" Value="True" />
	</Style>

	<Style x:Key="vsCodeMapMenuItemStyle" TargetType="MenuItem">
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

		<Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarTextActiveBrushKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBackgroundGradientBeginBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBorderBrushKey}}"/>
		<Setter Property="BorderThickness" Value="0"/>

		<Setter Property="Template" Value="{DynamicResource MenuItemWithoutItemsControlTemplate}"/>

		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{DynamicResource CodeMapMenuItemWithItemsControlTemplate}"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{DynamicResource MenuItemWithoutItemsControlTemplate}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{DynamicResource CodeMapMenuItemWithItemsControlTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->
	<!--#endregion-->
</ResourceDictionary>

 