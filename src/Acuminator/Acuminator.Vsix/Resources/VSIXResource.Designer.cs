//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Acuminator.Vsix {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class VSIXResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VSIXResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Acuminator.Vsix.Resources.VSIXResource", typeof(VSIXResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AntiPlagiarism.
        /// </summary>
        public static string AntiPlagiatorWindowTitle {
            get {
                return ResourceManager.GetString("AntiPlagiatorWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Constant (Ending).
        /// </summary>
        public static string BQLConstantEndingFormatLabel {
            get {
                return ResourceManager.GetString("BQLConstantEndingFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Constant (Prefix).
        /// </summary>
        public static string BQLConstantPrefixFormatLabel {
            get {
                return ResourceManager.GetString("BQLConstantPrefixFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Operators.
        /// </summary>
        public static string BQLOperatorFormatLabel {
            get {
                return ResourceManager.GetString("BQLOperatorFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Parameters.
        /// </summary>
        public static string BQLParameterFormatLabel {
            get {
                return ResourceManager.GetString("BQLParameterFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 1).
        /// </summary>
        public static string BraceLevel_1_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_1_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 10).
        /// </summary>
        public static string BraceLevel_10_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_10_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 11).
        /// </summary>
        public static string BraceLevel_11_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_11_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 12).
        /// </summary>
        public static string BraceLevel_12_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_12_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 13).
        /// </summary>
        public static string BraceLevel_13_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_13_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 14).
        /// </summary>
        public static string BraceLevel_14_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_14_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 2).
        /// </summary>
        public static string BraceLevel_2_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_2_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 3).
        /// </summary>
        public static string BraceLevel_3_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_3_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 4).
        /// </summary>
        public static string BraceLevel_4_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_4_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 5).
        /// </summary>
        public static string BraceLevel_5_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_5_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 6).
        /// </summary>
        public static string BraceLevel_6_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_6_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 7).
        /// </summary>
        public static string BraceLevel_7_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_7_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 8).
        /// </summary>
        public static string BraceLevel_8_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_8_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - BQL Angle Brackets (Level 9).
        /// </summary>
        public static string BraceLevel_9_FormatLabel {
            get {
                return ResourceManager.GetString("BraceLevel_9_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Analysis.
        /// </summary>
        public static string Category_CodeAnalysis {
            get {
                return ResourceManager.GetString("Category_CodeAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BQL Coloring.
        /// </summary>
        public static string Category_Coloring {
            get {
                return ResourceManager.GetString("Category_Coloring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BQL Outlining.
        /// </summary>
        public static string Category_Outlining {
            get {
                return ResourceManager.GetString("Category_Outlining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CodeMap.
        /// </summary>
        public static string CodeMapWindowTitle {
            get {
                return ResourceManager.GetString("CodeMapWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - DAC Extension Name.
        /// </summary>
        public static string DacExtensionFormatLabel {
            get {
                return ResourceManager.GetString("DacExtensionFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - DAC Field Name.
        /// </summary>
        public static string DacFieldFormatLabel {
            get {
                return ResourceManager.GetString("DacFieldFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - DAC Name.
        /// </summary>
        public static string DacFormatLabel {
            get {
                return ResourceManager.GetString("DacFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - PXAction.
        /// </summary>
        public static string PXActionFormatLabel {
            get {
                return ResourceManager.GetString("PXActionFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acuminator - PXGraph.
        /// </summary>
        public static string PXGraphFormatLabel {
            get {
                return ResourceManager.GetString("PXGraphFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the diagnostics that are necessary only for ISV Solution Certification. For non-ISV solutions, these diagnostics are informational..
        /// </summary>
        public static string Setting_CodeAnalysis_IsvSpecificAnalyzersEnabled_Description {
            get {
                return ResourceManager.GetString("Setting_CodeAnalysis_IsvSpecificAnalyzersEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable additional diagnostics for ISV Solution Certification.
        /// </summary>
        public static string Setting_CodeAnalysis_IsvSpecificAnalyzersEnabled_Title {
            get {
                return ResourceManager.GetString("Setting_CodeAnalysis_IsvSpecificAnalyzersEnabled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyse the whole invocation tree in a recursive manner..
        /// </summary>
        public static string Setting_CodeAnalysis_RecursiveAnalysisEnabled_Description {
            get {
                return ResourceManager.GetString("Setting_CodeAnalysis_RecursiveAnalysisEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable recursive code analysis.
        /// </summary>
        public static string Setting_CodeAnalysis_RecursiveAnalysisEnabled_Title {
            get {
                return ResourceManager.GetString("Setting_CodeAnalysis_RecursiveAnalysisEnabled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colorize BQL syntax. If set to false, all Acuminator coloring is turned off..
        /// </summary>
        public static string Setting_ColoringEnabled_Description {
            get {
                return ResourceManager.GetString("Setting_ColoringEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable coloring.
        /// </summary>
        public static string Setting_ColoringEnabled_Title {
            get {
                return ResourceManager.GetString("Setting_ColoringEnabled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colorize code only inside BQL commands (only for Roslyn coloring)..
        /// </summary>
        public static string Setting_ColorOnlyInsideBQL_Description {
            get {
                return ResourceManager.GetString("Setting_ColorOnlyInsideBQL_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colorize code only inside BQL commands.
        /// </summary>
        public static string Setting_ColorOnlyInsideBQL_Title {
            get {
                return ResourceManager.GetString("Setting_ColorOnlyInsideBQL_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colorize PXAction declarations (only for Roslyn coloring)..
        /// </summary>
        public static string Setting_PXActionColoringEnabled_Description {
            get {
                return ResourceManager.GetString("Setting_PXActionColoringEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable PXAction coloring.
        /// </summary>
        public static string Setting_PXActionColoringEnabled_Title {
            get {
                return ResourceManager.GetString("Setting_PXActionColoringEnabled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colorize PXGraph declarations (only for Roslyn coloring)..
        /// </summary>
        public static string Setting_PXGraphColoringEnabled_Description {
            get {
                return ResourceManager.GetString("Setting_PXGraphColoringEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable PXGraph coloring.
        /// </summary>
        public static string Setting_PXGraphColoringEnabled_Title {
            get {
                return ResourceManager.GetString("Setting_PXGraphColoringEnabled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collapse parts of BQL commands (only for Roslyn coloring). If set to false, BQL commands are collapsed only entirely..
        /// </summary>
        public static string Setting_UseBqlDetailedOutlining_Description {
            get {
                return ResourceManager.GetString("Setting_UseBqlDetailedOutlining_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outline parts of BQL commands.
        /// </summary>
        public static string Setting_UseBqlDetailedOutlining_Title {
            get {
                return ResourceManager.GetString("Setting_UseBqlDetailedOutlining_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collapse BQL commands (only for Roslyn coloring)..
        /// </summary>
        public static string Setting_UseBqlOutlining_Description {
            get {
                return ResourceManager.GetString("Setting_UseBqlOutlining_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use BQL outlining.
        /// </summary>
        public static string Setting_UseBqlOutlining_Title {
            get {
                return ResourceManager.GetString("Setting_UseBqlOutlining_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the syntax colorizer based on regular expressions, which provides worse coloring but works faster. If set to false, Roslyn coloring is used..
        /// </summary>
        public static string Setting_UseRegexColoring_Description {
            get {
                return ResourceManager.GetString("Setting_UseRegexColoring_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use RegEx colorizer.
        /// </summary>
        public static string Setting_UseRegexColoring_Title {
            get {
                return ResourceManager.GetString("Setting_UseRegexColoring_Title", resourceCulture);
            }
        }
    }
}
