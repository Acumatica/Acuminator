//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Acuminator.Analyzers {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Acuminator.Analyzers.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert an event handler signature to the generic one. Please, be careful because an event handler can be overwritten somewhere else..
        /// </summary>
        public static string EventHandlerSignatureCodeActionTitle {
            get {
                return ResourceManager.GetString("EventHandlerSignatureCodeActionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix PXAction handler signature.
        /// </summary>
        public static string PX1000Fix {
            get {
                return ResourceManager.GetString("PX1000Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid PXAction handler signature.
        /// </summary>
        public static string PX1000Title {
            get {
                return ResourceManager.GetString("PX1000Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a graph instance by using the factory method.
        /// </summary>
        public static string PX1001Fix {
            get {
                return ResourceManager.GetString("PX1001Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PXGraph instance must be created with the PXGraph.CreateInstance() factory method.
        /// </summary>
        public static string PX1001Title {
            get {
                return ResourceManager.GetString("PX1001Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add the type attribute corresponding to the list attribute.
        /// </summary>
        public static string PX1002Fix {
            get {
                return ResourceManager.GetString("PX1002Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field must have the type attribute corresponding to the list attribute.
        /// </summary>
        public static string PX1002Title {
            get {
                return ResourceManager.GetString("PX1002Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using a specific implementation of PXGraph.
        /// </summary>
        public static string PX1003Title {
            get {
                return ResourceManager.GetString("PX1003Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider changing the declaration order.
        /// </summary>
        public static string PX1004Fix {
            get {
                return ResourceManager.GetString("PX1004Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This order of view declarations will cause creation of two cache instances: {0} and {1}.
        /// </summary>
        public static string PX1004Title {
            get {
                return ResourceManager.GetString("PX1004Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the view delegate name to match the view name.
        /// </summary>
        public static string PX1005Fix {
            get {
                return ResourceManager.GetString("PX1005Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A possible typo in the view delegate name. The view name for this delegate: {0}.
        /// </summary>
        public static string PX1005MessageFormat {
            get {
                return ResourceManager.GetString("PX1005MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A possible typo in the view delegate name.
        /// </summary>
        public static string PX1005Title {
            get {
                return ResourceManager.GetString("PX1005Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider changing the declaration order.
        /// </summary>
        public static string PX1006Fix {
            get {
                return ResourceManager.GetString("PX1006Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This order of view declarations will cause creation of one cache instance for the following DACs: {0} and {1}.
        /// </summary>
        public static string PX1006Title {
            get {
                return ResourceManager.GetString("PX1006Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a DAC instance by using the factory method.
        /// </summary>
        public static string PX1007Fix {
            get {
                return ResourceManager.GetString("PX1007Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance of {0} must be created with the PXCache&lt;{0}&gt;.CreateInstance() factory method.
        /// </summary>
        public static string PX1007MessageFormat {
            get {
                return ResourceManager.GetString("PX1007MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DAC instance must be created with the PXCache.CreateInstance() factory method.
        /// </summary>
        public static string PX1007Title {
            get {
                return ResourceManager.GetString("PX1007Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference of @this graph in this delegate will cause synchronous delegate execution.
        /// </summary>
        public static string PX1008Title {
            get {
                return ResourceManager.GetString("PX1008Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the base type to a PXCacheExtension overload.
        /// </summary>
        public static string PX1009Fix {
            get {
                return ResourceManager.GetString("PX1009Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple levels of inheritance are not supported for PXCacheExtension.
        /// </summary>
        public static string PX1009Title {
            get {
                return ResourceManager.GetString("PX1009Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset StartRow.
        /// </summary>
        public static string PX1010Fix {
            get {
                return ResourceManager.GetString("PX1010Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a delegate applies paging in an inner select, StartRow must be reset (If StartRow is not reset, paging will be applied twice).
        /// </summary>
        public static string PX1010Title {
            get {
                return ResourceManager.GetString("PX1010Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark the type as sealed.
        /// </summary>
        public static string PX1011Fix {
            get {
                return ResourceManager.GetString("PX1011Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because multiple levels of inheritance are not supported for PXCacheExtension, the derived type can be marked as sealed.
        /// </summary>
        public static string PX1011Title {
            get {
                return ResourceManager.GetString("PX1011Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the type parameter of the action to the primary DAC ({0}).
        /// </summary>
        public static string PX1012Fix {
            get {
                return ResourceManager.GetString("PX1012Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type parameter of the {0} action is not the primary DAC. You should specify the {1} DAC as the type parameter to make the action available on the toolbar..
        /// </summary>
        public static string PX1012Title {
            get {
                return ResourceManager.GetString("PX1012Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the type nullable.
        /// </summary>
        public static string PX1014Fix {
            get {
                return ResourceManager.GetString("PX1014Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DAC field must have a nullable type.
        /// </summary>
        public static string PX1014Title {
            get {
                return ResourceManager.GetString("PX1014Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of arguments passed to the {0} method does not match the number of BQL statement parameters. The number of required arguments is {1}..
        /// </summary>
        public static string PX1015MessageFormatWithOnlyRequiredParams {
            get {
                return ResourceManager.GetString("PX1015MessageFormatWithOnlyRequiredParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of arguments passed to the {0} method does not match the number of BQL statement parameters. The number of arguments should be from {1} to {2}..
        /// </summary>
        public static string PX1015MessageFormatWithRequiredAndOptionalParams {
            get {
                return ResourceManager.GetString("PX1015MessageFormatWithRequiredAndOptionalParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of arguments passed to the method does not match the number of BQL statement parameters.
        /// </summary>
        public static string PX1015Title {
            get {
                return ResourceManager.GetString("PX1015Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The graph with the specified primary DAC type does not contain a view of this type.
        /// </summary>
        public static string PX1018Title {
            get {
                return ResourceManager.GetString("PX1018Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the property type so that it corresponds to the attribute type.
        /// </summary>
        public static string PX1021PropertyFix {
            get {
                return ResourceManager.GetString("PX1021PropertyFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the DAC field attribute does not correspond to the property type.
        /// </summary>
        public static string PX1021Title {
            get {
                return ResourceManager.GetString("PX1021Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute aggregates multiple PXDBScalar or PXDBCalced attributes.
        /// </summary>
        public static string PX1023MultipleSpecialTypeAttributesOnAggregatorsTitle {
            get {
                return ResourceManager.GetString("PX1023MultipleSpecialTypeAttributesOnAggregatorsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DAC property cannot be marked with multiple PXDBScalar or PXDBCalced attributes.
        /// </summary>
        public static string PX1023MultipleSpecialTypeAttributesOnPropertyTitle {
            get {
                return ResourceManager.GetString("PX1023MultipleSpecialTypeAttributesOnPropertyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute aggregates incompatible field type attributes.
        /// </summary>
        public static string PX1023MultipleTypeAttributesOnAggregatorsTitle {
            get {
                return ResourceManager.GetString("PX1023MultipleTypeAttributesOnAggregatorsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DAC property cannot be marked with multiple field type attributes.
        /// </summary>
        public static string PX1023MultipleTypeAttributesOnPropertyTitle {
            get {
                return ResourceManager.GetString("PX1023MultipleTypeAttributesOnPropertyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave the selected attribute and remove other PXDBScalar or PXDBCalced attributes from the property.
        /// </summary>
        public static string PX1023SpecialAttributesFix {
            get {
                return ResourceManager.GetString("PX1023SpecialAttributesFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave the selected attribute and remove other field type attributes from the property.
        /// </summary>
        public static string PX1023TypeAttributesFix {
            get {
                return ResourceManager.GetString("PX1023TypeAttributesFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the DAC field type abstract.
        /// </summary>
        public static string PX1024Fix {
            get {
                return ResourceManager.GetString("PX1024Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DAC field type must be abstract.
        /// </summary>
        public static string PX1024Title {
            get {
                return ResourceManager.GetString("PX1024Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove underscores from the DAC declaration.
        /// </summary>
        public static string PX1026Fix {
            get {
                return ResourceManager.GetString("PX1026Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Underscores cannot be used in DAC declarations.
        /// </summary>
        public static string PX1026Title {
            get {
                return ResourceManager.GetString("PX1026Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the forbidden field from the DAC declaration.
        /// </summary>
        public static string PX1027Fix {
            get {
                return ResourceManager.GetString("PX1027Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} field cannot be declared within a DAC declaration.
        /// </summary>
        public static string PX1027MessageFormat {
            get {
                return ResourceManager.GetString("PX1027MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System fields cannot be declared within a DAC declaration.
        /// </summary>
        public static string PX1027Title {
            get {
                return ResourceManager.GetString("PX1027Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the constructor.
        /// </summary>
        public static string PX1028Fix {
            get {
                return ResourceManager.GetString("PX1028Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructors in DACs are prohibited.
        /// </summary>
        public static string PX1028Title {
            get {
                return ResourceManager.GetString("PX1028Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXGraph instances cannot be used inside DAC properties.
        /// </summary>
        public static string PX1029Title {
            get {
                return ResourceManager.GetString("PX1029Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set PersistingCheck of PXDefaultAttribute to Nothing.
        /// </summary>
        public static string PX1030FixBound {
            get {
                return ResourceManager.GetString("PX1030FixBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace with PXUnboundDefaultAttribute.
        /// </summary>
        public static string PX1030FixUnbound {
            get {
                return ResourceManager.GetString("PX1030FixUnbound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider setting PersistingCheck to Nothing or replacing PXDefault with PXUnboundDefault.
        /// </summary>
        public static string PX1030TitleDefaultAttributeOnDac {
            get {
                return ResourceManager.GetString("PX1030TitleDefaultAttributeOnDac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PXDefault attribute of the field is used incorrectly. PXDefaultAttribute used on a custom field defined in PXCacheExtension can potentially prevent updates to existing records when used without PersistingCheck property set to Nothing.
        /// </summary>
        public static string PX1030TitleDefaultAttributeOnDacExtension {
            get {
                return ResourceManager.GetString("PX1030TitleDefaultAttributeOnDacExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DACs cannot contain instance methods.
        /// </summary>
        public static string PX1031Title {
            get {
                return ResourceManager.GetString("PX1031Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DAC properties cannot contain method invocations.
        /// </summary>
        public static string PX1032Title {
            get {
                return ResourceManager.GetString("PX1032Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move the code to the Initialize() method.
        /// </summary>
        public static string PX1040Fix {
            get {
                return ResourceManager.GetString("PX1040Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructors in BLC extensions are strictly prohibited. Use the Initialize() method instead..
        /// </summary>
        public static string PX1040Title {
            get {
                return ResourceManager.GetString("PX1040Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Surround the BQL statement or database query execution with a connection scope.
        /// </summary>
        public static string PX1042Fix {
            get {
                return ResourceManager.GetString("PX1042Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In a RowSelecting handler, BQL statements and other database queries must be executed only inside a separate connection scope.
        /// </summary>
        public static string PX1042Title {
            get {
                return ResourceManager.GetString("PX1042Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes cannot be saved to the database from the event handler.
        /// </summary>
        public static string PX1043Title {
            get {
                return ResourceManager.GetString("PX1043Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the methods of the PXCache.Persist family can be used to save changes to the database from a RowPersisting event handler.
        /// </summary>
        public static string PX1043TitleRowPersisting {
            get {
                return ResourceManager.GetString("PX1043TitleRowPersisting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing PXCache is prohibited in the {0} event handler.
        /// </summary>
        public static string PX1044MessageFormat {
            get {
                return ResourceManager.GetString("PX1044MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing PXCache is prohibited in this event handler.
        /// </summary>
        public static string PX1044Title {
            get {
                return ResourceManager.GetString("PX1044Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PXGraph instance cannot be created within an event handler.
        /// </summary>
        public static string PX1045Title {
            get {
                return ResourceManager.GetString("PX1045Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A long-running operation cannot be started within an event handler.
        /// </summary>
        public static string PX1046Title {
            get {
                return ResourceManager.GetString("PX1046Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DAC instance passed to the {0} event handler cannot be modified inside this event handler.
        /// </summary>
        public static string PX1047MessageFormat {
            get {
                return ResourceManager.GetString("PX1047MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DAC instance passed to the event handler cannot be modified inside the event handler.
        /// </summary>
        public static string PX1047Title {
            get {
                return ResourceManager.GetString("PX1047Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the DAC instance that is passed in the event arguments can be modified in the {0} event handler.
        /// </summary>
        public static string PX1048MessageFormat {
            get {
                return ResourceManager.GetString("PX1048MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the DAC instance that is passed in the event arguments can be modified in this event handler.
        /// </summary>
        public static string PX1048Title {
            get {
                return ResourceManager.GetString("PX1048Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In a RowSelected handler, BQL statements and other database queries should be avoided.
        /// </summary>
        public static string PX1049Title {
            get {
                return ResourceManager.GetString("PX1049Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hardcoded strings are not allowed as parameters for localization methods and PXException constructors. You should use string constants from the appropriate localizable messages class..
        /// </summary>
        public static string PX1050Title {
            get {
                return ResourceManager.GetString("PX1050Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-localizable strings are not allowed as parameters for localization methods and PXException constructors. You should mark the appropriate messages class with PXLocalizableAttribute..
        /// </summary>
        public static string PX1051Title {
            get {
                return ResourceManager.GetString("PX1051Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect format string in the localization method. You should use correct format string constants from the appropriate localizable messages class..
        /// </summary>
        public static string PX1052Title {
            get {
                return ResourceManager.GetString("PX1052Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strings concatenation is not allowed as a parameter for localization methods and PXException constructors. You should use localization format methods instead..
        /// </summary>
        public static string PX1053Title {
            get {
                return ResourceManager.GetString("PX1053Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PXGraph instance should not start PXLongOperation during the initialization phase.
        /// </summary>
        public static string PX1054Title {
            get {
                return ResourceManager.GetString("PX1054Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the field bound to the identity column be a non-key field and leave all other key fields untouched.
        /// </summary>
        public static string PX1055FixEditIdentityAttribute {
            get {
                return ResourceManager.GetString("PX1055FixEditIdentityAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the field bound to the identity column be the only key field in the DAC.
        /// </summary>
        public static string PX1055FixEditKeyFieldAttributes {
            get {
                return ResourceManager.GetString("PX1055FixEditKeyFieldAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the definition of the field bound to the identity column and leave all other key fields untouched. (You should drop the corresponding identity column from the database manually.).
        /// </summary>
        public static string PX1055FixRemoveIdentityAttribute {
            get {
                return ResourceManager.GetString("PX1055FixRemoveIdentityAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid primary key of the DAC. Use a single identity field or one or multiple natural fields for the key..
        /// </summary>
        public static string PX1055Title {
            get {
                return ResourceManager.GetString("PX1055Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PXGraph instance cannot be initialized while another PXGraph instance is being initialized.
        /// </summary>
        public static string PX1057Title {
            get {
                return ResourceManager.GetString("PX1057Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PXGraph instance should not save changes to the database during the initialization phase.
        /// </summary>
        public static string PX1058Title {
            get {
                return ResourceManager.GetString("PX1058Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes to PXCache cannot be performed during PXGraph initialization.
        /// </summary>
        public static string PX1059Title {
            get {
                return ResourceManager.GetString("PX1059Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The state of fields and actions can be configured only in the RowSelected event handler.
        /// </summary>
        public static string PX1070Title {
            get {
                return ResourceManager.GetString("PX1070Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actions cannot be executed within event handlers.
        /// </summary>
        public static string PX1071Title {
            get {
                return ResourceManager.GetString("PX1071Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace {0} with the following PXGraph instance: {1}.
        /// </summary>
        public static string PX1072Fix {
            get {
                return ResourceManager.GetString("PX1072Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BQL queries must be executed within the context of an existing PXGraph instance.
        /// </summary>
        public static string PX1072Title {
            get {
                return ResourceManager.GetString("PX1072Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exceptions cannot be thrown in the RowPersisted event handler.
        /// </summary>
        public static string PX1073Title {
            get {
                return ResourceManager.GetString("PX1073Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXSetupNotEnteredException cannot be thrown in the {0} event handler. Use the RowSelected event handler instead.
        /// </summary>
        public static string PX1074MessageFormat {
            get {
                return ResourceManager.GetString("PX1074MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXSetupNotEnteredException cannot be thrown in this event handler. Use the RowSelected event handler instead.
        /// </summary>
        public static string PX1074Title {
            get {
                return ResourceManager.GetString("PX1074Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXCache.RaiseExceptionHandling cannot be invoked from the {0} event handler.
        /// </summary>
        public static string PX1075MessageFormat {
            get {
                return ResourceManager.GetString("PX1075MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXCache.RaiseExceptionHandling cannot be invoked from this event handler.
        /// </summary>
        public static string PX1075Title {
            get {
                return ResourceManager.GetString("PX1075Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data view delegates should not start long-running operations.
        /// </summary>
        public static string PX1080Title {
            get {
                return ResourceManager.GetString("PX1080Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actions cannot be executed during the PXGraph initialization.
        /// </summary>
        public static string PX1081Title {
            get {
                return ResourceManager.GetString("PX1081Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actions cannot be executed within data view delegates.
        /// </summary>
        public static string PX1082Title {
            get {
                return ResourceManager.GetString("PX1082Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes cannot be saved to the database from data view delegates.
        /// </summary>
        public static string PX1083Title {
            get {
                return ResourceManager.GetString("PX1083Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXGraph instances cannot be initialized within data view delegates.
        /// </summary>
        public static string PX1084Title {
            get {
                return ResourceManager.GetString("PX1084Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BQL statements and other database queries should not be executed during the PXGraph initialization.
        /// </summary>
        public static string PX1085Title {
            get {
                return ResourceManager.GetString("PX1085Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXSetupNotEnteredException cannot be thrown in long-running operations.
        /// </summary>
        public static string PX1086Title {
            get {
                return ResourceManager.GetString("PX1086Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This invocation of the base data view delegate can cause a StackOverflowException.
        /// </summary>
        public static string PX1087Title {
            get {
                return ResourceManager.GetString("PX1087Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing delegates cannot use the data views from processing graphs except for the data views of the PXFilter, PXProcessingBase, or PXSetup types.
        /// </summary>
        public static string PX1088Title {
            get {
                return ResourceManager.GetString("PX1088Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The state of fields and actions cannot be configured in action delegates.
        /// </summary>
        public static string PX1089Title {
            get {
                return ResourceManager.GetString("PX1089Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PXSetupNotEnteredException cannot be thrown in action handlers.
        /// </summary>
        public static string PX1090Title {
            get {
                return ResourceManager.GetString("PX1090Title", resourceCulture);
            }
        }
    }
}
