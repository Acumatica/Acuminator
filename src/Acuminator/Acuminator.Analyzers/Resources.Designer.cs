//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Acuminator.Analyzers {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Acuminator.Analyzers.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix PXAction handler signature.
        /// </summary>
        public static string PX1000Fix {
            get {
                return ResourceManager.GetString("PX1000Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid PXAction handler signature.
        /// </summary>
        public static string PX1000Title {
            get {
                return ResourceManager.GetString("PX1000Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a graph instance by using the factory method.
        /// </summary>
        public static string PX1001Fix {
            get {
                return ResourceManager.GetString("PX1001Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PXGraph instance must be created with the PXGraph.CreateInstance() factory method.
        /// </summary>
        public static string PX1001Title {
            get {
                return ResourceManager.GetString("PX1001Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add the type attribute corresponding to the list attribute.
        /// </summary>
        public static string PX1002Fix {
            get {
                return ResourceManager.GetString("PX1002Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field must have the type attribute corresponding to the list attribute.
        /// </summary>
        public static string PX1002Title {
            get {
                return ResourceManager.GetString("PX1002Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using a specific implementation of PXGraph.
        /// </summary>
        public static string PX1003Title {
            get {
                return ResourceManager.GetString("PX1003Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider changing the declaration order.
        /// </summary>
        public static string PX1004Fix {
            get {
                return ResourceManager.GetString("PX1004Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This order of view declarations will cause creation of two cache instances: {0} and {1}.
        /// </summary>
        public static string PX1004Title {
            get {
                return ResourceManager.GetString("PX1004Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the view delegate name to match the view name.
        /// </summary>
        public static string PX1005Fix {
            get {
                return ResourceManager.GetString("PX1005Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A possible typo in the view delegate name. The view name for this delegate: {0}.
        /// </summary>
        public static string PX1005MessageFormat {
            get {
                return ResourceManager.GetString("PX1005MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A possible typo in the view delegate name.
        /// </summary>
        public static string PX1005Title {
            get {
                return ResourceManager.GetString("PX1005Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider changing the declaration order.
        /// </summary>
        public static string PX1006Fix {
            get {
                return ResourceManager.GetString("PX1006Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This order of view declarations will cause creation of one cache instance for the following DACs: {0} and {1}.
        /// </summary>
        public static string PX1006Title {
            get {
                return ResourceManager.GetString("PX1006Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a DAC instance by using the factory method.
        /// </summary>
        public static string PX1007Fix {
            get {
                return ResourceManager.GetString("PX1007Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance of {0} must be created with the PXCache&lt;{0}&gt;.CreateInstance() factory method
        ///.
        /// </summary>
        public static string PX1007MessageFormat {
            get {
                return ResourceManager.GetString("PX1007MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DAC instance must be created with the PXCache.CreateInstance() factory method.
        /// </summary>
        public static string PX1007Title {
            get {
                return ResourceManager.GetString("PX1007Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference of @this graph in this delegate will cause synchronous delegate execution.
        /// </summary>
        public static string PX1008Title {
            get {
                return ResourceManager.GetString("PX1008Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the base type to a PXCacheExtension overload.
        /// </summary>
        public static string PX1009Fix {
            get {
                return ResourceManager.GetString("PX1009Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple levels of inheritance are not supported for PXCacheExtension.
        /// </summary>
        public static string PX1009Title {
            get {
                return ResourceManager.GetString("PX1009Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset StartRow.
        /// </summary>
        public static string PX1010Fix {
            get {
                return ResourceManager.GetString("PX1010Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a delegate applies paging in an inner select, StartRow must be reset (If StartRow is not reset, paging will be applied twice).
        /// </summary>
        public static string PX1010Title {
            get {
                return ResourceManager.GetString("PX1010Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark the type as sealed.
        /// </summary>
        public static string PX1011Fix {
            get {
                return ResourceManager.GetString("PX1011Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because multiple levels of inheritance are not supported for PXCacheExtension, the derived type can be marked as sealed.
        /// </summary>
        public static string PX1011Title {
            get {
                return ResourceManager.GetString("PX1011Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the type nullable.
        /// </summary>
        public static string PX1014Fix {
            get {
                return ResourceManager.GetString("PX1014Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DAC field must have a nullable type.
        /// </summary>
        public static string PX1014Title {
            get {
                return ResourceManager.GetString("PX1014Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of arguments passed to the {0} method does not match the number of BQL statement parameters. The number of required arguments is {1}..
        /// </summary>
        public static string PX1015TitleSuffixWithOnlyRequiredParams {
            get {
                return ResourceManager.GetString("PX1015TitleSuffixWithOnlyRequiredParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of arguments passed to the {0} method does not match the number of BQL statement parameters. The number of arguments should be from {1} to {2}..
        /// </summary>
        public static string PX1015TitleSuffixWithRequiredAndOptionalParams {
            get {
                return ResourceManager.GetString("PX1015TitleSuffixWithRequiredAndOptionalParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the property type so that it corresponds to the attribute type.
        /// </summary>
        public static string PX1021PropertyFix {
            get {
                return ResourceManager.GetString("PX1021PropertyFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the DAC field attribute does not correspond to the property type.
        /// </summary>
        public static string PX1021Title {
            get {
                return ResourceManager.GetString("PX1021Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave the selected field attribute and remove other field attributes from the property.
        /// </summary>
        public static string PX1023Fix {
            get {
                return ResourceManager.GetString("PX1023Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DAC property cannot be marked with multiple field attributes.
        /// </summary>
        public static string PX1023Title {
            get {
                return ResourceManager.GetString("PX1023Title", resourceCulture);
            }
        }
    }
}
