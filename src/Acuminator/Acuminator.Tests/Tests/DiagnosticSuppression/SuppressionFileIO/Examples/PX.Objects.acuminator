<?xml version="1.0" encoding="utf-8"?>
<suppressions>
  <suppressMessage id="PX1000">
    <target>PX.Objects.IN.INScanTransfer.INScanTransferCartsSupport.Report(string, params object[])</target>
    <syntaxNode>Report</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.ViewAllActivities(PX.Data.PXAdapter)</target>
    <syntaxNode>new ActivitiesMaint()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.CR.CRCaseMaint.Assign(PX.Data.PXAdapter)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;CRCase&gt;(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.CR.CRMembersList&lt;TPrimary, TMember, TFilter&gt;.itemSource()</target>
    <syntaxNode>new CRMarketingListMaint()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.CR.UpdateBAccountMassProcess.GetPrimaryGraph(PX.Objects.CR.BAccount)</target>
    <syntaxNode>new BusinessAccountMaint()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.CS.Email.ExchangeBaseLogicSyncCommand&lt;GraphType, TPrimary, ExchangeType&gt;.Uploader</target>
    <syntaxNode>new UploadFileMaintenance()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.ActivityService.OpenMailPopup(string)</target>
    <syntaxNode>new CREmailActivityMaint()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.EPApprovalList&lt;SourceAssign, Approved, Rejected&gt;.GetApproversFromNextStep(SourceAssign, PX.Objects.EP.EPAssignmentMap, int?)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;SourceAssign&gt;(_Graph)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.EPAssignmentProcessor&lt;Table&gt;.Approve(Table, PX.Objects.EP.EPAssignmentMap, int?)</target>
    <syntaxNode>new EPAssignmentHelper&lt;Table&gt;(_Graph)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.EPAssignmentProcessor&lt;Table&gt;.Approve(Table, PX.Objects.EP.EPAssignmentMap, int?)</target>
    <syntaxNode>new EPAssignmentProcessHelper&lt;Table&gt;(_Graph)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.EPAssignmentProcessor&lt;Table&gt;.Assign(Table, int?)</target>
    <syntaxNode>new EPAssignmentHelper&lt;Table&gt;(_Graph)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.EPAssignmentProcessor&lt;Table&gt;.Assign(Table, int?)</target>
    <syntaxNode>new EPAssignmentProcessHelper&lt;Table&gt;(_Graph)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.PXCalendarSyncHandler.Write(System.IO.Stream, PX.Export.PXFileExportHandler.ProcessBag)</target>
    <syntaxNode>new EPCalendarSync()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.EP.PXReminderSyncHandler.ProcessRequest(System.Web.HttpContext)</target>
    <syntaxNode>new TasksAndEventsReminder()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.IN.INPIReview.CompletePI(PX.Data.PXAdapter)</target>
    <syntaxNode>new INPIReview()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.PO.POReceiptEntry.Assign(PX.Data.PXAdapter)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;POReceipt&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.RQ.RQRequestEntry.Hold(PX.Data.PXAdapter)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;RQRequest&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.RQ.RQRequestEntry.assign(PX.Data.PXAdapter)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;RQRequest&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.RQ.RQRequisitionEntry.Hold(PX.Data.PXAdapter)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;RQRequisition&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.RQ.RQRequisitionEntry.assign(PX.Data.PXAdapter)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;RQRequisition&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.SO.SOOrderEntry.Action(PX.Data.PXAdapter, int?, System.DateTime?, string, string, string)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;SOOrder&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1001">
    <target>PX.Objects.SO.SOShipmentEntry.Action(PX.Data.PXAdapter, int?, string)</target>
    <syntaxNode>new EPAssignmentProcessor&lt;SOShipment&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1002">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.DetailsResult.Status</target>
    <syntaxNode>Status</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1002">
    <target>PX.Objects.EP.EPApproval.DocType</target>
    <syntaxNode>DocType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1002">
    <target>PX.Objects.EP.EPAttendeeMessage.Type</target>
    <syntaxNode>Type</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1002">
    <target>PX.Objects.EP.EPOtherAttendeeMessage.Type</target>
    <syntaxNode>Type</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1002">
    <target>PX.Objects.PM.ProFormaProcess.ProFormaFilter.Action</target>
    <syntaxNode>Action</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.AR.ARStatementPrint.MarkAsDoNotPrint(PX.Objects.AR.ARStatementPrint.PrintParameters, System.Collections.Generic.IEnumerable&lt;PX.Objects.AR.ARStatementPrint.DetailsResult&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.AR.ARStatementPrint.PrintStatements(PX.Objects.AR.ARStatementPrint.PrintParameters, System.Collections.Generic.IEnumerable&lt;PX.Objects.AR.ARStatementPrint.DetailsResult&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CA.Descriptor.ReportFunctions.CuryConvBase(object, object, object, object)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CA.Descriptor.ReportFunctions.FindCurrencyRate(string, string, string, System.DateTime)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CA.Descriptor.ReportFunctions.GetBucketDescriptionForAgedReport(System.DateTime?, int?, int?, int?, int?, bool?, bool?, int?)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CA.Descriptor.ReportFunctions.GetBucketDescriptionForAgedReport(System.DateTime?, int?, int?, int?, int?, bool?, bool?, int?, int, bool)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CA.Descriptor.ReportFunctions.GetBucketNumberForAgedReport(System.DateTime?, System.DateTime?, int?, int?, int?, int?, bool?, bool?)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CA.Descriptor.ReportFunctions.GetBucketNumberForAgedReport(System.DateTime?, System.DateTime?, int?, int?, int?, int?, bool?, bool?, int)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.BAccountUtility.ViewOnMap(PX.Objects.CR.Address)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.BAccountUtility.ViewOnMap(PX.Objects.CR.CRAddress)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.BAccountUtility.ViewOnMap&lt;TAddress, FCountryID&gt;(PX.Objects.CS.IAddress)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRAttributeList&lt;TEntity&gt;.ReferenceRowUpdatingHandler(PX.Data.PXCache, PX.Data.PXRowUpdatingEventArgs)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRCacheIndependentPrimaryGraphListAttribute.GetGraphType(PX.Data.PXCache, ref object, bool, System.Type)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRDuplicateBAccountList.MergeBAccounts(int, System.Collections.Generic.List&lt;PX.Objects.CR.BAccount&gt;, System.Collections.Generic.List&lt;PX.Data.MassProcess.FieldValue&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRDuplicateContactList.MergeContacts(int, System.Collections.Generic.List&lt;PX.Objects.CR.Contact&gt;, System.Collections.Generic.List&lt;PX.Data.MassProcess.FieldValue&gt;, bool)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CREmailActivityMaint.loadEmailSource()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRGrammProcess.Processor.Processor()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRLeadContactValidationProcess.ProcessValidation(PX.Objects.CR.CRLeadContactValidationProcess.ValidationFilter, PX.Objects.CR.Contact)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRMassMailMaint.SendMassMail(int?, string, string, string, System.Collections.Generic.IEnumerable&lt;PX.Objects.CR.CRMassMailMaint.Recipient&gt;, bool, PX.Objects.CR.CRMassMailMaint, PX.Objects.CR.CRMassMail, bool)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CRSMEmailPrimaryGraphAttribute.GetGraphType(PX.Data.PXCache, ref object, bool, System.Type)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.CSAttributeGroupList&lt;TClass, TEntity&gt;.DeleteAttributesForGroup(PX.Data.PXGraph, PX.Objects.CS.CSAttributeGroup)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.ContactMaint.GetContactWeight(PX.Objects.CR.Contact)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.MergeMaint.ReadProperties(string)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.OpportunityMaint.SalesTax.FindCROpportunityTax(PX.Objects.CR.CRTaxTran)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.PreferencesGeneralMaintExt.SetContactsEasternOrder()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.PreferencesGeneralMaintExt.SetContactsEasternWithTitleOrder()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.PreferencesGeneralMaintExt.SetContactsLegacyOrder()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.PreferencesGeneralMaintExt.SetContactsWesternOrder()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CR.PreferencesGeneralMaintExt.UpdateBAccounts()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.CS.Email.PXEmailSyncHelper.GetConfig(int)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.Common.Aging.AgingEngine.GetPeriodAgingBucketDescriptions(PX.Objects.GL.FinPeriods.IFinPeriodRepository, System.DateTime, PX.Objects.Common.Aging.AgingDirection, int)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.Common.RepositoryBase&lt;TNode&gt;.RepositoryBase(PX.Data.PXGraph)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.ActivityService.ActivityTypeDeinition.PX.Data.IPrefetchable.Prefetch()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.CommonMailReceiveProvider.GetGraph()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.CommonMailReceiveProvider.UIDsCache.Prefetch()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.CommonMailSendProvider.MessageProcessor.GenerateBody(string, PX.Objects.EP.CommonMailSendProvider.AttachmentCollection)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.CommonMailSendProvider.MessageProcessor.MessageProcessor(int?)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.CommonMailSendProvider.MessageProcessor.ReadTemplateAttachments(PX.Objects.CR.SMEmail)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.CommonMailSendProvider.Send(int)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.CommonMailSendProvider.SendMessage(object)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.EPApprovalProcess.Approve(System.Collections.Generic.List&lt;PX.Objects.EP.EPApprovalProcess.EPOwned&gt;, bool)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.EPEventVCalendarProcessor.Graph</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.EPUsers.EmployerEmail</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.NewAttendeeSelectorAttribute.Definition.Prefetch(object)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.NotificationGenerator.NotificationGenerator()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.ReportNotificationGenerator.Send(int?, PX.Reports.Mail.Message, string, System.Collections.Generic.IEnumerable&lt;PX.Objects.CS.NotificationRecipient&gt;, int?)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.TemplateNotificationGenerator.InitializeGraph(string)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.TemplateNotificationGenerator.TemplateNotificationGenerator(PX.Data.PXGraph, object, PX.SM.Notification)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.EP.TemplateNotificationGenerator.TemplateNotificationGenerator(object, string)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.FieldUpdated&lt;PX.Objects.Extensions.Discount.Detail, PX.Objects.Extensions.Discount.Detail.discountID&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowDeleted&lt;PX.Objects.Extensions.Discount.Detail&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowUpdated&lt;PX.Objects.Extensions.Discount.Document&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.GDPR.GDPRPseudonymizeProcess.RemapToPrimary(System.Collections.Generic.IEnumerable&lt;PX.Objects.GDPR.GDPRPseudonymizeProcess.ObfuscateEntity&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.GDPR.GDPRRestoreProcess.RemapToPrimary(System.Collections.Generic.IEnumerable&lt;PX.Objects.GDPR.SMPersonalDataIndex&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.IN.PhysicalInventory.PILocksInspector.LoadExistingLocks()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1003">
    <target>PX.Objects.SM.NotificationService.Graph</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.Objects.AR.CustomerPaymentMethodMaint.details()</target>
    <syntaxNode>details</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.Objects.CT.UsageMaint.billed()</target>
    <syntaxNode>billed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.Objects.DR.DraftScheduleMaint.reallocationPoolDR()</target>
    <syntaxNode>reallocationPoolDR</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.Objects.FA.AssetGLTransactions.gltransactions()</target>
    <syntaxNode>gltransactions</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.Objects.SO.PickPackShip.packed()</target>
    <syntaxNode>packed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.Objects.SO.PickPackShip.picked()</target>
    <syntaxNode>picked</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.Objects.TX.TaxYearMaint.taxPeriodExSelectView()</target>
    <syntaxNode>taxPeriodExSelectView</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1005">
    <target>PX.TM.ImportCompanyTreeMaint.items(int?)</target>
    <syntaxNode>items</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1008">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterProcess()</target>
    <syntaxNode>DunningLetterList.SetProcessDelegate(list =&gt; DunningLetterProc(list, Filter.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1008">
    <target>PX.Objects.CM.RefreshCurrencyRates.RefreshFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>CurrencyRateList.SetProcessDelegate(list =&gt; RefreshRates(filter, list))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1008">
    <target>PX.Objects.CR.CRBaseMassProcess&lt;TGraph, TPrimary&gt;.CRBaseMassProcess()</target>
    <syntaxNode>ProcessingDataMember.SetProcessDelegate(item =&gt;
						{
							PXGraph graph = GetPrimaryGraph(item);
							if (graph == null)
								throw new PXException(ErrorMessages.CantDetermineGraphType);
                            process.ProccessItem(graph, item);
							graph.Actions.PressSave();
							PXCache cache = graph.Caches[typeof(TPrimary)];
							cache.RestoreCopy(item, cache.Current);					
						})</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1008">
    <target>PX.Objects.RUTROT.ARDocumentReleaseRUTROT.Initialize()</target>
    <syntaxNode>Base.ARDocumentList.SetProcessDelegate(
                delegate (List&lt;BalancedARDocument&gt; list)
                {

                    List&lt;ARRegister&gt; newlist = new List&lt;ARRegister&gt;(list.Count);
                    foreach (BalancedARDocument doc in list)
                    {
                        newlist.Add(doc);
                    }

                    foreach (ARRegister doc in newlist)
                    {
                        using (PXTransactionScope ts = new PXTransactionScope())
                        {
                            ARInvoiceEntry graph = PXGraph.CreateInstance&lt;ARInvoiceEntry&gt;();

                            if (RUTROTHelper.IsNeedBalancing(graph, RUTROTBalanceOn.Release))
                            {
                                BalanceProc(graph, doc);
                            }

                            ARDocumentRelease.ReleaseDoc(new List&lt;ARRegister&gt; { doc }, true);

                            ts.Complete();
                        }
                    }
                }
            )</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1010">
    <target>PX.Objects.AP.APPayBills.apdocumentlist()</target>
    <syntaxNode>cmd.View.Select(new[] { filter },
								ComposeParametersForAPDocumentListSelect(),
								PXView.Searches,
								viewExecutingParams.Sorts.ToArray(),
								viewExecutingParams.Descendings.ToArray(),
								viewExecutingParams.FilterRows.ToArray(),
								ref startRow,
								PXView.MaximumRows,
								ref totalRows)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1010">
    <target>PX.Objects.CS.Email.EmailsSyncMaint.selectedItems()</target>
    <syntaxNode>view.Select(PXView.Currents, PXView.Parameters, PXView.Searches, PXView.SortColumns, PXView.Descendings, PXView.Filters, ref startRow, PXView.MaximumRows, ref totalRows)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1010">
    <target>PX.Objects.PM.ChangeOrderEntry.availablePOLines()</target>
    <syntaxNode>select.View.Select(
				PXView.Currents, PXView.Parameters, PXView.Searches, PXView.SortColumns,
				PXView.Descendings, PXView.Filters, ref startRow, PXView.MaximumRows, ref totalRows)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1010">
    <target>PX.Objects.PM.ChangeOrderEntry.details()</target>
    <syntaxNode>select.View.Select(
				PXView.Currents, PXView.Parameters, PXView.Searches, PXView.SortColumns,
				PXView.Descendings, PXView.Filters, ref startRow, PXView.MaximumRows, ref totalRows)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1010">
    <target>PX.Objects.SO.SOOrderEntry.transactions()</target>
    <syntaxNode>query.View.Select(
					PXView.Currents, PXView.Parameters, PXView.Searches, PXView.SortColumns,
					PXView.Descendings, PXView.Filters, ref startRow, PXView.MaximumRows, ref totalRows)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1010">
    <target>PX.Objects.SO.SOOrderEntry.transactions()</target>
    <syntaxNode>query.View.Select(
				PXView.Currents, PXView.Parameters, PXView.Searches, PXView.SortColumns,
				PXView.Descendings, PXView.Filters, ref startRow, PXView.MaximumRows, ref totalRows)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.AU.AUScheduleExt</target>
    <syntaxNode>AUScheduleExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CR.EMailAccountExt</target>
    <syntaxNode>EMailAccountExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.EMailSyncAccountPreferencesExt</target>
    <syntaxNode>EMailSyncAccountPreferencesExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.EMailSyncPolicyExt</target>
    <syntaxNode>EMailSyncPolicyExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.Email.EMailSyncAccountExt</target>
    <syntaxNode>EMailSyncAccountExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMColumnGL</target>
    <syntaxNode>RMColumnGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMColumnPM</target>
    <syntaxNode>RMColumnPM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMColumnSetGL</target>
    <syntaxNode>RMColumnSetGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMDataSourceGL</target>
    <syntaxNode>RMDataSourceGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMDataSourcePM</target>
    <syntaxNode>RMDataSourcePM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMReportGL</target>
    <syntaxNode>RMReportGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMReportPM</target>
    <syntaxNode>RMReportPM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMRowGL</target>
    <syntaxNode>RMRowGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMRowPM</target>
    <syntaxNode>RMRowPM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMRowSetGL</target>
    <syntaxNode>RMRowSetGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMUnitGL</target>
    <syntaxNode>RMUnitGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMUnitPM</target>
    <syntaxNode>RMUnitPM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.CS.RMUnitSetGL</target>
    <syntaxNode>RMUnitSetGL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.APAddressExt</target>
    <syntaxNode>APAddressExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.APContactExt</target>
    <syntaxNode>APContactExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.ARAddressExt</target>
    <syntaxNode>ARAddressExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.ARContactExt</target>
    <syntaxNode>ARContactExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.AddressExt</target>
    <syntaxNode>AddressExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.BAccountExt</target>
    <syntaxNode>BAccountExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.CRAddressExt</target>
    <syntaxNode>CRAddressExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.CRContactExt</target>
    <syntaxNode>CRContactExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.CROpportunityExt</target>
    <syntaxNode>CROpportunityExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.CSAnswersExt</target>
    <syntaxNode>CSAnswersExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.ContactExt</target>
    <syntaxNode>ContactExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.CustomerPaymentMethodDetailExt</target>
    <syntaxNode>CustomerPaymentMethodDetailExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.LocationExt</target>
    <syntaxNode>LocationExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.LoginTraceExt</target>
    <syntaxNode>LoginTraceExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.PMAddressExt</target>
    <syntaxNode>PMAddressExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.PMContactExt</target>
    <syntaxNode>PMContactExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.POAddressExt</target>
    <syntaxNode>POAddressExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.POContactExt</target>
    <syntaxNode>POContactExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.SOAddressExt</target>
    <syntaxNode>SOAddressExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.SOContactExt</target>
    <syntaxNode>SOContactExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.GDPR.UsersExt</target>
    <syntaxNode>UsersExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT</target>
    <syntaxNode>ARInvoiceRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.ARPaymentRUTROT</target>
    <syntaxNode>ARPaymentRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.ARTaxRUTROT</target>
    <syntaxNode>ARTaxRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.ARTranRUTROT</target>
    <syntaxNode>ARTranRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT</target>
    <syntaxNode>BranchBAccountRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.BranchRUTROT</target>
    <syntaxNode>BranchRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT</target>
    <syntaxNode>OrganizationRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.HiddenInventoryItemRUTROT</target>
    <syntaxNode>HiddenInventoryItemRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.InventoryItemRUTROT</target>
    <syntaxNode>InventoryItemRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.SOLineRUTROT</target>
    <syntaxNode>SOLineRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.SOOrderRUTROT</target>
    <syntaxNode>SOOrderRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1011">
    <target>PX.Objects.RUTROT.SOTaxRUTROT</target>
    <syntaxNode>SOTaxRUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.CR.CREmailActivityMaint.Process()</target>
    <syntaxNode>Process</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.CS.CarrierPluginMaint.Certify()</target>
    <syntaxNode>Certify</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.CT.ContractMaint.Bill()</target>
    <syntaxNode>Bill</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.CT.ContractMaint.Terminate()</target>
    <syntaxNode>Terminate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.CT.ContractMaint.UndoBilling()</target>
    <syntaxNode>UndoBilling</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.CT.ContractMaint.Upgrade()</target>
    <syntaxNode>Upgrade</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.EP.EPEventEnq.cancelActivity()</target>
    <syntaxNode>cancelActivity</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.EP.EPEventEnq.complete()</target>
    <syntaxNode>complete</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.EP.EPLoginTypeMaint.updateUsers()</target>
    <syntaxNode>updateUsers</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.SO.PickPackShip.confirm()</target>
    <syntaxNode>confirm</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1013">
    <target>PX.Objects.SO.PickPackShip.confirmAll()</target>
    <syntaxNode>confirmAll</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.AP.PendingPPDDebitAdjApp.Index</target>
    <syntaxNode>Index</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.AR.ARStatement.IsParentCustomerStatement</target>
    <syntaxNode>IsParentCustomerStatement</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.AR.PendingPPDCreditMemoApp.Index</target>
    <syntaxNode>Index</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.CA.CADepositDetail.OrigDocSign</target>
    <syntaxNode>OrigDocSign</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.CA.CashFlowEnq.CashFlowFilter.AllCashAccounts</target>
    <syntaxNode>AllCashAccounts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.CR.CRMarketingList.IsStatic</target>
    <syntaxNode>IsStatic</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.CS.AddressValidatorPluginDetail.SortOrder</target>
    <syntaxNode>SortOrder</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.FA.FABookYearSetup.FPType</target>
    <syntaxNode>FPType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.IN.INItemPlan.IsTemporary</target>
    <syntaxNode>IsTemporary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1014">
    <target>PX.Objects.IN.UpdateABCAssignmentResult.ID</target>
    <syntaxNode>ID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AP.APAccess.vendor()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AP.APInvoiceEntry.ReverseInvoiceProc(PX.Objects.AP.APRegister)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.ReleaseRetainageProc(PX.Objects.AP.APInvoice, PX.Objects.AP.RetainageOptions, bool)</target>
    <syntaxNode>SelectSingleBound</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.ReleaseRetainageProc(System.Collections.Generic.List&lt;PX.Objects.AP.APInvoiceExt&gt;, PX.Objects.AP.RetainageOptions, bool)</target>
    <syntaxNode>SelectSingleBound</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AP.APPaymentEntry.VoidCheck(PX.Data.PXAdapter)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AP.APPaymentEntry.VoidCheckProc(PX.Objects.AP.APPayment)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AR.ARAccess.customer()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ReleaseRetainageProc(PX.Objects.AR.ARInvoice, PX.Objects.AR.RetainageOptions, bool)</target>
    <syntaxNode>SelectSingleBound</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.CA.AddTrxFilter.AddFilterAttribute.RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.CA.BankStatementProtoHelpers.StatementsMatchingProto.UpdateSourceDoc(PX.Data.PXGraph, PX.Objects.CA.CATran, System.DateTime?)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>SelectSingle</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.CR.OpportunityMaint.SalesTax.FindCROpportunityTax(PX.Objects.CR.CRTaxTran)</target>
    <syntaxNode>SelectSingleBound</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.DR.ARInvoiceEntryASC606.ReverseDRSchedule(PX.Objects.AR.ARRegister, PX.Objects.AR.ARTran, PX.Objects.DR.ARInvoiceEntryASC606.ReverseDRScheduleDelegate)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.DR.DRSingleProcess.CreateSingleSchedule&lt;T&gt;(T, PX.Objects.AR.ARReleaseProcess.Amount, int?, bool, PX.Objects.DR.DRProcess.DRScheduleParameters)</target>
    <syntaxNode>SelectSingleBound</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.EP.EPApprovalAndAssignmentMapBase&lt;TGraph&gt;.EPAssignmentMap_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.EP.EPApprovalAndAssignmentMapBase&lt;TGraph&gt;.nodesTree(System.Guid?)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.EP.EPAssignmentProcessHelper&lt;Table&gt;.Assign(Table, PX.Objects.EP.EPAssignmentMap, bool)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.EP.EPClaimReceiptController.MakeSubAccountByMaskForReceipt&lt;SubMaskField, CompanySubField, EmployeeSubField, ItemSubField&gt;(PX.Data.PXCache, PX.Objects.EP.EPExpenseClaimDetails, string)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.EP.ExpenseClaimDetailGraphExtBase&lt;TGraph&gt;.MakeSubAccountByMaskForReceipt&lt;SubMaskField, CompanySubField, EmployeeSubField, ItemSubField&gt;(PX.Data.PXCache, PX.Objects.EP.EPExpenseClaimDetails, string)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.EP.ExpenseClaimEntry.ExpenceClaimApproval&lt;SourceAssign&gt;.GetApproversFromNextStep(SourceAssign, PX.Objects.EP.EPAssignmentMap, int?)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.FinPeriods.FinPeriodRepository.GetAdjustmentFinPeriods(string, int?)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLAccess.account()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLAccess.branch()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLAccess.budgetTree()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLAccess.printers()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLAccess.segment()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLAccess.segmentAll()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLAccess.sub()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.GLBudgetEntry.DoPreload()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.JournalEntryImport.Process(PX.Data.PXAdapter)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.JournalEntryImport.ProcessAll(PX.Data.PXAdapter)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.MasterFinPeriodMaint.ModifyEndYear()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.MasterFinPeriodMaint.Persist()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.MasterFinPeriodMaint._(PX.Data.Events.RowDeleting&lt;PX.Objects.GL.FinPeriods.MasterFinYear&gt;)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.GL.Reclassification.UI.ReclassifyTransactionsProcess.TryOpenForReclassificationOfDocument(PX.Data.PXView, string, string, string, string)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.IN.INItemSiteMaint.DefaultSubItemReplenishment(PX.Data.PXGraph, PX.Objects.IN.INItemSite)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.IN.INReleaseProcess.SameWarehouseTransfer(PX.Objects.IN.INTran, PX.Objects.IN.INTranSplit)</target>
    <syntaxNode>SelectWindowed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.IN.InventoryItemMaint.INItemCost_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>SelectSingle</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.IN.InventoryItemMaint.UdateLastCost(PX.Objects.IN.INItemCost)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.PM.ChangeOrderEntry.ReverseDocument()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.PO.LandedCosts.LandedCostAllocationService.IsApplicable(PX.Data.PXGraph, PX.Objects.PO.LandedCostCode, PX.Objects.PO.POReceiptLine)</target>
    <syntaxNode>SelectWindowed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.PO.POLandedCostDocEntry.ReleaseDoc(PX.Objects.PO.POLandedCostDoc)</target>
    <syntaxNode>Search&lt;POLandedCostDoc.refNbr&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.PO.POReceiptEntry.AddPurchaseOrder(PX.Objects.PO.POOrder)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.RQ.RQRequisitionEntry.merge(PX.Data.PXAdapter)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.RUTROT.RUTROTHelper.CreateMemo(PX.Objects.AR.ARInvoiceEntry, PX.Objects.AR.ARRegister, PX.Objects.RUTROT.RUTROT, string, bool)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.SO.FreightCalculator.GetFreightRateBasedOnVolume(string, string, decimal?)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.SO.FreightCalculator.GetFreightRateBasedOnWeight(string, string, decimal?)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.SO.SOOrderEntry.PostOrder(PX.Objects.IN.INIssueEntry, PX.Objects.SO.SOOrder, PX.Objects.CS.DocumentList&lt;PX.Objects.IN.INRegister&gt;, PX.Objects.SO.SOOrderShipment)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_CCCardNumber_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>SelectWindowed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.SO.SOShipmentEntry.InvoiceShipment(PX.Objects.SO.SOInvoiceEntry, PX.Objects.SO.SOShipment, System.DateTime, PX.Objects.CS.DocumentList&lt;PX.Objects.AR.ARInvoice, PX.Objects.SO.SOInvoice&gt;, PX.Data.PXQuickProcess.ActionFlow)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.SO.SOTaxAttribute.SelectParent(PX.Data.PXCache, object)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.TX.ReportTax.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>SelectWindowed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.TX.ReportTaxDetail.history_Detail()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.TX.ReportTaxReview.period_Details()</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.Objects.TX.TaxYearMaint.GetOrCreateTaxYearWithPeriodsInCacheByFilter(PX.Objects.TX.TaxYearMaint.TaxYearFilter)</target>
    <syntaxNode>SelectMultiBound</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.SM.AccessUsers.Users_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.TM.CompanyTreeMaint.UpdateOwner(object)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1015">
    <target>PX.TM.ImportCompanyTreeMaint.UpdateOwner(object)</target>
    <syntaxNode>Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1018">
    <target>PX.Objects.AP.APDataEntryGraph&lt;TGraph, TPrimary&gt;</target>
    <syntaxNode>TPrimary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1018">
    <target>PX.Objects.AR.ARDataEntryGraph&lt;TGraph, TPrimary&gt;</target>
    <syntaxNode>TPrimary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1018">
    <target>PX.Objects.IN.INRegisterEntryBase</target>
    <syntaxNode>INRegister</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.AP.APInvoiceDiscountDetail.LineNbr</target>
    <syntaxNode>PXDBUShort()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.AP.APInvoiceDiscountDetail.LineNbr</target>
    <syntaxNode>ushort?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.AR.ARInvoiceDiscountDetail.LineNbr</target>
    <syntaxNode>PXDBUShort()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.AR.ARInvoiceDiscountDetail.LineNbr</target>
    <syntaxNode>ushort?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.AR.ARSetup.ApplyDiscountToLabelOnly</target>
    <syntaxNode>Boolean?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.AR.ARSetup.ApplyDiscountToLabelOnly</target>
    <syntaxNode>PXString()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.CR.CROpportunityDiscountDetail.LineNbr</target>
    <syntaxNode>PXDBUShort()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.CR.CROpportunityDiscountDetail.LineNbr</target>
    <syntaxNode>ushort?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.Extensions.Discount.Discount.LineNbr</target>
    <syntaxNode>PXDBUShort()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.Extensions.Discount.Discount.LineNbr</target>
    <syntaxNode>ushort?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FALocationHistory.Custodian</target>
    <syntaxNode>Guid?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FALocationHistory.Custodian</target>
    <syntaxNode>PXDBField()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FAService.InspectedBy</target>
    <syntaxNode>Guid?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FAService.InspectedBy</target>
    <syntaxNode>PXDBField()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FAService.PerfomedBy</target>
    <syntaxNode>Guid?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FAService.PerfomedBy</target>
    <syntaxNode>PXDBField()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FAUsage.MeasuredBy</target>
    <syntaxNode>Guid?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.FA.FAUsage.MeasuredBy</target>
    <syntaxNode>PXDBField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.PO.POOrderDiscountDetail.LineNbr</target>
    <syntaxNode>PXDBUShort()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.PO.POOrderDiscountDetail.LineNbr</target>
    <syntaxNode>ushort?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.SO.SOOrderDiscountDetail.LineNbr</target>
    <syntaxNode>PXDBUShort()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.SO.SOOrderDiscountDetail.LineNbr</target>
    <syntaxNode>ushort?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.SO.SOShipmentDiscountDetail.LineNbr</target>
    <syntaxNode>PXDBUShort()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1021">
    <target>PX.Objects.SO.SOShipmentDiscountDetail.LineNbr</target>
    <syntaxNode>ushort?</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.DetailsResult.CustomerId</target>
    <syntaxNode>Customer(DescriptionField = typeof(Customer.acctName))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.DetailsResult.CustomerId</target>
    <syntaxNode>PXInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterList.BAccountID</target>
    <syntaxNode>Customer(DescriptionField = typeof(Customer.acctName))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterList.BAccountID</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesApplyParameters.CustomerID</target>
    <syntaxNode>CustomerActive(DescriptionField = typeof(Customer.acctName))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesApplyParameters.CustomerID</target>
    <syntaxNode>PXDBInt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.CustomerId</target>
    <syntaxNode>CustomerActive(DescriptionField = typeof(Customer.acctName), DisplayName = "Customer")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.CustomerId</target>
    <syntaxNode>PXInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARStatementForCustomer.ARStatementForCustomerParameters.CustomerID</target>
    <syntaxNode>Customer(DescriptionField = typeof(Customer.acctName))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARStatementForCustomer.ARStatementForCustomerParameters.CustomerID</target>
    <syntaxNode>PXInt()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult.BranchID</target>
    <syntaxNode>Branch()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult.BranchID</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.CA.CashAccountDeposit.DepositAcctID</target>
    <syntaxNode>CashAccount(null, typeof(Search&lt;CashAccount.cashAccountID, Where&lt;CashAccount.curyID, Equal&lt;Current&lt;CashAccount.curyID&gt;&gt;,
                And&lt;CashAccount.cashAccountID, NotEqual&lt;Current&lt;CashAccount.cashAccountID&gt;&gt;,
                And&lt;Where&lt;CashAccount.clearingAccount, Equal&lt;boolTrue&gt;,
                Or&lt;CashAccount.cashAccountID, Equal&lt;Current&lt;CashAccountDeposit.depositAcctID&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;), IsKey = true, DisplayName = "Clearing Account")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.CA.CashAccountDeposit.DepositAcctID</target>
    <syntaxNode>PXInt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.CR.OUSearchEntity.BAccountID</target>
    <syntaxNode>CustomerProspectVendor(DisplayName = "Account", Visibility = PXUIVisibility.SelectorVisible)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.CR.OUSearchEntity.BAccountID</target>
    <syntaxNode>PXDBInt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.EP.ActivitySource.NoteID</target>
    <syntaxNode>PXGuid</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1023">
    <target>PX.Objects.EP.ActivitySource.NoteID</target>
    <syntaxNode>PXNote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult.docType</target>
    <syntaxNode>docType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult.refNbr</target>
    <syntaxNode>refNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.CA.CAReconEntry.CATranExt.Tstamp</target>
    <syntaxNode>Tstamp</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.CA.CATranEnq.CATranExt.Tstamp</target>
    <syntaxNode>Tstamp</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.CM.CMReportTranType.tranType</target>
    <syntaxNode>tranType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.CR.OperationParam.dataSource</target>
    <syntaxNode>dataSource</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog.contextInfo</target>
    <syntaxNode>contextInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog.exceptionMessage</target>
    <syntaxNode>exceptionMessage</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog.inconsistencyCode</target>
    <syntaxNode>inconsistencyCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog.logEntryID</target>
    <syntaxNode>logEntryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog.userBranchID</target>
    <syntaxNode>userBranchID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog.userID</target>
    <syntaxNode>userID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog.utcTime</target>
    <syntaxNode>utcTime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.Tstamp</target>
    <syntaxNode>Tstamp</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.active</target>
    <syntaxNode>active</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.inventoryID</target>
    <syntaxNode>inventoryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.locationID</target>
    <syntaxNode>locationID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyAvail</target>
    <syntaxNode>qtyAvail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyExpired</target>
    <syntaxNode>qtyExpired</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyHardAvail</target>
    <syntaxNode>qtyHardAvail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyINAssemblyDemand</target>
    <syntaxNode>qtyINAssemblyDemand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyINAssemblySupply</target>
    <syntaxNode>qtyINAssemblySupply</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyINIssues</target>
    <syntaxNode>qtyINIssues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyINReceipts</target>
    <syntaxNode>qtyINReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyInTransit</target>
    <syntaxNode>qtyInTransit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyInTransitToSO</target>
    <syntaxNode>qtyInTransitToSO</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyNotAvail</target>
    <syntaxNode>qtyNotAvail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyOnHand</target>
    <syntaxNode>qtyOnHand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPODropShipOrders</target>
    <syntaxNode>qtyPODropShipOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPODropShipPrepared</target>
    <syntaxNode>qtyPODropShipPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPODropShipReceipts</target>
    <syntaxNode>qtyPODropShipReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPOFixedOrders</target>
    <syntaxNode>qtyPOFixedOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPOFixedPrepared</target>
    <syntaxNode>qtyPOFixedPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPOFixedReceipts</target>
    <syntaxNode>qtyPOFixedReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPOOrders</target>
    <syntaxNode>qtyPOOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPOPrepared</target>
    <syntaxNode>qtyPOPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtyPOReceipts</target>
    <syntaxNode>qtyPOReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtySOBackOrdered</target>
    <syntaxNode>qtySOBackOrdered</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtySOBooked</target>
    <syntaxNode>qtySOBooked</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtySODropShip</target>
    <syntaxNode>qtySODropShip</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtySOFixed</target>
    <syntaxNode>qtySOFixed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtySOPrepared</target>
    <syntaxNode>qtySOPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtySOShipped</target>
    <syntaxNode>qtySOShipped</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.qtySOShipping</target>
    <syntaxNode>qtySOShipping</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.selected</target>
    <syntaxNode>selected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.siteID</target>
    <syntaxNode>siteID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLocationStatus2.subItemID</target>
    <syntaxNode>subItemID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.Tstamp</target>
    <syntaxNode>Tstamp</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.costID</target>
    <syntaxNode>costID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.expireDate</target>
    <syntaxNode>expireDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.inventoryID</target>
    <syntaxNode>inventoryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.locationID</target>
    <syntaxNode>locationID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.lotSerTrack</target>
    <syntaxNode>lotSerTrack</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.lotSerialNbr</target>
    <syntaxNode>lotSerialNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyAvail</target>
    <syntaxNode>qtyAvail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyExpired</target>
    <syntaxNode>qtyExpired</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyHardAvail</target>
    <syntaxNode>qtyHardAvail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyINAssemblyDemand</target>
    <syntaxNode>qtyINAssemblyDemand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyINAssemblySupply</target>
    <syntaxNode>qtyINAssemblySupply</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyINIssues</target>
    <syntaxNode>qtyINIssues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyINReceipts</target>
    <syntaxNode>qtyINReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyInTransit</target>
    <syntaxNode>qtyInTransit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyInTransitToProduction</target>
    <syntaxNode>qtyInTransitToProduction</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyInTransitToSO</target>
    <syntaxNode>qtyInTransitToSO</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyNotAvail</target>
    <syntaxNode>qtyNotAvail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyOnHand</target>
    <syntaxNode>qtyOnHand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPODropShipOrders</target>
    <syntaxNode>qtyPODropShipOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPODropShipPrepared</target>
    <syntaxNode>qtyPODropShipPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPODropShipReceipts</target>
    <syntaxNode>qtyPODropShipReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOFixedOrders</target>
    <syntaxNode>qtyPOFixedOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOFixedPrepared</target>
    <syntaxNode>qtyPOFixedPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOFixedProductionOrders</target>
    <syntaxNode>qtyPOFixedProductionOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOFixedProductionPrepared</target>
    <syntaxNode>qtyPOFixedProductionPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOFixedReceipts</target>
    <syntaxNode>qtyPOFixedReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOOrders</target>
    <syntaxNode>qtyPOOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOPrepared</target>
    <syntaxNode>qtyPOPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyPOReceipts</target>
    <syntaxNode>qtyPOReceipts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProdFixedProdOrders</target>
    <syntaxNode>qtyProdFixedProdOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProdFixedProdOrdersPrepared</target>
    <syntaxNode>qtyProdFixedProdOrdersPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProdFixedProduction</target>
    <syntaxNode>qtyProdFixedProduction</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProdFixedPurchase</target>
    <syntaxNode>qtyProdFixedPurchase</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProdFixedSalesOrders</target>
    <syntaxNode>qtyProdFixedSalesOrders</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProdFixedSalesOrdersPrepared</target>
    <syntaxNode>qtyProdFixedSalesOrdersPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProductionAllocated</target>
    <syntaxNode>qtyProductionAllocated</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProductionDemand</target>
    <syntaxNode>qtyProductionDemand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProductionDemandPrepared</target>
    <syntaxNode>qtyProductionDemandPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProductionSupply</target>
    <syntaxNode>qtyProductionSupply</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtyProductionSupplyPrepared</target>
    <syntaxNode>qtyProductionSupplyPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySOBackOrdered</target>
    <syntaxNode>qtySOBackOrdered</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySOBooked</target>
    <syntaxNode>qtySOBooked</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySODropShip</target>
    <syntaxNode>qtySODropShip</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySOFixed</target>
    <syntaxNode>qtySOFixed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySOFixedProduction</target>
    <syntaxNode>qtySOFixedProduction</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySOPrepared</target>
    <syntaxNode>qtySOPrepared</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySOShipped</target>
    <syntaxNode>qtySOShipped</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.qtySOShipping</target>
    <syntaxNode>qtySOShipping</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.receiptDate</target>
    <syntaxNode>receiptDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.siteID</target>
    <syntaxNode>siteID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INLotSerialStatus2.subItemID</target>
    <syntaxNode>subItemID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INReleaseProcess.INItemPlanDemand.planID</target>
    <syntaxNode>planID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.docType</target>
    <syntaxNode>docType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.lineNbr</target>
    <syntaxNode>lineNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.origLineNbr</target>
    <syntaxNode>origLineNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.origModule</target>
    <syntaxNode>origModule</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.origRefNbr</target>
    <syntaxNode>origRefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.origTranType</target>
    <syntaxNode>origTranType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.pOReceiptNbr</target>
    <syntaxNode>pOReceiptNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.pOReceiptType</target>
    <syntaxNode>pOReceiptType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.refNbr</target>
    <syntaxNode>refNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTran2.released</target>
    <syntaxNode>released</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTranSplit2.baseQty</target>
    <syntaxNode>baseQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTranSplit2.docType</target>
    <syntaxNode>docType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTranSplit2.lineNbr</target>
    <syntaxNode>lineNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTranSplit2.lotSerialNbr</target>
    <syntaxNode>lotSerialNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTranSplit2.refNbr</target>
    <syntaxNode>refNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.IN.INTranSplit2.subItemID</target>
    <syntaxNode>subItemID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.RUTROT.HiddenInventoryItem.inventoryID</target>
    <syntaxNode>inventoryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1024">
    <target>PX.Objects.TX.TaxTranReport.tranTypeInvoiceDiscriminated</target>
    <syntaxNode>tranTypeInvoiceDiscriminated</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INEstimatedCost.QtyOnHand_CostStatus</target>
    <syntaxNode>QtyOnHand_CostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INEstimatedCost.QtyOnHand_LocStatus</target>
    <syntaxNode>QtyOnHand_LocStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INEstimatedCost.qtyOnHand_CostStatus</target>
    <syntaxNode>qtyOnHand_CostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INEstimatedCost.qtyOnHand_LocStatus</target>
    <syntaxNode>qtyOnHand_LocStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INLotSerCostDetail.QtyOnHand_CostStatus</target>
    <syntaxNode>QtyOnHand_CostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INLotSerCostDetail.qtyOnHand_CostStatus</target>
    <syntaxNode>qtyOnHand_CostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INSiteStatusFilter.Inventory_Wildcard</target>
    <syntaxNode>Inventory_Wildcard</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1026">
    <target>PX.Objects.IN.INSiteStatusFilter.inventory_Wildcard</target>
    <syntaxNode>inventory_Wildcard</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.CRActivity.DeletedDatabaseRecord</target>
    <syntaxNode>DeletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.CRActivity.deletedDatabaseRecord</target>
    <syntaxNode>deletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.CRPMTimeActivity.DeletedDatabaseRecord</target>
    <syntaxNode>DeletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.CRPMTimeActivity.deletedDatabaseRecord</target>
    <syntaxNode>deletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.CRSMEmail.DeletedDatabaseRecord</target>
    <syntaxNode>DeletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.CRSMEmail.deletedDatabaseRecord</target>
    <syntaxNode>deletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.Contact.DeletedDatabaseRecord</target>
    <syntaxNode>DeletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1027">
    <target>PX.Objects.CR.Contact.deletedDatabaseRecord</target>
    <syntaxNode>deletedDatabaseRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.AP.APChecksToPrintEnq.CheckSummary.CheckSummary()</target>
    <syntaxNode>CheckSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary.PendingPaymentSummary()</target>
    <syntaxNode>PendingPaymentSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.CT.UsageData.UsageData()</target>
    <syntaxNode>UsageData</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.GLHistoryEnquiryResult.GLHistoryEnquiryResult()</target>
    <syntaxNode>GLHistoryEnquiryResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.GLTranKey.GLTranKey()</target>
    <syntaxNode>GLTranKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.GLTranKey.GLTranKey(PX.Objects.GL.GLTran)</target>
    <syntaxNode>GLTranKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.GLTranKey.GLTranKey(string, string, int?)</target>
    <syntaxNode>GLTranKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.Reclassification.Common.GLTranForReclassification.GLTranForReclassification()</target>
    <syntaxNode>GLTranForReclassification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.Reclassification.Common.ReclassGraphState.ReclassGraphState()</target>
    <syntaxNode>ReclassGraphState</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.Reclassification.UI.GLTranReclHist.GLTranReclHist()</target>
    <syntaxNode>GLTranReclHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.Reclassification.UI.GLTranReclHist.GLTranReclHist(PX.Objects.GL.GLTran)</target>
    <syntaxNode>GLTranReclHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.GL.Reclassification.UI.GLTranReclHist.GLTranReclHist(string, string, int?)</target>
    <syntaxNode>GLTranReclHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.IN.INKitTranSplit.INKitTranSplit()</target>
    <syntaxNode>INKitTranSplit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.IN.INKitTranSplit.INKitTranSplit(string, string, string)</target>
    <syntaxNode>INKitTranSplit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.IN.InventoryAllocDetEnqResult.InventoryAllocDetEnqResult()</target>
    <syntaxNode>InventoryAllocDetEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.IN.InventorySummaryEnquiryResult.InventorySummaryEnquiryResult()</target>
    <syntaxNode>InventorySummaryEnquiryResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.InspectingTable.InspectingTable()</target>
    <syntaxNode>InspectingTable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.InspectingTable.InspectingTable(PX.Data.ReferentialIntegrity.Inspecting.ReferencesInspectionResult)</target>
    <syntaxNode>InspectingTable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.MergedInspectingTable.MergedInspectingTable()</target>
    <syntaxNode>MergedInspectingTable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.MergedInspectingTable.MergedInspectingTable(PX.Data.ReferentialIntegrity.Merging.MergedReferencesInspectionResult)</target>
    <syntaxNode>MergedInspectingTable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.MergedTableReference.MergedTableReference()</target>
    <syntaxNode>MergedTableReference</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.MergedTableReference.MergedTableReference(PX.Data.ReferentialIntegrity.Merging.MergedReference)</target>
    <syntaxNode>MergedTableReference</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.TableReference.TableReference()</target>
    <syntaxNode>TableReference</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1028">
    <target>PX.Objects.SM.TableReference.TableReference(PX.Data.ReferentialIntegrity.Reference)</target>
    <syntaxNode>TableReference</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1029">
    <target>PX.Objects.AP.PrintChecksFilter.IsNextNumberDuplicated(PX.Data.PXGraph, string)</target>
    <syntaxNode>PXGraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1029">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.DetailsResult.Copy(PX.Data.PXGraph, PX.Objects.AR.ARDunningLetter, PX.Objects.AR.Customer)</target>
    <syntaxNode>PXGraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1029">
    <target>PX.Objects.AR.ARDunningLetterPrint.DetailsResult.Copy(PX.Data.PXGraph, PX.Objects.AR.ARDunningLetter, PX.Objects.AR.Customer)</target>
    <syntaxNode>PXGraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1029">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.CA.PaymentReclassifyProcess.CATranRef)</target>
    <syntaxNode>PaymentReclassifyProcess</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1029">
    <target>PX.Objects.CM.CurrencyInfo.getCMSetup(PX.Data.PXCache)</target>
    <syntaxNode>Graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1029">
    <target>PX.Objects.PO.ReceivePutAway.Header.GetBaseQty(PX.Objects.PO.ReceivePutAwayHost)</target>
    <syntaxNode>ReceivePutAwayHost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1029">
    <target>PX.Objects.SO.PickPackShip.Header.GetBaseQty(PX.Objects.SO.PickPackShipHost)</target>
    <syntaxNode>PickPackShipHost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APAdjust.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APAdjust.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APChecksToPrintEnq.CheckSummary.CuryDocBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APChecksToPrintEnq.CheckSummary.OverdueCuryDocBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter.CuryBalanceSummary</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter.CuryDifference</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter.CuryVendorBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter.CuryVendorDepositsBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter.CuryVendorRetainedBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentResult.APTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentResult.BegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentResult.CuryBegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentResult.CuryDiscActTaken</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentResult.DiscActTaken</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APHistory.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APIntegrityCheckFilter.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.APAdjust.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.LinkLineOrder.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.LinkLineReceipt.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.POLandedCostDetailFilter.LandedCostCodeID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.POLandedCostDetailFilter.LandedCostDocRefNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.POLandedCostDetailFilter.ReceiptNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.POLineS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APInvoiceEntry.POReceiptLineS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPayment.CanHaveBalance</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPayment.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPayment.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary.CuryDiscBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary.CuryDocBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary.LostCuryDiscBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary.OverdueCuryDocBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary.ValidCuryDiscBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APRegister.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APRegister.Hidden</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APRegister.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APRetainageFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APSetup.SummaryPost</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APTax.TaxDiscountAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APTaxTran.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistoryFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.ARAddItemSelected.CuryUnitPrice</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.ARAddItemSelected.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.AddItemParameters.CuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;GL.Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.ApproveBillsFilter.CuryApprovedTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.ApproveBillsFilter.CuryDocsTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.ApproveBillsFilter.PendingRefresh</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CalculatePricesFilter.CorrectionPercent</target>
    <syntaxNode>PXDefault("100.00")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CalculatePricesFilter.PriceBasis</target>
    <syntaxNode>PXDefault(PriceBasisTypes.CurrentPrice)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CalculatePricesFilter.UpdateOnZero</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CopyPricesFilter.CurrencyDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CopyPricesFilter.CustomRate</target>
    <syntaxNode>PXDefault("1.00")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CopyPricesFilter.DestinationCuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;GL.Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CopyPricesFilter.EffectiveDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CopyPricesFilter.IsPromotional</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CopyPricesFilter.RateTypeID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CopyPricesFilter.SourceCuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;GL.Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.CuryAPHistory.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.MISC1099EFileProcessingInfo.HistAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.MISC1099EFileProcessingInfo.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.Overrides.ScheduleMaint.DocumentSelection.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.RetainageOptions.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.RetainageOptions.MasterFinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.Standalone.APQuickCheck.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AP.Standalone.APQuickCheck.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAddItemSelected.CuryUnitPrice</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAddItemSelected.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAdjust.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAdjust2.AdjgFinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAdjust2.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAutoApplyParameters.ApplicationDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAutoApplyParameters.ApplyCreditMemos</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARAutoApplyParameters.ReleaseBatchWhenFinished</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARBalances.DatesUpdated</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARCreateWriteOff.ARRegisterEx.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryFilter.CuryBalanceSummary</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryFilter.CuryRevaluedSummary</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryFilter.Period</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.CreditHoldParameters.BeginDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.CreditHoldParameters.EndDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.DetailsResult.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentFilter.CuryBalanceSummary</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentFilter.CuryCustomerBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentFilter.CuryCustomerDepositsBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentFilter.CuryCustomerRetainedBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentFilter.CuryDifference</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult.ARTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult.BegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult.CuryBegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult.CuryDiscActTaken</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult.DiscActTaken</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDunningLetter.Status</target>
    <syntaxNode>PXDefault("D")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDunningLetterPrint.DetailsResult.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDunningLetterPrint.PrintParameters.BeginDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDunningLetterPrint.PrintParameters.EndDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterList.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterRecordsParameters.DocDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterRecordsParameters.IncludeType</target>
    <syntaxNode>PXDefault(IncludeTypes.IncludeAll)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinCharge.ChargingMethod</target>
    <syntaxNode>PXDefault(1)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinCharge.FixedAmount</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinCharge.LineThreshold</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesApplyParameters.FinChargeDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate), PersistingCheck = PXPersistingCheck.Null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesDetails.FinChargeCuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesDetails.FinChargeID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesDetails.OverdueDays</target>
    <syntaxNode>PXDefault((short)0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesDetails.Selected</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARHistory.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARPayment.CanHaveBalance</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARPayment.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARPayment.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARPaymentInfo.CCTranDescr</target>
    <syntaxNode>PXDefault("", PersistingCheck = PXPersistingCheck.NullOrBlank)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARPaymentInfo.IsCCExpired</target>
    <syntaxNode>PXDefault("", PersistingCheck = PXPersistingCheck.NullOrBlank)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARPaymentInfo.PMInstanceDescr</target>
    <syntaxNode>PXDefault("", PersistingCheck = PXPersistingCheck.NullOrBlank)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARRegister.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARRegister.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARRegister.SelfVoidingDoc</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARRetainageFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARSPCommissionPeriod.CommnPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARSPCommissionProcess.ARSalesPerTranExt.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARSPCommnHistory.CommnPeriod</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARSetup.SummaryPost</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementCycle.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementDetails.ARStatementDetailsParameters.StatementDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.CuryAgeBalance00</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.DontPrint</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.Printed</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.CuryAgeBalance00</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.CuryStatementBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.DontPrint</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.Printed</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.StatementDate</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementHistory.ARStatementHistoryParameters.EndDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementHistory.ARStatementHistoryParameters.IncludeOnDemandStatements</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementHistory.ARStatementHistoryParameters.StartDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult.CuryAgeBalance00</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters.StatementDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARTax.TaxDiscountAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARTaxTran.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.ARTran.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.AddItemParameters.CuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;GL.Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.AddItemParameters.PriceType</target>
    <syntaxNode>PXDefault(PriceTypeList.CustomerPriceClass)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CalculatePricesFilter.CorrectionPercent</target>
    <syntaxNode>PXDefault("100.00")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CalculatePricesFilter.PriceBasis</target>
    <syntaxNode>PXDefault(PriceBasisTypes.CurrentPrice)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CalculatePricesFilter.UpdateOnZero</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.CurrencyDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.CustomRate</target>
    <syntaxNode>PXDefault("1.00")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.DestinationCuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;GL.Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.DestinationPriceCode</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.DestinationPriceType</target>
    <syntaxNode>PXDefault(PriceTypeList.CustomerPriceClass)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.EffectiveDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.IsFairValue</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.IsPromotional</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.IsProrated</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.RateTypeID</target>
    <syntaxNode>PXDefault(typeof(ARSetup.defaultRateTypeID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.SourceCuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;GL.Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.SourcePriceCode</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CopyPricesFilter.SourcePriceType</target>
    <syntaxNode>PXDefault(PriceTypeList.CustomerPriceClass)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CuryARHistory.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.Customer.SharedCreditChild</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.Customer.StatementChild</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.CustomerPaymentMethod.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.DiscountDetail.DiscountPercent</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.DiscountDetail.PendingDiscountPercent</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.Overrides.ScheduleMaint.DocumentSelection.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.PendingPPDCreditMemoApp.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.RetainageOptions.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.RetainageOptions.MasterFinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.SPDocFilter.CommnPeriod</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.Standalone.ARCashSale.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.AR.Standalone.ARCashSale.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.AddDetailFilter.DrCr</target>
    <syntaxNode>PXDefault(GL.DrCr.Debit)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.AddDetailFilter.TranDate</target>
    <syntaxNode>PXDefault(typeof(AccessInfo.businessDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.BankStatementHelpers.GeneralInvoice.BAccountID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.BankStatementHelpers.GeneralInvoice.CuryDocBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.BankStatementHelpers.GeneralInvoice.CuryID</target>
    <syntaxNode>PXDefault(typeof(Search&lt;Company.baseCuryID&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.BankStatementHelpers.GeneralInvoice.CuryOrigDocAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.BankStatementHelpers.GeneralInvoice.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAAdj.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CABankTran.CuryCreditAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CABankTran.CuryDebitAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CABankTran.CuryTotalAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CABankTran.DocType</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CABankTranHeader.CuryDetailsEndBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CABankTransactionsEnq.Filter.TranType</target>
    <syntaxNode>PXDefault(typeof(CABankTranType.statement))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CADeposit.ChargeMult</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CADeposit.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.BegBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.BegClearedBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.CreditClearedTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.CreditTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.DebitClearedTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.DebitTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.EndBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAEnqFilter.EndClearedBal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CARecon.CuryReconciledTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAReconFilter.EndDate</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAReconFilter.ReconNbr</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CAReconFilter.StartDate</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CARegister.Hold</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CARegister.Released</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CARegister.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CASplitExt.Cleared</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CASplitExt.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CATaxTran.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CATran.CuryClearedCreditAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CATran.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CashAccount.AcctSettingsAllowed</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CashAccount.PTInstancesAllowed</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CashAccount.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CashFlowEnq.CashFlowFilter.AllCashAccounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.CashFlowForecast.AmountSummary</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CA.PaymentInfo.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.CurrencyInfo.SampleCuryRate</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.Extensions.CurrencyInfo.SampleCuryRate</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RefreshRate.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedAPHistory.FinPrevRevalued</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedAPHistory.FinYtdRevalued</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedAPHistory.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedARHistory.FinPrevRevalued</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedARHistory.FinYtdRevalued</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedARHistory.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedGLHistory.FinYtdRevalued</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.RevaluedGLHistory.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.TranslationEnqFilter.Released</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.TranslationEnqFilter.Unreleased</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CM.TranslationEnqFilter.Voided</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CRCampaign.SendFilter</target>
    <syntaxNode>PXDefault(SendFilterSourcesAttribute._NEVERSENT)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CRDuplicateRecord.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CREmailActivityMaint.NotificationFilter.AppendText</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CREmailActivityMaint.NotificationFilter.Type</target>
    <syntaxNode>PXDefault(TemplateSourceType.Notification)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CRImportLeadsMaint.CRBatchLead.AddressType</target>
    <syntaxNode>PXDefault(CR.Address.AddressTypes.BusinessAddress)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CRMarketingListMember.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CRMassMailPreview.MailTo</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.CROpportunityProbability.IsActive</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CopyQuoteFilter.Description</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CopyQuoteFilter.OpportunityID</target>
    <syntaxNode>PXDefault(typeof(CROpportunity.opportunityID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CopyQuoteFilter.OverrideManualDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CopyQuoteFilter.OverrideManualPrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CopyQuoteFilter.RecalculateDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CopyQuoteFilter.RecalculatePrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateInvoicesFilter.ConfirmManualAmount</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateInvoicesFilter.OverrideManualDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateInvoicesFilter.OverrideManualPrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateInvoicesFilter.RecalculateDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateInvoicesFilter.RecalculatePrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateQuotesFilter.OverrideManualDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateQuotesFilter.OverrideManualPrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateQuotesFilter.RecalculateDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateQuotesFilter.RecalculatePrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateSalesOrderFilter.ConfirmManualAmount</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateSalesOrderFilter.OverrideManualDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateSalesOrderFilter.OverrideManualPrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateSalesOrderFilter.RecalculateDiscounts</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.OpportunityMaint.CreateSalesOrderFilter.RecalculatePrices</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.QuoteMaint.CopyQuoteFilter.Description</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.QuoteMaint.CopyQuoteFilter.OpportunityID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.SendKBArticleMaint.EmailMessage.MailAccountID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.SendKBArticleMaint.EmailMessage.MailTo</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CR.SendKBArticleMaint.EmailMessage.Subject</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMColumnSetGL.Type</target>
    <syntaxNode>PXDefault(CS.RMType.GL)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestAccountClassID</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestEndAccount</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestEndBranch</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestEndSub</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestLedgerID</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestOrganizationID</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestStartAccount</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestStartBranch</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestStartSub</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.RequestUseMasterCalendar</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportGL.Type</target>
    <syntaxNode>PXDefault(RMType.GL)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestEndAccountGroup</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestEndInventory</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestEndPeriod</target>
    <syntaxNode>PXDefault((short)0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestEndProject</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestEndProjectTask</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestStartAccountGroup</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestStartInventory</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestStartPeriod</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestStartProject</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMReportPM.RequestStartProjectTask</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMRowSetGL.Type</target>
    <syntaxNode>PXDefault(CS.RMType.GL)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.RMUnitSetGL.Type</target>
    <syntaxNode>PXDefault(CS.RMType.GL)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.ReasonCode.SubMaskFinance</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CS.ReasonCode.SubMaskInventory</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CT.Contract.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CT.ContractDetail.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.CT.RenewContracts.ContractsList.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.Common.FinPeriodClosingProcessBase.FinPeriodClosingProcessParameters.Action</target>
    <syntaxNode>PXDefault(FinPeriodStatusProcess.FinPeriodStatusProcessParameters.action.Close)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.Common.FinPeriodClosingProcessBase.FinPeriodClosingProcessParameters.FromYear</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.Common.FinPeriodClosingProcessBase.FinPeriodClosingProcessParameters.ToYear</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.DRDraftScheduleProc.SchedulesFilter.BAccountType</target>
    <syntaxNode>PXDefault(CR.BAccountType.CustomerType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.DRRecognition.ScheduledTran.IsVirtual</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.DRRecognition.ScheduledTran.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.DRSchedule.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.DRScheduleDetail.DefCodeType</target>
    <syntaxNode>PXDefault(DeferredAccountType.Income)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.DRScheduleDetail.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.DRScheduleDetail.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.ScheduleTransInq.ScheduleTransFilter.BAccountType</target>
    <syntaxNode>PXDefault(CR.BAccountType.CustomerType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.ScheduleTransInq.ScheduleTransFilter.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.SchedulesInq.SchedulesFilter.BAccountType</target>
    <syntaxNode>PXDefault(CR.BAccountType.CustomerType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.SchedulesInq.SchedulesFilter.TotalDeferred</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.DR.SchedulesInq.SchedulesFilter.TotalScheduled</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.EP.CustomersList.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.EP.EPApprovalProcess.EPOwned.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.EP.EPOtherAttendeeWithNotification.NotifyOnRowUpdated</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.EP.EPTaskEnq.TaskFilter.IsEscalated</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.EP.EPTaskEnq.TaskFilter.IsFollowUp</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter.IncludeReject</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.EP.TimecardWithTotals.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.AccBalanceByAssetInq.AccBalanceByAssetFilter.PeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.AccBalanceByAssetInq.AccBalanceByAssetFilter.PeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.AccBalanceByAssetInq.Amounts.ItdAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.AccBalanceByAssetInq.Amounts.PtdAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.AccBalanceByAssetInq.Amounts.YtdAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.AccBalanceByAssetInq.FALocationHistoryCurrent.LastPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.DAC.FALocationHistoryByPeriod.LastPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.DAC.FALocationHistoryByPeriod.LastPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.DAC.FALocationHistoryByPeriod.PeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.DAC.FALocationHistoryByPeriod.PeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FABookBalanceNext.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FABookHistory.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FABookHistory.Reopen</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FABookHistoryMax.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FABookPeriod.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FABookYearSetup.UserDefined</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FARegister.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FATran.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.FixedAssetCostEnq.FixedAssetFilter.PeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.ReverseDisposalInfo.ReverseDisposalPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.SplitParams.Cost</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.SplitParams.Ratio</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.SplitParams.SplittedQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.Transact.CreditAmt</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.FA.Transact.DebitAmt</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.APAddressExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.APContactExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.ARAddressExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.ARContactExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.AddressExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.BAccountExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.CRAddressExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.CRContactExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.CSAnswersExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.ContactExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.CustomerPaymentMethodDetailExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.LocationExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.LoginTraceExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.PMAddressExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.PMContactExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.POAddressExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.POContactExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.SOAddressExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.SOContactExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GDPR.UsersExt.PseudonymizationStatus</target>
    <syntaxNode>PXPseudonymizationStatusField</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.ADL.Batch.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Account.ReadableActive</target>
    <syntaxNode>PXDefault(1)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Account.TypeTotal</target>
    <syntaxNode>PXDefault(AccountType.Asset)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.AccountByPeriodFilter.EndPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.AccountByPeriodFilter.StartPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.AllocationProcess.AllocationExt.Module</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.AllocationProcess.AllocationExt.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.AllocationProcess.AllocationExt.Status</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Batch.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Batch.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Batch.TranPeriodID</target>
    <syntaxNode>PXDefault(MapErrorTo = typeof(Batch.dateEntered))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.BudgetFilter.ShowTree</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.BudgetPreloadFilter.ChangePercent</target>
    <syntaxNode>PXDefault((short)100)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodGenerateParameters.FromYear</target>
    <syntaxNode>PXDefault("")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodGenerateParameters.ToYear</target>
    <syntaxNode>PXDefault("")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodSaveDialog.MoveDayOfWeek</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodStatusProcess.FinPeriodStatusProcessParameters.Action</target>
    <syntaxNode>PXDefault(action.Undefined)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodStatusProcess.FinPeriodStatusProcessParameters.FirstYear</target>
    <syntaxNode>PXDefault(typeof(Search2&lt;
				FinYear.year,
				InnerJoin&lt;FinPeriod,
					On&lt;FinYear.organizationID, Equal&lt;FinPeriod.organizationID&gt;,
					And&lt;FinYear.year, Equal&lt;FinPeriod.finYear&gt;&gt;&gt;&gt;,
				Where&lt;FinYear.organizationID, Equal&lt;Current&lt;FinPeriodStatusProcessParameters.filterOrganizationID&gt;&gt;,
					And&lt;FinPeriod.status, Equal&lt;Current&lt;FinPeriodStatusProcessParameters.affectedStatus&gt;&gt;&gt;&gt;,
				OrderBy&lt;Asc&lt;FinYear.year&gt;&gt;&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodStatusProcess.FinPeriodStatusProcessParameters.FromYear</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodStatusProcess.FinPeriodStatusProcessParameters.LastYear</target>
    <syntaxNode>PXDefault(typeof(Search2&lt;
				FinYear.year,
				InnerJoin&lt;FinPeriod,
					On&lt;FinYear.organizationID, Equal&lt;FinPeriod.organizationID&gt;,
					And&lt;FinYear.year, Equal&lt;FinPeriod.finYear&gt;&gt;&gt;&gt;,
				Where&lt;FinYear.organizationID, Equal&lt;Current&lt;FinPeriodStatusProcessParameters.filterOrganizationID&gt;&gt;,
					And&lt;FinPeriod.status, Equal&lt;Current&lt;FinPeriodStatusProcessParameters.affectedStatus&gt;&gt;&gt;&gt;,
				OrderBy&lt;Desc&lt;FinYear.year&gt;&gt;&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodStatusProcess.FinPeriodStatusProcessParameters.ReopenInSubledgers</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriodStatusProcess.FinPeriodStatusProcessParameters.ToYear</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.MasterFinPeriod.IsAdjustment</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.MasterFinPeriod.Length</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.MasterFinPeriod.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriod.IsAdjustment</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriod.Length</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriod.MasterFinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriod.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriodExt.MasterFinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.TableDefinition.FinPeriod.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.TableDefinition.FinPeriod.IsAdjustment</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinPeriods.TableDefinition.FinPeriod.Length</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.FinYearSetup.UserDefined</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLBudgetLine.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLConsolData.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLDocAdjust.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLDocAdjust.VoidAppl</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLDocAdjust.Voided</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLDocBatch.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLDocBatch.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLDocBatch.TranPeriodID</target>
    <syntaxNode>PXDefault(MapErrorTo = typeof(GLDocBatch.dateEntered))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLHistory.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLHistoryEnqFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLHistoryEnquiryResult.SignEndBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLHistoryTran.CreditAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLHistoryTran.DebitAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLHistoryTran.FinBegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTran.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTranR.BegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTranR.CuryEndBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTranR.EndBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTranR.SignBegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTranR.SignCuryBegBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTranR.SignCuryEndBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTranR.SignEndBalance</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.GLTrialBalanceImportMap.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Ledger.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.OrganizationFinPeriodMaint.NewOrganizationCalendarParameters.StartDate</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.OrganizationFinPeriodMaint.NewOrganizationCalendarParameters.StartMasterFinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.OrganizationFinPeriodMaint.NewOrganizationCalendarParameters.StartYear</target>
    <syntaxNode>PXDefault(typeof(Search3&lt;
                MasterFinYear.year,
                OrderBy&lt;
                    Asc&lt;MasterFinYear.year&gt;&gt;&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Overrides.ScheduleMaint.BatchSelection.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Overrides.ScheduleProcess.GLTranNew.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Reclassification.Common.GLTranForReclassification.CuryNewAmt</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Reclassification.Common.GLTranForReclassification.SortOrder</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.GL.Reclassification.UI.GLTranReclHist.SortOrder</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INInventoryByItemClassEnq.InventoryByClassFilter.ShowItems</target>
    <syntaxNode>PXDefault(ShowItemsMode.ChildrenOfCurrentClass)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INItemClassRep.ServiceLevelPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "84.0000")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INItemCostHist.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INItemCustSalesHist.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INItemPlan.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INItemRep.ServiceLevelPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "84.0000")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INItemSalesHist.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INItemSiteHist.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INKitRegister.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INKitRegister.TranFinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INKitTranSplit.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INRegister.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INRegister.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INReplenishmentItem.QtyProcess</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INSiteStatusFilter.OnlyAvailable</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INSiteStatusSelected.QtySelected</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INSiteStatusSelected.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INSiteSummaryEnq.Filter.OnlyAvailable</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INTransferEntry.INSiteStatusSelected.QtySelected</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.INTransferEntry.INSiteStatusSelected.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.InventoryLotSerInq.INTranSplit.TranUnitCost</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.InventoryTranByAcctEnqFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.InventoryTranDetEnqFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.InventoryTranSumEnqFilter.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.INTranCostUpdate.ResetOversoldFlag</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyFSSrvOrdAllocated</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyFSSrvOrdBooked</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyFSSrvOrdPrepared</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyINAssemblyDemand</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyINAssemblySupply</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyINIssues</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyINReceipts</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyInTransit</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyPOFixedReceipt</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyPOOrders</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyPOPrepared</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyPOReceipts</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyProductionAllocated</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyProductionDemand</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyProductionDemandPrepared</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyProductionSupply</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtyProductionSupplyPrepared</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtySOBackOrdered</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtySOBooked</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtySOPrepared</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtySOReverse</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtySOShipped</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial.InclQtySOShipping</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.POReceiptLineUpdate.UpdateTranCostFinal</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.PIGeneratorSettings.Descr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.PIGeneratorSettings.RandomItemsLimit</target>
    <syntaxNode>PXDefault((Int16)0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.UpdateABCAssignmentSettings.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.UpdateMCAssignmentSettings.EndFinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.IN.UpdateMCAssignmentSettings.StartFinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.AllocationProcessByProject.PMProjectForAllocation.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.BillingProcess.ProjectsList.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter.Amount</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter.OpenAmount</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter.OpenQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter.Qty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMAllocation.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMBilling.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMBillingRule.BranchSourceBudget</target>
    <syntaxNode>PXDefault(PMAccountSource.None)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMBudget.BaseActualAmount</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMBudget.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMChangeOrder.IsCostVisible</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMChangeOrder.IsDetailsVisible</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMChangeOrder.IsRevenueVisible</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMCommitment.InvoicedIsReadonly</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMCostCode.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMForecastDetail.PeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMForecastRecord.ProjectID</target>
    <syntaxNode>PXDefault(typeof(PMForecast.projectID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMHistory.PeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMHistoryByPeriod.PeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMProformaLine.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMQuoteMaint.CopyQuoteFilter.Description</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMRegister.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMTask.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMTran.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.PMTran.TranPeriodID</target>
    <syntaxNode>PXDefault(MapErrorTo = typeof(PMTran.date))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.POLinePM.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.ProFormaProcess.ProFormaFilter.BeginDate</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.ProformaEntry.PMProformaOverflow.CuryOverflowTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PM.ProformaEntry.PMProformaOverflow.OverflowTotal</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LandedCosts.POLandedCostDetailFilter.LandedCostCodeID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LandedCosts.POLandedCostDetailFilter.LandedCostDocRefNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LandedCosts.POLandedCostDetailFilter.ReceiptNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LandedCosts.POReceiptFilter.OrderNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LandedCosts.POReceiptFilter.ReceiptNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LandedCosts.POReceiptFilter.ReceiptType</target>
    <syntaxNode>PXDefault(POReceiptType.POReceipt)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LandedCosts.POReceiptLineAdd.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LinkLineOrder.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.LinkLineReceipt.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POFixedDemand.EffPrice</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POFixedDemand.ExtVolume</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POFixedDemand.ExtWeight</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLandedCostDetailS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLandedCostDoc.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLandedCostDoc.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLandedCostDocS.FinPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLandedCostReceipt.LineCntr</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLine.LeftToReceiveBaseQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLine.LeftToReceiveQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLine.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLineRS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POLineS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POOrder.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POOrderEntry.POLineS.LeftToReceiveQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POOrderEntry.POLineS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POOrderEntry.POOrderS.LeftToReceiveQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POOrderEntry.POOrderS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POReceipt.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POReceipt.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POReceiptEntry.POOrderS.LeftToReceiveQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POReceiptLineS.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POSiteStatusFilter.OnlyAvailable</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POSiteStatusSelected.QtySelected</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.PO.POSiteStatusSelected.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQBidding.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQBiddingState.SingleMode</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQBudget.BudgetAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQBudget.CuryDocRequestAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQBudget.DocRequestAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQBudget.UsageAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequest.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequestApprove.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequestLine.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequestLine.Updatable</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequestLineSelect.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisition.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisition.VendorRequestSent</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionApprove.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionLine.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionLineBidding.CuryQuoteExtCost</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionLineBidding.CuryQuoteUnitCost</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionLineBidding.MinQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionLineBidding.QuoteExtCost</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionLineBidding.QuoteQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQRequisitionLineBidding.QuoteUnitCost</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQSiteStatusSelected.QtySelected</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RQ.RQSiteStatusSelected.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.IsRUTROTDeductible</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.ARPaymentRUTROT.IsRUTROTPayment</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.ARTranRUTROT.CuryRUTROTAvailableAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.ARTranRUTROT.CuryRUTROTTaxAmountDeductible</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.ARTranRUTROT.IsRUTROTDeductible</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.ARTranRUTROT.RUTROTAvailableAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.ARTranRUTROT.RUTROTTaxAmountDeductible</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.BalanceOnProcess</target>
    <syntaxNode>PXDefault(RUTROTBalanceOn.Release)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.DefaultRUTROTType</target>
    <syntaxNode>PXDefault(RUTROTTypes.RUT)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.ROTDeductionPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.ROTExtraAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.ROTPersonalAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.RUTDeductionPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.RUTExtraAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.RUTPersonalAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchBAccountRUTROT.RUTROTClaimNextRefNbr</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.BalanceOnProcess</target>
    <syntaxNode>PXDefault(RUTROTBalanceOn.Release)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.DefaultRUTROTType</target>
    <syntaxNode>PXDefault(RUTROTTypes.RUT)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.ROTDeductionPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.ROTExtraAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.ROTPersonalAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.RUTDeductionPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.RUTExtraAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.RUTPersonalAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.BranchRUTROT.RUTROTClaimNextRefNbr</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.BalanceOnProcess</target>
    <syntaxNode>PXDefault(RUTROTBalanceOn.Release)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.DefaultRUTROTType</target>
    <syntaxNode>PXDefault(RUTROTTypes.RUT)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.ROTDeductionPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.ROTExtraAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.ROTPersonalAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.RUTDeductionPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.RUTExtraAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.RUTPersonalAllowanceLimit</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.DAC.OrganizationRUTROT.RUTROTClaimNextRefNbr</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.HiddenInventoryItemRUTROT.IsRUTROTDeductible</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.InventoryItemRUTROT.IsRUTROTDeductible</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.RUTROT.DeductionPct</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.RUTROTItem.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.SOLineRUTROT.CuryRUTROTAvailableAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.SOLineRUTROT.CuryRUTROTTaxAmountDeductible</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.SOLineRUTROT.IsRUTROTDeductible</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.SOLineRUTROT.RUTROTAvailableAmt</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.SOLineRUTROT.RUTROTTaxAmountDeductible</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.IsRUTROTDeductible</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.AddInvoiceFilter.DocType</target>
    <syntaxNode>PXDefault(ARDocType.Invoice)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.AddInvoiceFilter.RefNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.InvoiceSplits.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.POLine3.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.PickPackInfo.LotSerialSearch</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.PickPackInfo.Message</target>
    <syntaxNode>PXDefault(PickPackShip.Msg.BarcodePrompt)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.PickPackInfo.ScanMode</target>
    <syntaxNode>PXDefault(ScanModes.Add)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.PickPackInfo.ScanState</target>
    <syntaxNode>PXDefault(ScanStates.ShipmentNumber)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.PickPackInfo.ShipmentNbr</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.PickPackShip.SOShipLinePick.PickedQty</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOCreate.SOFixedDemand.ExtVolume</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOCreate.SOFixedDemand.ExtWeight</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOInvoice.AmtToCapture</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOInvoice.CuryAmtToCapture</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOInvoice.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOOrder.CreatePMInstance</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOOrder.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOOrderShipment.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOPackageInfo.WeightUOM</target>
    <syntaxNode>PXDefault(typeof(CommonSetup.weightUOM))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOPickPackShipUserSetup.PromptChoice</target>
    <syntaxNode>PXDefault("N")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOQuickProcessParametersPrinterExt.DefinePrinterManually</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOQuickProcessParametersPrinterExt.HideWhenNothingToPrint</target>
    <syntaxNode>PXDefault(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOQuickProcessParametersPrinterExt.NumberOfCopies</target>
    <syntaxNode>PXDefault(1)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOQuickProcessParametersPrinterExt.PrintWithDeviceHub</target>
    <syntaxNode>PXDefault(typeof(FeatureInstalled&lt;FeaturesSet.deviceHub&gt;))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOShipment.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOShipmentFilter.ShowPrinted</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOShipmentPlan.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOSiteStatusSelected.CuryUnitPrice</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOSiteStatusSelected.QtySelected</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.SO.SOSiteStatusSelected.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.ExternalTaxPost.Document.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.SVATConversionHist.AdjdFinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.SVATTaxTran.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TXImportState.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxAdjustment.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxAdjustment.TaxPeriod</target>
    <syntaxNode>TaxAdjsutmentTaxPeriodSelector</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxHistory.TaxPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxHistoryMaster.TaxPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxHistorySum.TaxPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxPeriod.TaxPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxPeriodFilter.ShowDifference</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxPeriodFilter.TaxPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxPeriodMaster.TaxPeriodID</target>
    <syntaxNode>PXDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.TX.TaxTran.FinPeriodID</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.Objects.WZ.PendingWZScenario.Selected</target>
    <syntaxNode>PXDefault(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>PX.SM.EmailProcessingMaint.EmailProcessingFilter.Type</target>
    <syntaxNode>PXDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.APGLDiscrepancyByDocumentEnqResult.Discrepancy</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.APGLDiscrepancyByDocumentEnqResult.GLTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.APGLDiscrepancyByDocumentEnqResult.XXTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnqResult.Discrepancy</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnqResult.GLTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnqResult.XXTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnqResult.Discrepancy</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnqResult.GLTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnqResult.XXTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.ARGLDiscrepancyByDocumentEnqResult.Discrepancy</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.ARGLDiscrepancyByDocumentEnqResult.GLTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.ARGLDiscrepancyByDocumentEnqResult.XXTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.DiscrepancyByAccountEnqResult.Discrepancy</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.DiscrepancyByAccountEnqResult.GLTurnover</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.DiscrepancyByAccountEnqResult.NonXXTrans</target>
    <syntaxNode>PXDefault(TypeCode.Decimal, "0.0")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.DiscrepancyEnqFilter.PeriodFrom</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1030">
    <target>ReconciliationTools.DiscrepancyEnqFilter.PeriodTo</target>
    <syntaxNode>PXDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APChecksToPrintEnq.CheckSummary.ClearValues()</target>
    <syntaxNode>ClearValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter.ClearSummary()</target>
    <syntaxNode>ClearSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APInvoiceEntry.POLineS.CompareReferenceKey(PX.Objects.AP.APTran)</target>
    <syntaxNode>CompareReferenceKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APInvoiceEntry.POLineS.SetReferenceKeyTo(PX.Objects.AP.APTran)</target>
    <syntaxNode>SetReferenceKeyTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APInvoiceEntry.POReceiptLineS.CompareReferenceKey(PX.Objects.AP.APTran)</target>
    <syntaxNode>CompareReferenceKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APInvoiceEntry.POReceiptLineS.SetReferenceKeyTo(PX.Objects.AP.APTran)</target>
    <syntaxNode>SetReferenceKeyTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APPaymentChargeTran.GetCASign()</target>
    <syntaxNode>GetCASign</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary.ClearValues()</target>
    <syntaxNode>ClearValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistoryResult.CopyValueToCuryValue(string)</target>
    <syntaxNode>CopyValueToCuryValue</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistoryResult.RecalculateBalance()</target>
    <syntaxNode>RecalculateBalance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistoryResult.RecalculateEndBalance()</target>
    <syntaxNode>RecalculateEndBalance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistorySummary.ClearSummary()</target>
    <syntaxNode>ClearSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.PrintChecksFilter.IsNextNumberDuplicated(PX.Data.PXGraph, string)</target>
    <syntaxNode>IsNextNumberDuplicated</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AP.VendorMaint.VendorBalanceSummary.Init()</target>
    <syntaxNode>Init</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryResult.CopyValueToCuryValue(string)</target>
    <syntaxNode>CopyValueToCuryValue</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryResult.RecalculateBalance()</target>
    <syntaxNode>RecalculateBalance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryResult.RecalculateEndBalance()</target>
    <syntaxNode>RecalculateEndBalance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistorySummary.ClearSummary()</target>
    <syntaxNode>ClearSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.DetailsResult.Copy(PX.Data.PXGraph, PX.Objects.AR.ARDunningLetter, PX.Objects.AR.Customer)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentFilter.ClearSummary()</target>
    <syntaxNode>ClearSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARDunningLetterPrint.DetailsResult.Copy(PX.Data.PXGraph, PX.Objects.AR.ARDunningLetter, PX.Objects.AR.Customer)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARPaymentChargeTran.GetCASign()</target>
    <syntaxNode>GetCASign</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.Append(PX.Objects.AR.ARStatementDetails.DetailsResult)</target>
    <syntaxNode>Append</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.Copy(PX.Objects.AR.ARStatement, PX.Objects.AR.Customer)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult.ResetToBaseCury(string)</target>
    <syntaxNode>ResetToBaseCury</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.Append(PX.Objects.AR.ARStatementForCustomer.DetailsResult)</target>
    <syntaxNode>Append</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.Copy(PX.Objects.AR.ARStatement, PX.Objects.AR.Customer)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult.ResetToBaseCury(string)</target>
    <syntaxNode>ResetToBaseCury</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult.Append(PX.Objects.AR.ARStatementPrint.DetailsResult)</target>
    <syntaxNode>Append</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult.Copy(PX.Objects.AR.ARStatement, PX.Objects.AR.Customer)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult.ResetToBaseCury(string)</target>
    <syntaxNode>ResetToBaseCury</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.CCProcTran.Copy(PX.Objects.AR.CCPaymentProcessing.Common.ICCPayment)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.CCProcTran.IsManuallyEntered()</target>
    <syntaxNode>IsManuallyEntered</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.AR.CustomerMaint.CustomerBalanceSummary.Init()</target>
    <syntaxNode>Init</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranDocRef.Copy(PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranDocRef.Copy(PX.Objects.CA.CABankTran)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranDocRef.Copy(PX.Objects.CA.CATran)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranExpenseDetailMatch.BuildDocRef(PX.Objects.CA.BankStatementProtoHelpers.CABankTranDocRef)</target>
    <syntaxNode>BuildDocRef</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranExpenseDetailMatch.GetDocumentKey()</target>
    <syntaxNode>GetDocumentKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch.BuildDocRef(PX.Objects.CA.BankStatementProtoHelpers.CABankTranDocRef)</target>
    <syntaxNode>BuildDocRef</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch.Copy(PX.Objects.AP.APInvoice)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch.Copy(PX.Objects.AR.ARInvoice)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch.Copy(PX.Objects.CA.CATran)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch.Copy(PX.Objects.CA.Light.APInvoice)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch.Copy(PX.Objects.CA.Light.ARInvoice)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch.GetDocumentKey()</target>
    <syntaxNode>GetDocumentKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CABankTran.GetFriendlyKeyImage(PX.Data.PXCache)</target>
    <syntaxNode>GetFriendlyKeyImage</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CABankTranMatch.Copy(PX.Objects.CA.BankStatementProtoHelpers.CABankTranDocRef)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CABatch.CopyTo(PX.Objects.CA.CATran)</target>
    <syntaxNode>CopyTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CABatchDetail.Copy(PX.Objects.AP.APPayment)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CABatchDetail.Copy(PX.Objects.AR.ARPayment)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CADepositEntry.APPaymentUpdate.ClearDepositReference()</target>
    <syntaxNode>ClearDepositReference</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CADepositEntry.APPaymentUpdate.SetReferenceTo(PX.Objects.CA.CADeposit)</target>
    <syntaxNode>SetReferenceTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CADepositEntry.ARPaymentUpdate.ClearDepositReference()</target>
    <syntaxNode>ClearDepositReference</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CADepositEntry.ARPaymentUpdate.SetReferenceTo(PX.Objects.CA.CADeposit)</target>
    <syntaxNode>SetReferenceTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CARecon.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CAReconEntry.CATranInBatch.CopyFrom(PX.Objects.CA.CATran)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.AP.APPayment)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.AR.ARPayment)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.CA.CAAdj)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.CA.CASplit)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.CA.CATran)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.CA.CashAccount)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CASplitExt.CopyFrom(PX.Objects.CA.PaymentReclassifyProcess.CATranRef)</target>
    <syntaxNode>CopyFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CATransfer.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CCProcessingCenterDetail.Copy(PX.CCProcessingBase.ISettingsDetail)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CCProcessingCenterDetail.GetComboValues()</target>
    <syntaxNode>GetComboValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CCProcessingCenterDetail.SetComboValues(System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;)</target>
    <syntaxNode>SetComboValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CashFlowForecast.IsZero()</target>
    <syntaxNode>IsZero</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CashFlowForecast2.Copy(System.DateTime, PX.Objects.AP.APInvoice)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CashFlowForecast2.Copy(System.DateTime, PX.Objects.AP.APPayment)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CashFlowForecast2.Copy(System.DateTime, PX.Objects.AR.ARInvoice)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CA.CashFlowForecast2.Copy(System.DateTime, PX.Objects.AR.ARPayment)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.AllowUpdate(PX.Data.PXCache)</target>
    <syntaxNode>AllowUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.CheckRateVariance(PX.Data.PXCache)</target>
    <syntaxNode>CheckRateVariance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.SetCuryEffDate(PX.Data.PXCache, object)</target>
    <syntaxNode>SetCuryEffDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.SetDefaultEffDate(PX.Data.PXCache)</target>
    <syntaxNode>SetDefaultEffDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.defaultCuryRate(PX.Data.PXCache)</target>
    <syntaxNode>defaultCuryRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.defaultCuryRate(PX.Data.PXCache, bool)</target>
    <syntaxNode>defaultCuryRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.getCMSetup(PX.Data.PXCache)</target>
    <syntaxNode>getCMSetup</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.CurrencyInfo.getCuryRate(PX.Data.PXCache)</target>
    <syntaxNode>getCuryRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CM.Extensions.CurrencyInfo.GetCM()</target>
    <syntaxNode>GetCM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CR.Location.GetKeyImage()</target>
    <syntaxNode>GetKeyImage</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CR.Location.ToString()</target>
    <syntaxNode>ToString</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CS.CSCalendar.IsWorkDay(System.DateTime)</target>
    <syntaxNode>IsWorkDay</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CS.CarrierDetail.GetComboValues()</target>
    <syntaxNode>GetComboValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CS.CarrierDetail.SetComboValues(System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;)</target>
    <syntaxNode>SetComboValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CS.CarrierPluginDetail.GetComboValues()</target>
    <syntaxNode>GetComboValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CS.CarrierPluginDetail.SetComboValues(System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;)</target>
    <syntaxNode>SetComboValues</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CS.FeaturesSet.SetValueToPackGroup(ref bool?, bool?, ref bool?, ref bool?, ref bool?)</target>
    <syntaxNode>SetValueToPackGroup</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.CS.FeaturesSet.SetValueToPackOption(ref bool?, bool?, bool?, ref bool?, ref bool?)</target>
    <syntaxNode>SetValueToPackOption</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPEquipmentSummary.GetTimeTotal()</target>
    <syntaxNode>GetTimeTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPEquipmentSummary.GetTimeTotal(System.DayOfWeek)</target>
    <syntaxNode>GetTimeTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPEquipmentSummary.ToString()</target>
    <syntaxNode>ToString</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPSetup.GetCopyNoteSettings&lt;TModule&gt;()</target>
    <syntaxNode>GetCopyNoteSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPTimeCardSummary.GetTimeTotal()</target>
    <syntaxNode>GetTimeTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPTimeCardSummary.GetTimeTotal(System.DayOfWeek)</target>
    <syntaxNode>GetTimeTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPTimeCardSummary.SetDayTime(System.DayOfWeek, int)</target>
    <syntaxNode>SetDayTime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.EPTimeCardSummary.ToString()</target>
    <syntaxNode>ToString</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.EP.PXWeekSelectorAttribute.EPWeek.Initialize()</target>
    <syntaxNode>Initialize</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.FA.FARegister.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.FA.FATran.GetKeyImage()</target>
    <syntaxNode>GetKeyImage</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.FA.FATran.ToString()</target>
    <syntaxNode>ToString</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GDPR.BAccountExt.InterruptPseudonimyzationHandler(System.Collections.Generic.List&lt;PX.Data.PXDataFieldParam&gt;)</target>
    <syntaxNode>InterruptPseudonimyzationHandler</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GDPR.ContactExt.InterruptPseudonimyzationHandler(System.Collections.Generic.List&lt;PX.Data.PXDataFieldParam&gt;)</target>
    <syntaxNode>InterruptPseudonimyzationHandler</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GDPR.UsersExt.InterruptPseudonimyzationHandler(System.Collections.Generic.List&lt;PX.Data.PXDataFieldParam&gt;)</target>
    <syntaxNode>InterruptPseudonimyzationHandler</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.Batch.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLDocBatch.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLHistoryEnquiryResult.recalculate(bool)</target>
    <syntaxNode>recalculate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLHistoryEnquiryResult.recalculateSignAmount(bool)</target>
    <syntaxNode>recalculateSignAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLTran.GetKeyImage()</target>
    <syntaxNode>GetKeyImage</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLTran.ToString()</target>
    <syntaxNode>ToString</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLTranKey.Equals(PX.Objects.GL.GLTran)</target>
    <syntaxNode>Equals</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLTranKey.Equals(PX.Objects.GL.GLTranKey)</target>
    <syntaxNode>Equals</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.GLTranKey.GetHashCode()</target>
    <syntaxNode>GetHashCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.JournalWithSubEntry.RefDocKey.Copy(PX.Objects.GL.GLTranDoc)</target>
    <syntaxNode>Copy</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.Reclassification.Common.ReclassGraphState.ClearSplittingGroups()</target>
    <syntaxNode>ClearSplittingGroups</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.GL.Reclassification.Common.ReclassGraphState.IncSplitLineNbr()</target>
    <syntaxNode>IncSplitLineNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.IN.INKitRegister.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.IN.INPlanType.Equals(object)</target>
    <syntaxNode>Equals</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.IN.INPlanType.GetHashCode()</target>
    <syntaxNode>GetHashCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.IN.INRegister.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.IN.INScanUserSetup.ApplyValuesFrom(PX.Objects.IN.INScanSetup)</target>
    <syntaxNode>ApplyValuesFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.IN.INScanUserSetup.SameAs(PX.Objects.IN.INScanSetup)</target>
    <syntaxNode>SameAs</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.Lite.PMBudget.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMBudget.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMBudgetInfo.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMChangeOrderBudget.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMForecastDetail.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMForecastHistory.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMForecastRecord.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMProformaLine.GetBudgetKey()</target>
    <syntaxNode>GetBudgetKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMProformaLine.LineTotalInProjectCurrency(bool)</target>
    <syntaxNode>LineTotalInProjectCurrency</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.PMProformaLine.PrepaidAmountInProjectCurrency(bool)</target>
    <syntaxNode>PrepaidAmountInProjectCurrency</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PM.ProjectEntry.PMProjectBalanceRecord.CompareTo(PX.Objects.PM.ProjectEntry.PMProjectBalanceRecord)</target>
    <syntaxNode>CompareTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POLineRS.CompareReferenceKey(PX.Objects.AP.APTran)</target>
    <syntaxNode>CompareReferenceKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POLineRS.SetReferenceKeyTo(PX.Objects.AP.APTran)</target>
    <syntaxNode>SetReferenceKeyTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POLineS.CompareReferenceKey(PX.Objects.AP.APTran)</target>
    <syntaxNode>CompareReferenceKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POLineS.SetReferenceKeyTo(PX.Objects.AP.APTran)</target>
    <syntaxNode>SetReferenceKeyTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POLineUOpen.ToPOLine()</target>
    <syntaxNode>ToPOLine</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceipt.GetAPDocType()</target>
    <syntaxNode>GetAPDocType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceipt.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceiptLine.IsNonStockItem()</target>
    <syntaxNode>IsNonStockItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceiptLine.IsStockItem()</target>
    <syntaxNode>IsStockItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceiptLineS.CompareReferenceKey(PX.Objects.AP.APTran)</target>
    <syntaxNode>CompareReferenceKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceiptLineS.SetReferenceKeyTo(PX.Objects.AP.APTran)</target>
    <syntaxNode>SetReferenceKeyTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceivePutAwayUserSetup.ApplyValuesFrom(PX.Objects.PO.POReceivePutAwaySetup)</target>
    <syntaxNode>ApplyValuesFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POReceivePutAwayUserSetup.SameAs(PX.Objects.PO.POReceivePutAwaySetup)</target>
    <syntaxNode>SameAs</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.POSetup.GetRequireControlTotal(string)</target>
    <syntaxNode>GetRequireControlTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.PO.ReceivePutAway.Header.GetBaseQty(PX.Objects.PO.ReceivePutAwayHost)</target>
    <syntaxNode>GetBaseQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.GetBaseDocument()</target>
    <syntaxNode>GetBaseDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.GetDocumentBranchID()</target>
    <syntaxNode>GetDocumentBranchID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.GetDocumentCuryID()</target>
    <syntaxNode>GetDocumentCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.GetDocumentHold()</target>
    <syntaxNode>GetDocumentHold</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.GetDocumentNbr()</target>
    <syntaxNode>GetDocumentNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.GetDocumentType()</target>
    <syntaxNode>GetDocumentType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARInvoiceRUTROT.GetRUTROTCompleted()</target>
    <syntaxNode>GetRUTROTCompleted</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARTranRUTROT.GetBaseDocument()</target>
    <syntaxNode>GetBaseDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.ARTranRUTROT.GetInventoryID()</target>
    <syntaxNode>GetInventoryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOLineRUTROT.GetBaseDocument()</target>
    <syntaxNode>GetBaseDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOLineRUTROT.GetInventoryID()</target>
    <syntaxNode>GetInventoryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.GetBaseDocument()</target>
    <syntaxNode>GetBaseDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.GetDocumentBranchID()</target>
    <syntaxNode>GetDocumentBranchID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.GetDocumentCuryID()</target>
    <syntaxNode>GetDocumentCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.GetDocumentHold()</target>
    <syntaxNode>GetDocumentHold</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.GetDocumentNbr()</target>
    <syntaxNode>GetDocumentNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.GetDocumentType()</target>
    <syntaxNode>GetDocumentType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.RUTROT.SOOrderRUTROT.GetRUTROTCompleted()</target>
    <syntaxNode>GetRUTROTCompleted</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.SM.TableReference.ChopBql(string)</target>
    <syntaxNode>ChopBql</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.SO.PickPackShip.Header.GetBaseQty(PX.Objects.SO.PickPackShipHost)</target>
    <syntaxNode>GetBaseQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.SO.SOPackageDetailEx.ToPackageInfo(int?)</target>
    <syntaxNode>ToPackageInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.SO.SOPackageInfoEx.ToPackageDetail(string)</target>
    <syntaxNode>ToPackageDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.SO.SOPickPackShipUserSetup.ApplyValuesFrom(PX.Objects.SO.SOPickPackShipSetup)</target>
    <syntaxNode>ApplyValuesFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.SO.SOPickPackShipUserSetup.SameAs(PX.Objects.SO.SOPickPackShipSetup)</target>
    <syntaxNode>SameAs</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.SO.SOShipLine.ToUnassignedSplit()</target>
    <syntaxNode>ToUnassignedSplit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.TX.TaxAdjustment.SetStatus()</target>
    <syntaxNode>SetStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.TX.TaxRev.GetDefaultEndDate()</target>
    <syntaxNode>GetDefaultEndDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.TX.TaxTran.GetKeyImage()</target>
    <syntaxNode>GetKeyImage</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1031">
    <target>PX.Objects.TX.TaxTran.ToString()</target>
    <syntaxNode>ToString</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.AP.APAdjust.AdjdTBSign</target>
    <syntaxNode>this.IsSelfAdjustment()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.AP.APAdjust.AdjgTBSign</target>
    <syntaxNode>this.IsSelfAdjustment()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.AP.APPayment.DiscDate</target>
    <syntaxNode>new DateTime()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.AR.ARAdjust.AdjdTBSign</target>
    <syntaxNode>this.IsSelfAdjustment()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.AR.ARAdjust.AdjgTBSign</target>
    <syntaxNode>this.IsSelfAdjustment()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.AR.ARPayment.DiscDate</target>
    <syntaxNode>new DateTime()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CA.CABankTranRule.Regex</target>
    <syntaxNode>new Regex(Pattern,
            MatchDescriptionCase == true ? new RegexOptions() : RegexOptions.IgnoreCase)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CA.CABankTranRule.Regex</target>
    <syntaxNode>new RegexOptions()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CA.CARecon.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CA.CARecon.Reconciled</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CA.CARecon.Voided</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CA.CATransfer.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CA.CATransfer.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CR.CRCase.TimeResolution</target>
    <syntaxNode>createdDateTime.Return(_ =&gt; _.Value.Ticks, end.Ticks)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CR.CRCase.TimeResolution</target>
    <syntaxNode>resolutionDate.Return(_ =&gt; _.Value, PXTimeZoneInfo.Now)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.AddressValidatorPluginDetail.ComboValues</target>
    <syntaxNode>list.Add(keyval[0], keyval[1])</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.AddressValidatorPluginDetail.ComboValues</target>
    <syntaxNode>new Dictionary&lt;string, string&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.AddressValidatorPluginDetail.ComboValues</target>
    <syntaxNode>new StringBuilder()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.AddressValidatorPluginDetail.ComboValues</target>
    <syntaxNode>sb.AppendFormat("{0}|{1};", kv.Key, kv.Value)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.AddressValidatorPluginDetail.ComboValues</target>
    <syntaxNode>sb.ToString()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.RouteManagementVehiclesPack</target>
    <syntaxNode>SetValueToPackGroup(ref _RouteManagementVehiclesPack, value,
                                ref _RouteManagementVehiclesPack10,
                                ref _RouteManagementVehiclesPack50,
                                ref _RouteManagementVehiclesPackUnlimited)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.RouteManagementVehiclesPack10</target>
    <syntaxNode>SetValueToPackOption(ref _RouteManagementVehiclesPack10, value, _RouteManagementVehiclesPack,
                                ref _RouteManagementVehiclesPack50,
                                ref _RouteManagementVehiclesPackUnlimited)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.RouteManagementVehiclesPack50</target>
    <syntaxNode>SetValueToPackOption(ref _RouteManagementVehiclesPack50, value, _RouteManagementVehiclesPack,
                                ref _RouteManagementVehiclesPack10,
                                ref _RouteManagementVehiclesPackUnlimited)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.RouteManagementVehiclesPackUnlimited</target>
    <syntaxNode>SetValueToPackOption(ref _RouteManagementVehiclesPackUnlimited, value, _RouteManagementVehiclesPack,
                                ref _RouteManagementVehiclesPack10,
                                ref _RouteManagementVehiclesPack50)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.ServiceManagementStaffMembersPack</target>
    <syntaxNode>SetValueToPackGroup(ref _ServiceManagementStaffMembersPack, value,
                                ref _ServiceManagementStaffMembersPack10,
                                ref _ServiceManagementStaffMembersPack50,
                                ref _ServiceManagementStaffMembersPackUnlimited)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.ServiceManagementStaffMembersPack10</target>
    <syntaxNode>SetValueToPackOption(ref _ServiceManagementStaffMembersPack10, value, _ServiceManagementStaffMembersPack,
                                ref _ServiceManagementStaffMembersPack50,
                                ref _ServiceManagementStaffMembersPackUnlimited)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.ServiceManagementStaffMembersPack50</target>
    <syntaxNode>SetValueToPackOption(ref _ServiceManagementStaffMembersPack50, value, _ServiceManagementStaffMembersPack,
                                ref _ServiceManagementStaffMembersPack10,
                                ref _ServiceManagementStaffMembersPackUnlimited)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.CS.FeaturesSet.ServiceManagementStaffMembersPackUnlimited</target>
    <syntaxNode>SetValueToPackOption(ref _ServiceManagementStaffMembersPackUnlimited, value, _ServiceManagementStaffMembersPack,
                                ref _ServiceManagementStaffMembersPack10,
                                ref _ServiceManagementStaffMembersPack50)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.EP.EPUsers.EmployerEmail</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.EP.PXWeekSelectorAttribute.EPWeek.EndDate</target>
    <syntaxNode>Initialize()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.EP.PXWeekSelectorAttribute.EPWeek.FullNumber</target>
    <syntaxNode>Initialize()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.EP.PXWeekSelectorAttribute.EPWeek.Number</target>
    <syntaxNode>Initialize()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.EP.PXWeekSelectorAttribute.EPWeek.StartDate</target>
    <syntaxNode>Initialize()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.FA.FARegister.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.FA.FARegister.Posted</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.FA.FARegister.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.Batch.Draft</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.Batch.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.Batch.Posted</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.Batch.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.Batch.Scheduled</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.Batch.Voided</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.GLDocBatch.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.GLDocBatch.Posted</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.GLDocBatch.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.GLDocBatch.Voided</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.GL.Reclassification.UI.GLTranReclHist.ChildTrans</target>
    <syntaxNode>new List&lt;GLTranReclHist&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.IN.INKitRegister.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.IN.INKitRegister.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.IN.INRegister.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.IN.INRegister.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.PO.POReceipt.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.PO.POReceipt.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.SO.SOOrderType.CanHaveApplications</target>
    <syntaxNode>ARDocType.IsIn(AR.ARDocType.Invoice, AR.ARDocType.DebitMemo)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.SO.SOQuickProcessParametersShipDateExt.Tomorrow</target>
    <syntaxNode>Today.With(d =&gt; d.AddDays(1))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.TX.TaxAdjustment.Hold</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.TX.TaxAdjustment.Released</target>
    <syntaxNode>this.SetStatus()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.TX.TaxPluginDetail.ComboValues</target>
    <syntaxNode>list.Add(keyval[0], keyval[1])</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.TX.TaxPluginDetail.ComboValues</target>
    <syntaxNode>new Dictionary&lt;string, string&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.TX.TaxPluginDetail.ComboValues</target>
    <syntaxNode>new StringBuilder()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.TX.TaxPluginDetail.ComboValues</target>
    <syntaxNode>sb.AppendFormat("{0}|{1};", kv.Key, kv.Value)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1032">
    <target>PX.Objects.TX.TaxPluginDetail.ComboValues</target>
    <syntaxNode>sb.ToString()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1040">
    <target>PX.Objects.AP.APReleaseProcessExternalTax.APReleaseProcessExternalTax()</target>
    <syntaxNode>APReleaseProcessExternalTax</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1040">
    <target>PX.Objects.AR.ARDiscountSequenceMaint.DiscountValidation.DiscountValidation()</target>
    <syntaxNode>DiscountValidation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1040">
    <target>PX.Objects.AR.ARReleaseProcessExternalTax.ARReleaseProcessExternalTax()</target>
    <syntaxNode>ARReleaseProcessExternalTax</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1040">
    <target>PX.Objects.IN.WMS.CartsSupport&lt;TSelf, TWMSSystem, TWMSHeader, TGraph, TScanDocument, TScanLine&gt;.CartsSupport()</target>
    <syntaxNode>CartsSupport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1040">
    <target>PX.Objects.PO.ReceivePutAway.ReceivePutAway()</target>
    <syntaxNode>ReceivePutAway</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1042">
    <target>PX.Objects.CA.CCProcessingCenterMaint.CCProcessingCenter_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>CCProcessingHelper.CCProcessingCenterNeedsExpDateUpdate(this, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1042">
    <target>PX.Objects.GL.JournalEntry.Batch_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>GetReversingBatchesCount(batch)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.APInvoiceEntry.APTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, tran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.APQuickCheckEntry.APTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>DR.ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, e.Row as APTran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.APScheduleMaint.DocumentSelection_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>RemoveApplications(document)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.BaseVendorRefNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>DeleteKey(vrn)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.BaseVendorRefNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>UpdateKey(vrn)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.BatchRefAttribute.PX.Data.IPXRowPersistingSubscriber.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;PaymentMethodAccount&gt;(
                                new PXDataFieldAssign("APBatchLastRefNbr", NewNumber),
                                new PXDataFieldRestrict("CashAccountID", det.CashAccountID),
                                new PXDataFieldRestrict("PaymentMethodID", det.PaymentMethodID),
                                new PXDataFieldRestrict("APBatchLastRefNbr", det.APBatchLastRefNbr),
                                PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.PaymentRefAttribute.PX.Data.IPXRowPersistingSubscriber.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>DeleteCheck(det, oldNumber)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.PaymentRefAttribute.PX.Data.IPXRowPersistingSubscriber.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>InsertCheck(sender, det, (APRegister) e.Row, newNumber)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AP.VendorMaint.LocationExtAddress_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>base.LocationExtAddress_RowPersisted(cache, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.ARCashSaleEntry.ARTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>DR.ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, e.Row as ARTran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.ARInvoiceEntry.ARTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(sender, documentLine)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.ARInvoiceNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>base.RowPersisted(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.ARPaymentType.NumberingAttribute.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.ARScheduleMaint.DocumentSelection_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>RemoveApplications(document)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.CustomerLocationMaint.Location_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>base.Location_RowPersisted(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.CustomerMaint.LocationExtAddress_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>base.LocationExtAddress_RowPersisted(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.InvoiceNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>DeleteNumber(DocType, SetNumber ?? string.Empty, RefNoteID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.InvoiceNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>DeleteNumber(DocType, string.Empty, RefNoteID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.InvoiceNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>InsertNumber(sender, DocType, SetNumber, RefNoteID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.PaymentRefAttribute.PX.Data.IPXRowPersistingSubscriber.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Insert&lt;PaymentMethodAccount&gt;(
									new PXDataFieldAssign("CashAccountID", det.CashAccountID),
									new PXDataFieldAssign("PaymentMethodID", det.PaymentMethodID),
									new PXDataFieldAssign("UseForAR", det.UseForAR),
									new PXDataFieldAssign("ARLastRefNbr", NewNumber),
									new PXDataFieldAssign("ARAutoNextNbr", det.ARAutoNextNbr),
									new PXDataFieldAssign("ARIsDefault", det.ARIsDefault),
									new PXDataFieldAssign("UseForAP", det.UseForAP),
									new PXDataFieldAssign("APIsDefault", det.APIsDefault),
									new PXDataFieldAssign("APAutoNextNbr", det.APIsDefault))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.AR.PaymentRefAttribute.PX.Data.IPXRowPersistingSubscriber.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;PaymentMethodAccount&gt;(
								new PXDataFieldAssign("ARLastRefNbr", SetNumber),
								new PXDataFieldRestrict("CashAccountID", det.CashAccountID),
								new PXDataFieldRestrict("PaymentMethodID", det.PaymentMethodID),
								new PXDataFieldRestrict("ARLastRefNbr", det.ARLastRefNbr),
								PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CA.CABankTransactionsMaint.GLCATranToExpenseReceiptMatchingGraphExtension&lt;TGraph&gt;._(PX.Data.Events.RowPersisted&lt;PX.Objects.CA.CATran&gt;)</target>
    <syntaxNode>Base.Caches[typeof(CABankTranMatch)].PersistUpdated(bankTranMatch)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CA.CABankTransactionsMaint.GLCATranToExpenseReceiptMatchingGraphExtension&lt;TGraph&gt;._(PX.Data.Events.RowPersisted&lt;PX.Objects.CA.CATran&gt;)</target>
    <syntaxNode>receiptCache.PersistUpdated(receipt)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CA.CAReconEntry.CARecon_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CA.CATranEnq.CAEnqFilter_AccountID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CM.RevaluationRefNbrHelper.OnRowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>AssignRefNbr(sender, tran, generateIfNew: false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CM.RevaluationRefNbrHelper.OnRowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>AssignRefNbr(sender, tran, generateIfNew: true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.LocationExtAddress_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("CARAccountLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.LocationExtAddress_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("VPaymentInfoLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountMaint.Contact_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>CRGrammProcess.PersistGrams(this, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountMaint.Contact_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;AP.Vendor&gt;(
						new PXDataFieldAssign&lt;AP.Vendor.localeName&gt;(row.LanguageID),
						new PXDataFieldRestrict&lt;AP.Vendor.bAccountID&gt;(BAccount.Current?.BAccountID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountMaint.Contact_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;AR.Customer&gt;(
						new PXDataFieldAssign&lt;AR.Customer.localeName&gt;(row.LanguageID),
						new PXDataFieldRestrict&lt;AR.Customer.bAccountID&gt;(BAccount.Current?.BAccountID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountMaint.Contact_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;AR.Customer&gt;(
						new PXDataFieldAssign&lt;AR.Customer.localeName&gt;(row.LanguageID), 
						new PXDataFieldRestrict&lt;AR.Customer.bAccountID&gt;(BAccount.Current?.BAccountID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountMaint.Location_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("CARAccountLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.BusinessAccountMaint.Location_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("VPaymentInfoLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.Activity_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>DeleteActivity((CRActivity)e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.CREmailActivityMaint.CRSMEmail_OwnerID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>MarkAs(sender, email, (Guid)email.OwnerID, EPViewStatusAttribute.NOTVIEWED)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.CREmailActivityMaint.CRSMEmail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>MarkAs(cache, row, Accessinfo.UserID, EPViewStatusAttribute.VIEWED)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.CRTaskMaint.CRActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>MarkAs(cache, row, Accessinfo.UserID, EPViewStatusAttribute.VIEWED)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.ContactMaint.Contact_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>CRGrammProcess.PersistGrams(this, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.LeadMaint.Contact_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>CRGrammProcess.PersistGrams(this, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.LocationMaintBase&lt;Base, Primary, Where&gt;.Location_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("CARAccountLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.LocationMaintBase&lt;Base, Primary, Where&gt;.Location_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("VPaymentInfoLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>Contacts.Cache.Persist(PXDBOperation.Update)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;EP.EPApproval&gt;(new PXDataFieldRestrict&lt;EP.EPApproval.refNoteID&gt;(quote.NoteID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;Standalone.CROpportunityRevision&gt;(new PXDataFieldRestrict&lt;Standalone.CROpportunityRevision.noteID&gt;(quoteId))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;Standalone.CRQuote&gt;(new PXDataFieldRestrict&lt;Standalone.CRQuote.quoteID&gt;(quoteId))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CR.QuoteMaint.CRQuote_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Standalone.CROpportunity&gt;(
			        new PXDataFieldAssign&lt;Standalone.CROpportunity.defQuoteID&gt;(row.IsPrimary == true ? row.QuoteID : this.Opportunity.Current.DefQuoteID),
					new PXDataFieldRestrict&lt;Standalone.CROpportunity.opportunityID&gt;(PXDbType.VarChar, 255, this.Opportunity.Current.OpportunityID, PXComp.EQ)
		        )</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CS.AutoNumberAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;NumberingSequence&gt;(
								new PXDataFieldAssign&lt;NumberingSequence.lastNbr&gt;( number),
								new PXDataFieldRestrict&lt;NumberingSequence.numberingID&gt;( _numberingID),
								new PXDataFieldRestrict&lt;NumberingSequence.numberingSEQ&gt;( NumberingSEQ),
								new PXDataFieldRestrict&lt;NumberingSequence.lastNbr&gt;(LastNbr))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.CS.AutoNumberAttribute.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>GetNextNumber(sender, e.Row, _numberingID, _dateTime, NewNumber, out LastNbr, out WarnNbr, out NumberingSEQ)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EPApprovalList&lt;SourceAssign, Approved, Rejected&gt;.OnPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>sender.Send()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EPEventMaint.CRActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>MarkAs(cache, row, Accessinfo.UserID, EPViewStatusAttribute.VIEWED)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EPEventMaint.EPOtherAttendeeWithNotification_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>SendEMail(NotificationTypes.Cancel, new AllTypeAttendee
			            {
			                Type = _OTHER_ATTENDEE_TYPE,
			                Key = row.AttendeeID.ToString(),
			                EventNoteID = row.EventNoteID,
			                Name = row.Name,
			                DisplayName = row.Name,
			                Email = row.Email,
			                Comment = row.Comment,
			                Invitation = row.Invitation
			            })</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EPEventMaint.EPOtherAttendeeWithNotification_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>SendEMail(NotificationTypes.Cancel, new AllTypeAttendee
                        {
                            Type = _OTHER_ATTENDEE_TYPE,
                            Key = row.AttendeeID.ToString(),
                            EventNoteID = row.EventNoteID,
                            Name = row.Name,
                            DisplayName = row.Name,
                            Email = row.Email,
                            Comment = row.Comment,
                            Invitation = row.Invitation
                        })</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EPEventMaint.EPOtherAttendeeWithNotification_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>SendEMail(NotificationTypes.Invitation, SearchAllTypeAttendee(_OTHER_ATTENDEE_TYPE, row.AttendeeID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EPExpenseClaimDetails.claimDetailCD.NumberingAttribute.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>GetNextNumber(sender, e.Row, setup.ReceiptNumberingID, row.ExpenseDate)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EPExpenseClaimDetails.claimDetailCD.NumberingAttribute.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.EPActivityApprove_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>this.Persist()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EmployeeMaint.Location_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("CARAccountLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.EP.EmployeeMaint.Location_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Location&gt;(
							new PXDataFieldAssign("VPaymentInfoLocationID", _KeyToAbort),
							new PXDataFieldRestrict("LocationID", _KeyToAbort),
							PXDataFieldRestrict.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.AccountMaint.Account_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;GLHistory&gt;(new PXDataFieldAssign("CuryID", newCuryid),
							new PXDataFieldRestrict("AccountID", ((Account)e.Row).AccountID),
							new PXDataFieldRestrict("CuryID", PXDbType.VarChar, 5, null, PXComp.ISNULL),
							new PXDataFieldRestrict("tstamp", PXDbType.Timestamp, 8, timestamp, PXComp.LE))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.GLBudgetEntry.BudgetFilter_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>PrepareGraphForLongOperation()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.GLSetupMaint.GLSetup_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;Account&gt;(new PXDataFieldAssign("COAOrder", Convert.ToInt32(AccountType.COAOrderOptions[(int)NewRow.COAOrder].Substring((int)i, 1))),
                                                                        new PXDataFieldRestrict("Type", AccountType.Literal(i)))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.GLSetupMaint.GLSetup_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;PM.PMAccountGroup&gt;(new PXDataFieldAssign(typeof(PM.PMAccountGroup.sortOrder).Name, Convert.ToInt32(AccountType.COAOrderOptions[(int)NewRow.COAOrder].Substring((int)i, 1))),
                                                                        new PXDataFieldRestrict(typeof(PM.PMAccountGroup.type).Name, AccountType.Literal(i)))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.JournalEntry.GLTran_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>je.Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>CreateRefNbr(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>RestoreRefNbr(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>CreateRefNbr(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.GL.MasterFinPeriodMaint._(PX.Data.Events.RowDeleting&lt;PX.Objects.GL.FinPeriods.MasterFinYear&gt;)</target>
    <syntaxNode>yearSetup.Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.INAdjustmentEntry.INRegister_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>piReview.ReopenPI(adjustment.PIID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.INPICountEntry.INBarCodeItem_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>UpdatePhysicalQty()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.INPICountEntry.INPIDetail_RowUpdating(PX.Data.PXCache, PX.Data.PXRowUpdatingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;INPIDetail&gt;(
					new PXDataFieldAssign(typeof (INPIDetail.status).Name, PXDbType.VarChar, d.Status),
					new PXDataFieldAssign(typeof (INPIDetail.physicalQty).Name, PXDbType.Decimal, d.PhysicalQty),
					new PXDataFieldAssign(typeof (INPIDetail.varQty).Name, PXDbType.Decimal, d.VarQty),
					new PXDataFieldAssign(typeof (INPIDetail.extVarCost).Name, PXDbType.Decimal, d.ExtVarCost),
					new PXDataFieldRestrict(typeof (INPIDetail.pIID).Name, PXDbType.VarChar, d.PIID),
					new PXDataFieldRestrict(typeof (INPIDetail.lineNbr).Name, PXDbType.Int, d.LineNbr),
					new PXDataFieldRestrict(typeof(INPIDetail.Tstamp).Name, PXDbType.Timestamp, 8, this.TimeStamp, PXComp.LE)
				     	)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.INPICountEntry.INPIDetail_RowUpdating(PX.Data.PXCache, PX.Data.PXRowUpdatingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;INPIDetail&gt;(
					new PXDataFieldAssign(typeof(INPIDetail.status).Name, PXDbType.VarChar, d.Status),
					new PXDataFieldAssign(typeof(INPIDetail.physicalQty).Name, PXDbType.Decimal, d.PhysicalQty),
					new PXDataFieldAssign(typeof(INPIDetail.varQty).Name, PXDbType.Decimal, d.VarQty),
					new PXDataFieldRestrict(typeof(INPIDetail.pIID).Name, PXDbType.VarChar, d.PIID),
					new PXDataFieldRestrict(typeof(INPIDetail.lineNbr).Name, PXDbType.Int, d.LineNbr),
					new PXDataFieldRestrict(typeof(INPIDetail.Tstamp).Name, PXDbType.Timestamp, 8, this.TimeStamp, PXComp.LE))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.INPICountEntry.INPIDetail_RowUpdating(PX.Data.PXCache, PX.Data.PXRowUpdatingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;INPIHeader&gt;(
					new PXDataFieldAssign(typeof (INPIHeader.totalPhysicalQty).Name, PXDbType.Decimal, (d.PhysicalQty ?? 0) - (o.PhysicalQty ?? 0)){ Behavior = PXDataFieldAssign.AssignBehavior.Summarize},
					new PXDataFieldAssign(typeof (INPIHeader.totalVarQty).Name, PXDbType.Decimal, (d.VarQty ?? 0) - (o.VarQty ?? 0)){ Behavior = PXDataFieldAssign.AssignBehavior.Summarize},
					new PXDataFieldAssign(typeof(INPIHeader.totalVarCost).Name, PXDbType.Decimal, (d.ExtVarCost ?? 0) - (o.ExtVarCost ?? 0)) { Behavior = PXDataFieldAssign.AssignBehavior.Summarize },						
					new PXDataFieldRestrict(typeof (INPIHeader.pIID).Name, PXDbType.VarChar, d.PIID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.INPICountEntry.INPIDetail_RowUpdating(PX.Data.PXCache, PX.Data.PXRowUpdatingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;INPIHeader&gt;(
					new PXDataFieldAssign(typeof(INPIHeader.totalPhysicalQty).Name, PXDbType.Decimal, (d.PhysicalQty ?? 0) - (o.PhysicalQty ?? 0))
					{
						Behavior = PXDataFieldAssign.AssignBehavior.Summarize
					},
					new PXDataFieldAssign(typeof(INPIHeader.totalVarQty).Name, PXDbType.Decimal, (d.VarQty ?? 0) - (o.VarQty ?? 0))
					{
						Behavior = PXDataFieldAssign.AssignBehavior.Summarize
					},
					new PXDataFieldRestrict(typeof(INPIHeader.pIID).Name, PXDbType.VarChar, d.PIID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.INSiteMaint.INSite_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;INItemSite&gt;(prm.ToArray())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;CSAnswers&gt;(new PXDataFieldRestrict("RefNoteID", PXDbType.UniqueIdentifier, ((InventoryItem)e.Row).NoteID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;INCostStatus&gt;(
					new PXDataFieldRestrict("InventoryID", PXDbType.Int, row.InventoryID),
					new PXDataFieldRestrict("QtyOnHand", PXDbType.Decimal, 8, 0m, PXComp.EQ)
					)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;INItemCostHist&gt;(
					new PXDataFieldRestrict("InventoryID", PXDbType.Int, row.InventoryID),
					new PXDataFieldRestrict("FinYtdQty", PXDbType.Decimal, 8, 0m, PXComp.EQ),
					new PXDataFieldRestrict("FinYtdCost", PXDbType.Decimal, 8, 0m, PXComp.EQ)
					)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;INItemSiteHist&gt;(
					new PXDataFieldRestrict("InventoryID", PXDbType.Int, row.InventoryID),
					new PXDataFieldRestrict("FinYtdQty", PXDbType.Decimal, 8, 0m, PXComp.EQ)
					)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;INLocationStatus&gt;(
					new PXDataFieldRestrict("InventoryID", PXDbType.Int, row.InventoryID),
					new PXDataFieldRestrict("QtyOnHand", PXDbType.Decimal, 8, 0m, PXComp.EQ),
					new PXDataFieldRestrict("QtyAvail", PXDbType.Decimal, 8, 0m, PXComp.EQ)
					)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;INLotSerialStatus&gt;(
					new PXDataFieldRestrict("InventoryID", PXDbType.Int, row.InventoryID),
					new PXDataFieldRestrict("QtyOnHand", PXDbType.Decimal, 8, 0m, PXComp.EQ),
					new PXDataFieldRestrict("QtyAvail", PXDbType.Decimal, 8, 0m, PXComp.EQ)
					)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;INSiteStatus&gt;(
					new PXDataFieldRestrict("InventoryID", PXDbType.Int, row.InventoryID),
					new PXDataFieldRestrict("QtyOnHand", PXDbType.Decimal, 8, 0m, PXComp.EQ),
					new PXDataFieldRestrict("QtyAvail", PXDbType.Decimal, 8, 0m, PXComp.EQ)
					)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.LSINComponentMasterTran.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Master_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.LSINComponentTran.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Master_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.LSINTran.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Master_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.Detail_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>INLotSerialNbrAttribute.AssignNumber&lt;INLotSerClass, INLotSerClass.lotSerClassID&gt;(sender, ((ILSDetail)e.Row).LotSerClassID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.Detail_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>INLotSerialNbrAttribute.AssignNumber&lt;InventoryItem, InventoryItem.inventoryID&gt;(sender, ((ILSDetail)e.Row).InventoryID.ToString())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>Detail_RowPersisting(cache, new PXRowPersistingEventArgs(e.Operation, detail))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.NonStockItemMaint.InventoryItem_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;CSAnswers&gt;(new PXDataFieldRestrict("RefNoteID", PXDbType.UniqueIdentifier, ((InventoryItem)e.Row).NoteID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.PXDBForeignIdentityAttribute.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Insert(_ForeignIdentity, PXDataFieldAssign.OperationSwitchAllowed)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.IN.PXDBForeignIdentityAttribute.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Update(_ForeignIdentity)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PM.PMQuoteMaint.PMQuote_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;CROpportunityDiscountDetail&gt;(new PXDataFieldRestrict&lt;CROpportunityDiscountDetail.quoteID&gt;(PXDbType.UniqueIdentifier, opportunity.DefQuoteID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PM.PMQuoteMaint.PMQuote_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;CROpportunityProducts&gt;(new PXDataFieldRestrict&lt;CROpportunityProducts.quoteID&gt;(PXDbType.UniqueIdentifier, opportunity.DefQuoteID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PM.PMQuoteMaint.PMQuote_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;CROpportunityRevision&gt;(new PXDataFieldRestrict&lt;CROpportunityRevision.noteID&gt;(PXDbType.UniqueIdentifier, opportunity.DefQuoteID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PM.PMQuoteMaint.PMQuote_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;CROpportunityTax&gt;(new PXDataFieldRestrict&lt;CROpportunityTax.quoteID&gt;(PXDbType.UniqueIdentifier, opportunity.DefQuoteID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PM.PMQuoteMaint.PMQuote_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;CR.Standalone.CROpportunity&gt;(
						new PXDataFieldAssign&lt;CR.Standalone.CROpportunity.defQuoteID&gt;(row.QuoteID),
						new PXDataFieldRestrict&lt;CR.Standalone.CROpportunity.opportunityID&gt;(PXDbType.VarChar, 255, row.OpportunityID, PXComp.EQ)
						)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PM.PMQuoteMaint.PMQuote_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXDatabase.Update&lt;CR.Standalone.CROpportunity&gt;(
					new PXDataFieldAssign&lt;CR.Standalone.CROpportunity.defQuoteID&gt;(row.QuoteID),
					new PXDataFieldRestrict&lt;CR.Standalone.CROpportunity.opportunityID&gt;(PXDbType.VarChar, 255, row.OpportunityID, PXComp.EQ)
				)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PO.LSPOReceiptLine.Detail_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Detail_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.PO.LSPOReceiptLine.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Master_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.SO.LSARTran.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Master_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.SO.LSSOLine.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Master_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.SO.LSSOShipLine.Master_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>base.Master_RowPersisting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.TX.TaxImportDataMaint.TXImportFileData_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;TXImportFileData&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1043">
    <target>PX.Objects.TX.TaxImportZipDataMaint.TXImportZipFileData_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXDatabase.Delete&lt;TXImportZipFileData&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AP.APAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;APAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AP.APContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;APContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RetainageApply_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Base.Transactions.Update(tran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AP.PaymentRefAttribute.PX.Data.IPXFieldDefaultingSubscriber.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.Graph.Caches&lt;PaymentMethodAccount&gt;().Update(det)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AP.VendorMaint.LocationExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>FillPaymentDetails(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.ARAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;ARAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.ARContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;ARContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RetainageApply_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Base.Transactions.Update(tran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.ARShippingAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;ARShippingAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.ARShippingContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;ARShippingContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.CustomerCreditHelper&lt;Entity, CustomerField, HoldField, ReleasedField&gt;.RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>Verify(sender, e.Row, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.CustomerMaint.CustomerPaymentMethod_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>this.MergeDetailsWithDefinition(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.AR.CustomerPaymentMethodMaint.CustomerPaymentMethod_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>this.MergeDetailsWithDefinition(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CA.CASetupMaint.CASetup_RequestApproval_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.Update(setup)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CA.CashAccountMaint.CashAccount_AccountID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Account_AccountID.Update(acct)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CA.CashAccountMaint.PaymentMethodAccount_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>this.FillPaymentDetails(row.PaymentMethodID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CR.AddressSelectBase.RowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>RowInsertedHandler(sender, new PXRowInsertedEventArgs(e.Row, true))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CR.CREmailActivityMaint.CRSMEmail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>MarkAs(cache, row, Accessinfo.UserID, EPViewStatusAttribute.VIEWED)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CR.CROpportunityAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;CRAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CR.CROpportunityContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;CRContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CR.CRShippingAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;CRShippingAddress&gt;(sender, new PXFieldVerifyingEventArgs(e.Row, newValue, e.ExternalCall))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CR.CRShippingContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;CRShippingContact&gt;(sender, new PXFieldVerifyingEventArgs(e.Row, newValue, e.ExternalCall))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CR.CRTaskMaint.CRActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>MarkAs(cache, row, Accessinfo.UserID, EPViewStatusAttribute.VIEWED)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CS.DimensionMaint.Segment_AutoNumber_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.Update(currow)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CS.DimensionMaint.Segment_Validate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.Update(currow)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CS.OrganizationMaint.Company_BaseCuryID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>CompanyCurrency.Update(bc)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CS.OrganizationMaint.Company_BaseCuryID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>FinancinalCurrency.Insert(finRow)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CS.OrganizationMaint.Company_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>this.CompanyCurrency.Insert(b)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.CT.ContractMaint.Contract_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>CalcSummary(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.EP.EPEventMaint.CRActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>MarkAs(cache, row, Accessinfo.UserID, EPViewStatusAttribute.VIEWED)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.EP.EmployeeMaint.Location_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>FillPaymentDetails(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.FA.AssetMaint.FixedAsset_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>AssetDetails.Insert()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.GL.GLBudgetTreeMaint.GLBudgetTree_GroupID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>this.CurrentSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.IN.INScanIssue._(PX.Data.Events.FieldDefaulting&lt;PX.Objects.IN.INScanIssue.Header, PX.Objects.IN.INScanIssue.Header.siteID&gt;)</target>
    <syntaxNode>IsWarehouseRequired()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.IN.INScanReceive._(PX.Data.Events.FieldDefaulting&lt;PX.Objects.IN.INScanReceive.Header, PX.Objects.IN.INScanReceive.Header.siteID&gt;)</target>
    <syntaxNode>IsWarehouseRequired()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.IN.INScanTransfer._(PX.Data.Events.FieldDefaulting&lt;PX.Objects.IN.INScanTransfer.Header, PX.Objects.IN.INScanTransfer.Header.siteID&gt;)</target>
    <syntaxNode>IsWarehouseRequired()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_LotSerClassID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>INLotSerClass.GetDefaultLotSerClass(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PM.PMAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;PMAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PM.PMContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;PMContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PM.PMShippingAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;PMShippingAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PM.PMShippingContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;PMShippingContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PM.SetupMaint._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMSetup&gt;)</target>
    <syntaxNode>EnsureDefaultCostCode(e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PO.POOrderEntry.POOrder_RetainageApply_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Transactions.Update(line)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PO.PORemitAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;PORemitAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PO.PORemitContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;PORemitContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PO.POSetupMaint.POSetup_OrderRequestApproval_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.Update(setup)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PO.POShipAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;POShipAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.PO.POShipContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;POShipContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.RQ.RQSetupMaint.RQSetup_RequestApproval_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.Update(setup)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.RQ.RQSetupMaint.RQSetup_RequisitionApproval_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.Update(setup)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.PickPackShip.PickPackInfo_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>EnsureUserSetupExists()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.SOBillingAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;SOBillingAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.SOBillingContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;SOBillingContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.SOSetupMaint.SOSetup_OrderRequestApproval_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.Update(setup)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.SOShipmentAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;SOShipmentAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.SOShipmentContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;SOShipmentContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.SOShippingAddressAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Address_IsDefaultAddress_FieldVerifying&lt;SOShippingAddress&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.Objects.SO.SOShippingContactAttribute.Record_Override_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Contact_IsDefaultContact_FieldVerifying&lt;SOShippingContact&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.TM.ImportCompanyTreeMaint.EPCompanyTreeMaster_ParentWGID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>this.CurrentSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1044">
    <target>PX.TM.ImportCompanyTreeMaint.EPCompanyTreeMember_WorkGroupID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>this.CurrentSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APDiscountMaint.APDiscount_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>DiscountEngine.GetDiscountTypes(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoiceDiscountDetail_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.DocDate, (discountDetail.Type != null &amp;&amp; discountDetail.Type != DiscountType.Document &amp;&amp; discountDetail.Type != DiscountType.ExternalDocument), DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoiceDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>_discountEngine.InsertManualDocGroupDiscount(Transactions.Cache, Transactions,
						DiscountDetails, discountDetail, discountDetail.DiscountID, null, Document.Current.BranchID,
						Document.Current.VendorLocationID, Document.Current.DocDate,
						DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoiceDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>_discountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, null, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoiceDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, oldDiscountDetail, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoiceDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.DocDate, discountDetail.Type != DiscountType.Document, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoiceDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateManualDocGroupDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, discountDetail.DiscountID, sender.ObjectsEqual&lt;APInvoiceDiscountDetail.discountID&gt;(e.Row, e.OldRow) ? discountDetail.DiscountSequenceID : null, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.DocDate, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APTran_DiscountID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateManualLineDiscount(sender, Transactions, row, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.DocDate, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APTran_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>_discountEngine.RecalculateGroupAndDocumentDiscounts(sender, Transactions, null, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.DocDate, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, tran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APInvoiceEntry.APTran_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APQuickCheckEntry.APTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>DR.ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, e.Row as APTran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AP.APScheduleMaint.DocumentSelection_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>RemoveApplications(document)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARCashSaleEntry.ARTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>DR.ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, e.Row as ARTran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARDiscountMaint.ARDiscount_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>DiscountEngine.GetDiscountTypes(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoiceDiscountDetail_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, ARDiscountDetails, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.DocDate, (discountDetail.Type != null &amp;&amp; discountDetail.Type != DiscountType.Document &amp;&amp; discountDetail.Type != DiscountType.ExternalDocument), DiscountEngine.DefaultARDiscountCalculationParameters | DiscountEngine.DiscountCalculationOptions.DisableFreeItemDiscountsCalculation)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoiceDiscountDetail_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.UpdateGroupAndDocumentDiscountRatesOnly(Transactions.Cache, Transactions, null, ARDiscountDetails, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoiceDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.InsertManualDocGroupDiscount(Transactions.Cache, Transactions, ARDiscountDetails, discountDetail, discountDetail.DiscountID, null, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.DocDate, GetDefaultARDiscountCalculationOptions(Document.Current) | DiscountEngine.DiscountCalculationOptions.DisableFreeItemDiscountsCalculation)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoiceDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, ARDiscountDetails, discountDetail, null, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoiceDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, ARDiscountDetails, discountDetail, oldDiscountDetail, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoiceDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, ARDiscountDetails, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.DocDate, discountDetail.Type != DiscountType.Document, DiscountEngine.DefaultARDiscountCalculationParameters | DiscountEngine.DiscountCalculationOptions.DisableFreeItemDiscountsCalculation)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoiceDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.UpdateManualDocGroupDiscount(Transactions.Cache, Transactions, ARDiscountDetails, discountDetail, discountDetail.DiscountID, sender.ObjectsEqual&lt;ARInvoiceDiscountDetail.discountID&gt;(e.Row, e.OldRow) ? discountDetail.DiscountSequenceID : null, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.DocDate.Value, DiscountEngine.DefaultARDiscountCalculationParameters | DiscountEngine.DiscountCalculationOptions.DisableFreeItemDiscountsCalculation)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARTran_DiscountID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.UpdateManualLineDiscount(sender, Transactions, row, ARDiscountDetails, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.DocDate, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARTran_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>ARDiscountEngine.RecalculateGroupAndDocumentDiscounts(
						sender, 
						Transactions, 
						null, 
						ARDiscountDetails, 
						Document.Current.BranchID, 
						Document.Current.CustomerLocationID, 
						Document.Current.DocDate,
						DiscountEngine.DefaultARDiscountCalculationParameters | DiscountEngine.DiscountCalculationOptions.DisableFreeItemDiscountsCalculation)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(sender, documentLine)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARInvoiceEntry.ARTran_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.ARScheduleMaint.DocumentSelection_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>RemoveApplications(document)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.AR.CustomerPaymentMethodMaint.CustomerPaymentMethodDetail_Value_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance&lt;CCCustomerInformationManagerGraph&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CA.CCProcessingCenterMaint.CCProcessingCenterDetail_Value_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance&lt;CCPaymentProcessingGraph&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CA.CCProcessingCenterMaint.CCProcessingCenter_ProcessingTypeName_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>this.ImportSettings()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.Activity_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>DeleteActivity((CRActivity)e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.CRAttributeList&lt;TEntity&gt;.ReferenceRowUpdatingHandler(PX.Data.PXCache, PX.Data.PXRowUpdatingEventArgs)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.CSAttributeGroupList&lt;TClass, TEntity&gt;.OnRowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>DeleteAttributesForGroup(_Graph, attributeGroup)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.MergeEntry.CRMerge_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>GenerateDynamicColumns(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.MergeMaint.CRMergeCriteria_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>CorrectCriteriaValue(Document.Current, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.MergeMaint.CRMergeCriteria_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>SetConditionList(Document.Current, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.MergeMaint.CRMergeMethod_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>SetMethodList(Document.Current, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.MergeMaint.CRMerge_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>InsertMethods(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.MergeMaint.CRMerge_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>SetDataFieldLists(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.MergeMaint.CRMerge_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>InsertMethods(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.OpportunityMaint.SalesTax.CRTaxTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>FindCROpportunityTax(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.QuoteMaint.SalesTax.CRTaxTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>OpportunityMaint.SalesTax.FindCROpportunityTax(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CR.SendKBArticleMaint.Article_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance&lt;WikiReader&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.CT.ContractMaint.Contract_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>CalcSummary(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.DR.DraftScheduleMaintASC606._(PX.Data.Events.FieldUpdated&lt;PX.Objects.DR.DRSchedule, PX.Objects.DR.DRSchedule.isOverridden&gt;)</target>
    <syntaxNode>SingleScheduleCreator.RecalculateSchedule(Base)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.CRBaseActivityMaint&lt;TGraph, TMaster&gt;.TMasterFieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>CreateInstance(graphType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPApprovalAndAssignmentMapBase&lt;TGraph&gt;.EPAssignmentMap_GraphType_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance(type)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPApprovalAutomation&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.Approved_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>this.Approve(doc)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPApprovalAutomation&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.Rejected_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>this.Reject(doc)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPApprovalAutomation&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>Assign(doc, maps)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPApprovalAutomationWithReservedDoc&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>Assign(doc, maps)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPApprovalList&lt;SourceAssign, Approved, Rejected&gt;.OnPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>TemplateNotificationGenerator.Create(this._Graph, e.Row, approval.NotificationID.Value)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPApprovalList&lt;SourceAssign, Approved, Rejected&gt;.OnPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>sender.Send()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPAssignmentMaint.EPAssignmentMap_GraphType_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance(type)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPEventMaint.CRActivity_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>SendEMails(NotificationTypes.Reschedule, invitedAttendees)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPEventMaint.EPOtherAttendeeWithNotification_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>SendEMail(NotificationTypes.Cancel, new AllTypeAttendee
			            {
			                Type = _OTHER_ATTENDEE_TYPE,
			                Key = row.AttendeeID.ToString(),
			                EventNoteID = row.EventNoteID,
			                Name = row.Name,
			                DisplayName = row.Name,
			                Email = row.Email,
			                Comment = row.Comment,
			                Invitation = row.Invitation
			            })</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPEventMaint.EPOtherAttendeeWithNotification_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>SendEMail(NotificationTypes.Cancel, new AllTypeAttendee
                        {
                            Type = _OTHER_ATTENDEE_TYPE,
                            Key = row.AttendeeID.ToString(),
                            EventNoteID = row.EventNoteID,
                            Name = row.Name,
                            DisplayName = row.Name,
                            Email = row.Email,
                            Comment = row.Comment,
                            Invitation = row.Invitation
                        })</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.EP.EPEventMaint.EPOtherAttendeeWithNotification_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>SendEMail(NotificationTypes.Invitation, SearchAllTypeAttendee(_OTHER_ATTENDEE_TYPE, row.AttendeeID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.FieldUpdated&lt;PX.Objects.Extensions.Discount.Detail, PX.Objects.Extensions.Discount.Detail.discountID&gt;)</target>
    <syntaxNode>DiscountEngineGraph.UpdateManualLineDiscount(Details.Cache,
                    Details, e.Row, Discounts, doc.BranchID, doc.LocationID ?? 0,
                    doc.DocumentDate ?? (new PXGraph()).Accessinfo.BusinessDate,
					DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.FieldUpdated&lt;PX.Objects.Extensions.Discount.Detail, PX.Objects.Extensions.Discount.Detail.discountID&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowDeleted&lt;PX.Objects.Extensions.Discount.Detail&gt;)</target>
    <syntaxNode>DiscountEngineGraph.RecalculateGroupAndDocumentDiscounts(Details.Cache,
                    Details, null, Discounts, doc.BranchID, doc.LocationID ?? 0, doc.DocumentDate ?? (new PXGraph()).Accessinfo.BusinessDate, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowDeleted&lt;PX.Objects.Extensions.Discount.Detail&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowDeleted&lt;PX.Objects.Extensions.Discount.Discount&gt;)</target>
    <syntaxNode>DiscountEngineGraph.UpdateDocumentDiscount(Details.Cache, Details, Discounts, Documents.Current.BranchID, Documents.Current.LocationID ?? 0, Documents.Current.DocumentDate, (e.Row.Type != null &amp;&amp; e.Row.Type != DiscountType.Document &amp;&amp; e.Row.Type != DiscountType.ExternalDocument), DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowInserted&lt;PX.Objects.Extensions.Discount.Detail&gt;)</target>
    <syntaxNode>RecalculateDiscounts(e.Cache, e.Row, e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowInserted&lt;PX.Objects.Extensions.Discount.Discount&gt;)</target>
    <syntaxNode>DiscountEngineGraph.InsertManualDocGroupDiscount(Details.Cache, Details, Discounts, e.Row, e.Row.DiscountID, null,
						Documents.Current.BranchID, Documents.Current.LocationID ?? 0, Documents.Current.DocumentDate, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowInserted&lt;PX.Objects.Extensions.Discount.Discount&gt;)</target>
    <syntaxNode>DiscountEngineGraph.SetExternalManualDocDiscount(Details.Cache, Details, Discounts, e.Row, null, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowUpdated&lt;PX.Objects.Extensions.Discount.Detail&gt;)</target>
    <syntaxNode>RecalculateDiscounts(e.Cache, e.Row, e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowUpdated&lt;PX.Objects.Extensions.Discount.Discount&gt;)</target>
    <syntaxNode>DiscountEngineGraph.InsertManualDocGroupDiscount(Details.Cache, Details, Discounts, e.Row, e.Row.DiscountID, Discounts.Cache.ObjectsEqual&lt;Discount.discountID&gt;(e.Row, e.OldRow) ? e.Row.DiscountSequenceID : null,
                        Documents.Current.BranchID, Documents.Current.LocationID ?? 0, Documents.Current.DocumentDate, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowUpdated&lt;PX.Objects.Extensions.Discount.Discount&gt;)</target>
    <syntaxNode>DiscountEngineGraph.SetExternalManualDocDiscount(Details.Cache, Details, Discounts, e.Row, e.OldRow, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowUpdated&lt;PX.Objects.Extensions.Discount.Discount&gt;)</target>
    <syntaxNode>DiscountEngineGraph.UpdateDocumentDiscount(Details.Cache, Details, Discounts, Documents.Current.BranchID, Documents.Current.LocationID ?? 0, Documents.Current.DocumentDate, e.Row.Type != DiscountType.Document, DiscountEngine.DefaultARDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowUpdated&lt;PX.Objects.Extensions.Discount.Document&gt;)</target>
    <syntaxNode>DiscountEngineGraph.CalculateDocumentDiscountRate(Details.Cache,
					Details, null, null, Discounts, current.CuryLineTotal ?? 0m, current.CuryDiscTot ?? 0m)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.Extensions.Discount.DiscountGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowUpdated&lt;PX.Objects.Extensions.Discount.Document&gt;)</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.FA.AssetClassMaint.FixedAsset_Depreciable_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>AssetMaint.UpdateBalances&lt;FABookSettings.depreciate, FixedAsset.depreciable&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.FA.AssetMaint.FADetails_AcquisitionCost_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>UpdateBalances&lt;FABookBalance.acquisitionCost, FADetails.acquisitionCost&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.FA.AssetMaint.FADetails_DepreciateFromDate_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>UpdateBalances&lt;FABookBalance.deprFromDate, FADetails.depreciateFromDate&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.FA.AssetMaint.FADetails_SalvageAmount_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>UpdateBalances&lt;FABookBalance.salvageAmount, FADetails.salvageAmount&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.FA.AssetMaint.FixedAsset_Depreciable_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>UpdateBalances&lt;FABookBalance.depreciate, FixedAsset.depreciable&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.FA.AssetMaint.FixedAsset_UsefulLife_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>UpdateBalances&lt;FABookBalance.usefulLife, FixedAsset.usefulLife&gt;(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.GL.JournalEntry.GLTran_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance&lt;JournalEntry&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.GL.MasterFinPeriodMaint._(PX.Data.Events.RowDeleting&lt;PX.Objects.GL.FinPeriods.MasterFinYear&gt;)</target>
    <syntaxNode>CreateInstance&lt;FiscalYearSetupMaint&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.GL.MasterFinPeriodMaint._(PX.Data.Events.RowDeleting&lt;PX.Objects.GL.FinPeriods.MasterFinYear&gt;)</target>
    <syntaxNode>PXGraph.CreateInstance&lt;FiscalYearSetupMaint&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.IN.INAdjustmentEntry.INRegister_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance&lt;INPIController&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.IN.INPICountEntry.INBarCodeItem_InventoryID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>ValidatePIInventoryLocation((int?)e.NewValue, detail.LocationID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.IN.INPICountEntry.INBarCodeItem_LocationID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>ValidatePIInventoryLocation(detail.InventoryID, (int?)e.NewValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.IN.INPICountEntry.INBarCodeItem_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>UpdatePhysicalQty()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.IN.INPIEntry.INPIDetail_InventoryID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>ValidatePIInventoryLocation((int?)e.NewValue, detail.LocationID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.IN.INPIEntry.INPIDetail_LocationID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>ValidatePIInventoryLocation(detail.InventoryID, (int?)e.NewValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.IN.INScanCount._(PX.Data.Events.FieldVerifying&lt;PX.Objects.IN.INScanCount.Header, PX.Objects.IN.INScanCount.Header.inventoryID&gt;)</target>
    <syntaxNode>inspector.IsInventoryLocationIncludedInPI((int?)e.NewValue, e.Row.LocationID, piHeader.PIID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PM.ChangeOrderEntry._(PX.Data.Events.FieldUpdated&lt;PX.Objects.PM.PMChangeOrder, PX.Objects.PM.PMChangeOrder.hold&gt;)</target>
    <syntaxNode>Approval.Assign(e.Row, Setup.Current.ChangeOrderApprovalMapID, Setup.Current.ChangeOrderApprovalNotificationID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PM.PMQuoteMaint.SalesTax.CRTaxTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>OpportunityMaint.SalesTax.FindCROpportunityTax(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PM.ProformaEntry._(PX.Data.Events.FieldUpdated&lt;PX.Objects.PM.PMProforma, PX.Objects.PM.PMProforma.hold&gt;)</target>
    <syntaxNode>Approval.Assign(e.Row, Setup.Current.ProformaApprovalMapID, Setup.Current.ProformaApprovalNotificationID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PM.ProjectAttributeGroupMaint.CSAttributeGroup_RowDeleting(PX.Data.PXCache, PX.Data.PXRowDeletingEventArgs)</target>
    <syntaxNode>CSAttributeGroupList&lt;CSAttributeGroup, CSAttributeGroup&gt;.DeleteAttributesForGroup(this, attributeGroup)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POLine_DiscountID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateManualLineDiscount(sender, Transactions, row, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.OrderDate, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POLine_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>_discountEngine.RecalculateGroupAndDocumentDiscounts(sender, Transactions, null, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.OrderDate, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POLine_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, (POLine)e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POLine_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POOrderDiscountDetail_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.OrderDate, (discountDetail.Type != null &amp;&amp; discountDetail.Type != DiscountType.Document &amp;&amp; discountDetail.Type != DiscountType.ExternalDocument), DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POOrderDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>_discountEngine.InsertManualDocGroupDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, discountDetail.DiscountID, null, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.OrderDate, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POOrderDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>_discountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, null, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POOrderDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, oldDiscountDetail, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POOrderDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, DiscountDetails, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.OrderDate, discountDetail.Type != DiscountType.Document, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.PO.POOrderEntry.POOrderDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateManualDocGroupDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, discountDetail.DiscountID, sender.ObjectsEqual&lt;POOrderDiscountDetail.discountID&gt;(e.Row, e.OldRow) ? discountDetail.DiscountSequenceID : null, Document.Current.BranchID, Document.Current.VendorLocationID, Document.Current.OrderDate, DiscountEngine.DefaultAPDiscountCalculationParameters)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOInvoiceEntry.ARInvoiceDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>base.ARInvoiceDiscountDetail_RowInserted(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOInvoiceEntry.ARTran_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>base.ARTran_RowDeleted(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOInvoiceEntry.ARTran_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, (ARTran)e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOInvoiceEntry.ARTran_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.CCOrderList.Authorize(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>ccProcGraph.RecordAuthorization(iOrder, tranRecord)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.CustomerPaymentMethodDetail_Value_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXGraph.CreateInstance&lt;CCCustomerInformationManagerGraph&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.CustomerPaymentMethodDetail_Value_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>graph.GetOrCreatePaymentProfile(this, new GenericCustomerPaymentMethodAdaper&lt;CustomerPaymentMethodC&gt;(DefPaymentMethodInstance),
						new GenericCustomerPaymentMethodDetailAdapter&lt;CustomerPaymentMethodDetail&gt;(DefPaymentMethodInstanceDetailsAll))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_DiscountID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateManualLineDiscount(sender, Transactions, row, DiscountDetails, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.OrderDate, GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>_discountEngine.RecalculateGroupAndDocumentDiscounts(sender, Transactions, null, DiscountDetails, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.OrderDate, GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, (SOLine)e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>RecalculateDiscounts(sender, row, oldRow)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOOrderDiscountDetail_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, DiscountDetails, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.OrderDate, (discountDetail.Type != null &amp;&amp; discountDetail.Type != DiscountType.Document &amp;&amp; discountDetail.Type != DiscountType.ExternalDocument), GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOOrderDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>_discountEngine.InsertManualDocGroupDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, discountDetail.DiscountID, null, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.OrderDate, GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOOrderDiscountDetail_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>_discountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, null, GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOOrderDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.SetExternalManualDocDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, oldDiscountDetail, GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOOrderDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateDocumentDiscount(Transactions.Cache, Transactions, DiscountDetails, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.OrderDate, discountDetail.Type != DiscountType.Document, GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1045">
    <target>PX.Objects.SO.SOOrderEntry.SOOrderDiscountDetail_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>_discountEngine.UpdateManualDocGroupDiscount(Transactions.Cache, Transactions, DiscountDetails, discountDetail, discountDetail.DiscountID, sender.ObjectsEqual&lt;SOOrderDiscountDetail.discountID&gt;(e.Row, e.OldRow) ? discountDetail.DiscountSequenceID : null, Document.Current.BranchID, Document.Current.CustomerLocationID, Document.Current.OrderDate, GetDefaultSODiscountCalculationOptions(Document.Current))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1046">
    <target>PX.Objects.GL.GLBudgetEntry.BudgetFilter_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>PXLongOperation.StartOperation(this.UID, (PXToggleAsyncDelegate)(() =&gt; {
							process.PreloadBudgetTree();
							process._CurrentAction = GLBudgetEntryActionType.PreloadBudgetTree; // it's need here for Persist()
							process.Persist();
							//process.SelectTimeStamp();
							PXLongOperation.SetCustomInfo(process);
						}))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APAccess.Vendor_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>vend.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APActiveProjectAttibute.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(newRow, _FieldName, e.NewValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APApproveBills.ApproveBillsFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Days = PXMessages.LocalizeNoPrefix(row.Days)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APInvoiceEntry.APAdjust_CuryAdjdAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryDocBal = CuryDocBal - adj.CuryAdjdAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoice_Hold_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;APInvoice.hold&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cache.SetValueExt&lt;APInvoice.dontApprove&gt;(document, invoiceState.DontApprove)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>document.LCEnabled = invoiceState.LandedCostEnabled</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APInvoiceEntry.APTran_CuryLineAmt_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetDefaultExt&lt;APTran.taxCategoryID&gt;(tran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPayBills.APAdjust_CuryAdjgAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryAdjgAmt = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPayBills.APAdjust_CuryAdjgAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryAdjgDiscAmt = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPayBills.APAdjust_CuryAdjgDiscAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryAdjgAmt = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPayBills.APAdjust_CuryAdjgDiscAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryAdjgDiscAmt = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_Hold_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;APPayment.hold&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;APPayment.printCheck&gt;(doc, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cache.SetValueExt&lt;APPayment.dontApprove&gt;(doc, dontApprove)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.AdjDate = Accessinfo.BusinessDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.AdjFinPeriodID = adjFinPeriod?.FinPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.AdjFinPeriodID = doc.AdjTranPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.AdjTranPeriodID = adjFinPeriod?.FinPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.AdjTranPeriodID = adjFinPeriod?.MasterFinPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPriceWorksheetMaint.APPriceWorksheet_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>tran.ExpirationDate = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPriceWorksheetMaint.APPriceWorksheet_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>tran.OverwriteOverlapping = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APPrintChecks.PrintChecksFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.NextCheckNbr = PaymentRefAttribute.GetNextPaymentRef(
					sender.Graph,
					cashaccountdetail.Current.CashAccountID,
					cashaccountdetail.Current.PaymentMethodID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APQuickCheckEntry.APQuickCheck_Hold_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;APQuickCheck.hold&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APQuickCheckEntry.APQuickCheck_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;APQuickCheck.printCheck&gt;(doc, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APQuickCheckEntry.APQuickCheck_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cache.SetValueExt&lt;APQuickCheck.dontApprove&gt;(doc, dontApprove)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APReleaseChecks.ReleaseChecksFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.Action = actions[0]</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APReleaseChecks.ReleaseChecksFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.Action = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APRetainageRelease.APInvoiceExt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>invoice.Selected = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APSetupMaint.AP1099Box_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.AccountID    = acct.AccountID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.APSetupMaint.AP1099Box_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OldAccountID = acct.AccountID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.BaseVendorRefNbrAttribute.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(copy, _FieldName, e.NewValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.VendorMaint.LocationExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsRemitAddressSameAsMain = (row.VRemitAddressID == row.VDefAddressID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.VendorMaint.LocationExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsRemitContactSameAsMain = (row.VRemitContactID == row.VDefContactID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AP.VendorMaint.NotificationRecipient_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Email = contact.EMail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARAccess.Customer_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cust.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.ARCashSale_Hold_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;ARCashSale.hold&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.ARCashSale_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cache.SetValueExt&lt;ARCashSale.dontApprove&gt;(doc, dontApprove)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.ARCashSale_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCPaymentStateDescr = CCProcTranHelper.FormatCCPaymentState(ccPaymentState)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.ARCashSale_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.ARCashSale_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.Standalone.ARCashSale&gt;)</target>
    <syntaxNode>doc.CCPaymentStateDescr = GetPaymentStateDescr(tranState)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.Standalone.ARCashSale&gt;)</target>
    <syntaxNode>doc.IsCCPayment = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCashSaleEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.Standalone.ARCashSale&gt;)</target>
    <syntaxNode>doc.IsCCPayment = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARCreateWriteOff.ARRegisterEx_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ReasonCode = Filter.Current.ReasonCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARDunningLetterPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PrinterID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARDunningLetterPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PrinterName = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARDunningLetterPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ShowAll = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARExpiredCardsProcess.ARExpiredCardFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;ARExpiredCardFilter.tokenizedPMs&gt;(row, pmString)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARExpiringCardsProcess.ARExpiringCardFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;ARExpiringCardFilter.tokenizedPMs&gt;(row, pmString)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARInvoiceEntry.ARAdjust2_CuryAdjdAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryDocBal = CuryDocBal - adj.CuryAdjdAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARInvoiceEntry.ARInvoice_Hold_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;ARInvoice.hold&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.ARPayment_Hold_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;ARPayment.hold&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.ARPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cache.SetValueExt&lt;ARPayment.dontApprove&gt;(doc, dontApprove)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.ARPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCPaymentStateDescr = CurrPaymentState.Description</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.ARPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.ARPayment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.CurrencyInfo_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>info.IsReadOnly = !curyenabled</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.ARPayment&gt;)</target>
    <syntaxNode>cache.SetValueExt&lt;ARPayment.newCard&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.ARPayment&gt;)</target>
    <syntaxNode>cache.SetValueExt&lt;ARPayment.newCard&gt;(doc,true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.ARPayment&gt;)</target>
    <syntaxNode>doc.CCPaymentStateDescr = GetPaymentStateDescr(extTranState)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.ARPayment&gt;)</target>
    <syntaxNode>doc.CCPaymentStateDescr = currPaymentState.Description</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.ARPayment&gt;)</target>
    <syntaxNode>doc.IsCCPayment = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.AR.ARPayment&gt;)</target>
    <syntaxNode>doc.IsCCPayment = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPriceWorksheetMaint.ARPriceWorksheet_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>tran.ExpirationDate = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPriceWorksheetMaint.ARPriceWorksheet_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>tran.OverwriteOverlapping = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPrintInvoices.PrintInvoicesFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARPrintInvoices.PrintInvoicesFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterName = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARRetainageRelease.ARInvoiceExt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>invoice.Selected = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BranchCD = branch.BranchCD</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BranchCD = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BranchID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PrinterID = new NotificationUtility(this).SearchPrinter(
					ARNotificationSource.Customer,
					(Filter.Current.CuryStatements == true ? ARStatementReportParams.CS_CuryStatementReportID : ARStatementReportParams.CS_StatementReportID), Accessinfo.BranchID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PrinterID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PrinterName = new NotificationUtility(this).SearchPrinter(
					ARNotificationSource.Customer,
					(Filter.Current.CuryStatements == true ? ARStatementReportParams.CS_CuryStatementReportID : ARStatementReportParams.CS_StatementReportID), Accessinfo.BranchID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PrinterName = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerMaint.CustomerPaymentMethodInfo_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsDefault = row.PMInstanceID == cust.DefPMInstanceID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerMaint.CustomerPaymentMethod_Descr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.Descr = pmDef.Descr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerMaint.Customer_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DefBillContactID = row.DefContactID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerMaint.Customer_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsBillContSameAsMain = row.DefBillContactID == row.DefContactID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerMaint.Customer_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsBillSameAsMain = row.DefBillAddressID == row.DefAddressID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerMaint.Customer_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.SmallBalanceLimit = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerMaint.NotificationRecipient_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Email = contact.EMail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerPaymentMethodMaint.CustomerPaymentMethodInputMode_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>inputMode.InputMode = isHFPM ? InputModeType.Token : InputModeType.Details</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerPaymentMethodMaint.CustomerPaymentMethod_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.HasBillingInfo = pmDef.ARHasBillingInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerPaymentMethodMaint.CustomerPaymentMethod_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsBillAddressSameAsMain = (row.BillAddressID == null) || (customer.DefBillAddressID == row.BillAddressID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.CustomerPaymentMethodMaint.CustomerPaymentMethod_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsBillContactSameAsMain = (row.BillContactID == null) || (customer.DefBillContactID == row.BillContactID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.PaymentRefAttribute.PX.Data.IPXFieldDefaultingSubscriber.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, this._UpdateNextNumber.Name, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.AR.PaymentRefAttribute.PX.Data.IPXFieldVerifyingSubscriber.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, this._UpdateNextNumber.Name, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MatchedToExisting = TranMatch.Select(row.TranID).Count != 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MatchedToExpenseReceipt = IsMatchedToExpenseReceipt(match)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MatchedToInvoice = CABankTranStatus.IsMatchedToInvoice(row, match)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MatchedToInvoice = IsMatchedToInvoice(row, match)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Validated = ValidateTranFields(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CABatchEntry.CABatch_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.CuryDetailTotal = curyTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CABatchEntry.CABatch_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DetailTotal = total</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CATranEntry.CASplit_CuryTranAmt_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetDefaultExt&lt;CASplit.taxCategoryID&gt;(split)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CashAccountMaint.CashAccountETDetail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OffsetCashAccountID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CashAccountMaint.CashAccount_AccountID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cashacc.BranchID = this.Accessinfo.BranchID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CashAccountMaint.CashAccount_AccountID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cashacc.CuryID = Company.Current.BaseCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CashAccountMaint.CashAccount_AccountID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cashacc.CuryID = acct.CuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CashAccountMaint.CashAccount_AccountID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cashacc.Descr = acct.Description</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CashAccountMaint.CashAccount_AccountID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValueExt(cashacc, "DescrTranslations", dtranslations)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.CashTransferEntry.CATransfer_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>transfer.RGOLAmt = transfer.TranIn - transfer.TranOut</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CA.EntryTypeMaint.CAEntryType_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.CashAccountID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CM.CurrencyInfoAttribute.curyIdFieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>view.Cache.SetValueExt&lt;CurrencyInfo.curyID&gt;(info, e.ExternalCall ? new PXCache.ExternalCallMarker(e.NewValue) : e.NewValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CM.CurrencyMaint.Currency_DecimalPlaces_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>cache.SetValue(e.Row, typeof(Currency.decimalPlaces).Name, (short)2)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CM.PXCurrencyAttribute.PXCurrencyHelper.CalcBaseValues(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _ResultOrdinal, value)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CM.TranslationDefinitionMaint.TranslDef_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DestCuryID = destinationLedger?.BaseCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CM.TranslationDefinitionMaint.TranslDef_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.SourceCuryID = sourceLedger?.BaseCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.AddressSelectBase.RowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _addressIdFieldOrdinal, null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.AddressSelectBase.RowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _asMainFieldOrdinal, asMain)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.ContactExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsAddressSameAsMain = IsAddressSameAsMain</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.ContactExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsDefault = isDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.LocationExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DefContactID = account.DefContactID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.LocationExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsAddressSameAsMain = isSameAsMain</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.LocationExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsContactSameAsMain = isContactSameAsMain</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.LocationExtAddress_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsDefault = isDefault</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountMaint.Location_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsDefault = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountMaint.Location_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsDefault = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.BusinessAccountMaint.NotificationRecipient_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Email = contact.EMail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.Activity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OvertimeBillable = overtimebillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.Activity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OvertimeSpent = overtimespent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.Activity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimeBillable = timebillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.Activity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimeSpent = timespent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRCaseMaint.CRCase_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>caseRow.ManualBillableTimes = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CREmailActivityMaint.CRSMEmail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.EntityDescription = CacheUtility.GetErrorDescription(row.Exception) + GetEntityDescription(row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRLeadFullNameAttribute.Handler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _FieldOrdinal, newValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRMarketingListMaint.CRMarketingList_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.GIDesignID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRTaskMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OvertimeBillable = overtimebillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRTaskMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OvertimeSpent = overtimespent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRTaskMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimeBillable = timebillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CRTaskMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimeSpent = timespent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.CampaignMaint.CRCampaign_Status_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>campaign.Status = state.AllowedValues.FirstOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.ContactMaint.Users_Username_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>((Users)e.Row).PKID = restoredGuid</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.ContactSelectBase.RowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _asMainFieldOrdinal, asMain)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.LocationMaintBase&lt;Base, Primary, Where&gt;.Location_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DefAddressID = acct.DefAddressID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.LocationMaintBase&lt;Base, Primary, Where&gt;.Location_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DefContactID = acct.DefContactID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.LocationMaintBase&lt;Base, Primary, Where&gt;.Location_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsAddressSameAsMain = (row.DefAddressID == acct.DefAddressID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.LocationMaintBase&lt;Base, Primary, Where&gt;.Location_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsContactSameAsMain = (row.DefContactID == acct.DefContactID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ContactBaccountID = contact.With(_ =&gt; _.BAccountID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ContactID = contact.With(_ =&gt; _.ContactID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DisplayName = displayName</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.EntityID = helper.GetEntityDescription(message.RefNoteID, message.GetType())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.EntityName = (name ?? Messages.Entity) + ':'</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ErrorMessage = PXMessages.LocalizeNoPrefix(Messages.DifferentBAccountID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ErrorMessage = PXMessages.LocalizeNoPrefix(Messages.SomeCaseRequireCustomer)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ErrorMessage = String.Empty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.FullName = contact.With(_ =&gt; _.FullName)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.NewContactFirstName = firstName</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.NewContactLastName = lastLame</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Salutation = contact.With(_ =&gt; _.Salutation)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.CuryWgtAmount = curyWgtAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ManualTotalEntry = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OpportunityMaint.CROpportunity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PrimaryQuoteType = primaryQt?.QuoteType ?? CRQuoteTypeAttribute.Distribution</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OpportunityMaint.CreateAccountsFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.LinkContactToAccount = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.OpportunityMaint.SalesTax.Document_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TaxCalc = TaxCalc.Calc</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.PMTimeActivityList&lt;TMasterActivity&gt;.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ARDocType = invoice.DocType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.PMTimeActivityList&lt;TMasterActivity&gt;.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ARDocType = pmTran.ARTranType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.PMTimeActivityList&lt;TMasterActivity&gt;.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ARRefNbr = invoice.RefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.PMTimeActivityList&lt;TMasterActivity&gt;.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ARRefNbr = pmTran.ARRefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CR.QuoteMaint.SalesTax.Document_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TaxCalc = TaxCalc.Calc</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.AttributeValueAttribute.RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _FieldName, newValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.DaylightShiftMaint.DaylightShift_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimeZoneDescription = PXMessages.LocalizeFormatNoPrefix(timeZoneInfo.DisplayName)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.DimensionMaint.Dimension_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>dim.MaxLength = PXDimensionAttribute.GetMaxLength(dim.DimensionID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.DimensionMaint.Segment_AutoNumber_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>currow.Validate = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.DimensionMaint.Segment_SegmentID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>currow.ConsolOrder = maxsegid</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.DimensionMaint.Segment_Validate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>currow.AutoNumber = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.Email.EmailsSyncMaint.EMailSyncAccount_ContactsExportDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;EMailSyncAccount.isContactsReset&gt;(e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.Email.EmailsSyncMaint.EMailSyncAccount_EmailsExportDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;EMailSyncAccount.isEmailsReset&gt;(e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.Email.EmailsSyncMaint.EMailSyncAccount_EventsExportDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;EMailSyncAccount.isEventsReset&gt;(e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.Email.EmailsSyncMaint.EMailSyncAccount_TasksExportDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;EMailSyncAccount.isTasksReset&gt;(e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.NumberingMaint.NumberingSequence_EndNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.EndNbr = new string(result)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.NumberingMaint.NumberingSequence_LastNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.LastNbr = new string(startNumber)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.NumberingMaint.NumberingSequence_StartDate_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.StartDate = new DateTime(1900, 1, 1)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.NumberingMaint.NumberingSequence_WarnNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.WarnNbr = row.EndNbr.Substring(0, row.EndNbr.Length - 3) + str</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.OrganizationMaint.Company_BaseCuryID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>bc.IsActive = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.OrganizationMaint.Company_BaseCuryID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>bc.IsFinancial = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.OrganizationMaint.Company_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BaseCuryID = b.CuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CS.TermsMaint.TermsInstallments_InstPercent_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>record.InstPercent = percent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CT.ContractMaint.Contract_CuryID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.CuryID = Company.Current.BaseCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CT.ContractMaint.Contract_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TotalsCalculated = 1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.CT.TemplateMaint.ContractTemplate_CuryID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.CuryID = Company.Current.BaseCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DRDraftScheduleProc.DRScheduleDetail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DocumentType = DRScheduleDocumentType.BuildDocumentType(row.Module, row.DocType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DRSchedulePrimary.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BAccountType = CR.BAccountType.CustomerType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DRSchedulePrimary.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BAccountType = CR.BAccountType.VendorType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DRSchedulePrimary.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DocumentType = DRScheduleDocumentType.BuildDocumentType(row.Module, row.DocType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DRSchedulePrimary.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OrigLineAmt = tran.TranAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRScheduleDetail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>scheduleDetail.DefTotal = SumOpenAndProjectedTransactions(scheduleDetail)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRScheduleDetail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>scheduleDetail.DocumentType = DRScheduleDocumentType.BuildDocumentType(scheduleDetail.Module, scheduleDetail.DocType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRScheduleDetail_TotalAmt_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>scheduleDetail.CuryTotalAmt = curyTotalAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>deferralSchedule.BAccountType = BAccountType.CustomerType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>deferralSchedule.BAccountType = BAccountType.VendorType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>deferralSchedule.DocumentType = DRScheduleDocumentType.BuildDocumentType(
				deferralSchedule.Module, 
				deferralSchedule.DocType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>deferralSchedule.OrigLineAmt =
						APReleaseProcess.GetExpensePostingAmount(this, documentLine).Base ?? 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>deferralSchedule.OrigLineAmt = 
						ARReleaseProcess.GetSalesPostingAmount(this, documentLine).Base ?? 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.DraftScheduleMaint.DRSchedule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>deferralSchedule.OrigLineAmt = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.ScheduleMaint.DRScheduleDetail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DefTotal = SumOpenAndProjectedTransactions()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.DR.ScheduleMaint.DRScheduleDetail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DocumentType = DRScheduleDocumentType.BuildDocumentType(row.Module, row.DocType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPApprovalAutomation&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.Approved_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;Approved&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPApprovalAutomation&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.Hold_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>cache.SetValue&lt;Hold&gt;(doc, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPEventMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OvertimeBillable = overtimebillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPEventMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OvertimeSpent = overtimespent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPEventMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimeBillable = timebillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPEventMaint.PMTimeActivity_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimeSpent = timespent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPSetupMaint.EPGenerateWeeksDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.CutOffDayTwo = EPGenerateWeeksDialog.CutOffDayListAttribute.None</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPSetupMaint.EPGenerateWeeksDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DayOne = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EPSetupMaint.EPGenerateWeeksDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.DayTwo = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableOvertime += rowActivity.TimeBillable.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableOvertime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTime += rowActivity.TimeBillable.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTotal = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTotal = row.BillableTime + row.BillableOvertime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesApprove.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = row.RegularTime + row.RegularOvertime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableOvertime += rowActivity.TimeBillable.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableOvertime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTime += rowActivity.TimeBillable.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTotal = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTotal = row.BillableTime + row.BillableOvertime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = row.RegularTime + row.RegularOvertime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableOvertime += rowActivity.TimeBillable.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableOvertime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableOvertime = totals.OvertimeBillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTime += rowActivity.TimeBillable.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTime = totals.TimeBillable - totals.OvertimeBillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTotal = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTotal = row.BillableTime + row.BillableOvertime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableTotal = totals.TimeBillable</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime = totals.OvertimeSpent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime = totals.TimeSpent - totals.OvertimeSpent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = row.RegularTime + row.RegularOvertime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EPActivityFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = totals.TimeSpent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeMaint.EPRule_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.StepName = steprow.Name</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeMaint.Users_Username_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>((Users)e.Row).PKID = restoredGuid</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeSummaryApprove.EPSummaryFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeSummaryApprove.EPSummaryFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularOvertime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeSummaryApprove.EPSummaryFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime += rowActivity.TimeSpent.GetValueOrDefault(0)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeSummaryApprove.EPSummaryFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTime = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeSummaryApprove.EPSummaryFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.EmployeeSummaryApprove.EPSummaryFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.RegularTotal = row.RegularTime + row.RegularOvertime</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.ExpenseClaimDetailEntryExt&lt;TGraph&gt;._(PX.Data.Events.FieldDefaulting&lt;PX.Objects.EP.EPExpenseClaimDetails.corpCardID&gt;)</target>
    <syntaxNode>e.Cache.SetValueExt&lt;EPExpenseClaimDetails.corpCardID&gt;(row, corpCardId)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCardSummary_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ApprovalStatus = ApprovalStatusListAttribute.Approved</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCardSummary_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ApprovalStatus = ApprovalStatusListAttribute.NotRequired</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCardSummary_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ApprovalStatus = ApprovalStatusListAttribute.PartiallyApprove</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCardSummary_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ApprovalStatus = ApprovalStatusListAttribute.PendingApproval</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCardSummary_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ApprovalStatus = ApprovalStatusListAttribute.Rejected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCardSummary_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.EmployeeRate = info.Rate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCard_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimecardType = "D"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.EP.TimeCardMaint.EPTimeCard_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TimecardType = string.IsNullOrEmpty(row.OrigTimeCardCD) ? "N" : "C"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.Extensions.MultiCurrency.MultiCurrencyGraph&lt;TGraph, TPrimary&gt;._(PX.Data.Events.RowSelected&lt;PX.Objects.CM.Extensions.CurrencyInfo&gt;)</target>
    <syntaxNode>e.Row.DisplayCuryID = e.Row.CuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.FA.AssetClassMaint.FixedAsset_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>((FixedAsset)e.Row).HoldEntry = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.FA.AssetMaint.FABookBalance_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>bookbal.AllowChangeDeprFromPeriod = !depreciated</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.FA.AssetMaint.FixedAsset_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>asset.Status = det.Status</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.AccountByPeriodEnq.AccountByPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IncludeUnreleased = row.IncludeUnposted == true &amp;&amp; row.IncludeUnreleased == true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.AccountByPeriodEnq.AccountByPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ShowCuryDetail = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.AccountHistoryBySubEnq.GLHistoryEnqFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ShowCuryDetail = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.AccountHistoryByYearEnq.AccountByYearFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ShowCuryDetail = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLAccess.Account_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>acct.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLAccess.Branch_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>branch.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLAccess.GLBudgetTree_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>node.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLAccess.SMPrinter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>printer.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLAccess.SegmentValue_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>seg.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLAccess.Sub_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sub.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLBudgetEntry.BudgetDistributeFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ApplyToSubGroups = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLBudgetEntry.BudgetFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Precision = currency != null ? currency.DecimalPlaces : 2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLBudgetEntry.BudgetFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ShowTree = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLBudgetTreeMaint.GLBudgetTree_GroupID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.GroupID = Guid.NewGuid()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.GLBudgetTreeMaint.GLBudgetTree_GroupID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.ParentGroupID = this.CurrentSelected.Group == null ? Guid.Empty : this.CurrentSelected.Group</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.JournalEntry.Batch_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>batch.ReverseCount = GetReversingBatchesCount(batch)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.JournalEntryState.StateControllerBase.GLTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs, PX.Objects.GL.Batch)</target>
    <syntaxNode>tran.IncludedInReclassHistory = JournalEntry.CanShowReclassHistory(tran, batch.BatchType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_CreditAccountID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.CreditCashAccountID = (this._cashAccountCredit != null) ? this._cashAccountCredit.CashAccountID : null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_CreditAccountID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.CreditCashAccountID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_DebitAccountID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.DebitCashAccountID = (this._cashAccountDebit != null) ? this._cashAccountDebit.CashAccountID : null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_DebitAccountID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.DebitCashAccountID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_ParentLineNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.CuryBalanceAmt = !parentIsDebit.HasValue ? Decimal.Zero : (parentIsDebit == false ? openBalance : -openBalance)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription += PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodEndDateMoveWarning, lastPeriodCalculatedEndDate.AddDays(-1).ToShortDateString(), setupYear.PeriodsStartDate.Value.DayOfWeek.ToString())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription += PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodWeekStartWarning, setupYear.PeriodsStartDate.Value.DayOfWeek.ToString(), lastPeriod.EndDate.Value.DayOfWeek.ToString())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = Messages.FiscalPeriodMethodModifyNextYearNoChange</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodExtendLastPeriod, year.EndDate.Value.AddDays(-1).ToShortDateString())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYear, lastPeriod.EndDate.Value.ToShortDateString())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYear, lastPeriodCalculatedEndDate.ToShortDateString())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYearSetupBack, Math.Abs((lastPeriod.EndDate - year.EndDate).Value.Days) + daysToAdd)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYearSetupBack, Math.Abs((lastPeriodCalculatedEndDate - year.EndDate).Value.Days))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYearSetupDate, setupYear.BegFinYear.Value.AddDays(-Math.Abs((lastPeriod.EndDate - year.EndDate).Value.Days) - daysToAdd).ToString("MMMM dd"))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYearSetupDate, setupYear.BegFinYear.Value.AddDays(Math.Abs((lastPeriod.EndDate - year.EndDate).Value.Days) + daysToAdd).ToString("MMMM dd"))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYearSetupForward, (lastPeriod.EndDate - year.EndDate).Value.Days + daysToAdd)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.FinPeriodSaveDialog_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MethodDescription = PXMessages.LocalizeFormatNoPrefix(Messages.FiscalPeriodMethodModifyNextYearSetupForward, (lastPeriodCalculatedEndDate - year.EndDate).Value.Days)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.MasterFinPeriodMaint.MasterFinYear_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>year.FinPeriods = (short?)PXSelect&lt;
					MasterFinPeriod,
					Where&lt;MasterFinPeriod.finYear, Equal&lt;Required&lt;MasterFinPeriod.finYear&gt;&gt;&gt;&gt;
					.Select(this, year.Year)
					.Count</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.Reclassification.UI.ReclassifyTransactionsProcess.GLTranForReclassification_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>tran.VerifyingForFromValuesInvoked = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.Reclassification.UI.ReclassifyTransactionsProcess.ReplaceOptions_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>replaceOptionRow.Showed = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.Reclassification.UI.ReclassifyTransactionsProcess.ReplaceOptions_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>replaceOptionRow.Warning = message</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.YearSetupGraphBase&lt;TGraph, TYearSetup, TPeriodSetup, TPeriodSetupSelect&gt;.TYearSetupOnRowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>fes.AdjustToPeriodStart = fes.PeriodsStartDate.HasValue &amp;&amp; fes.BegFinYear.HasValue &amp;&amp; fes.BegFinYear != fes.PeriodsStartDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.YearSetupGraphBase&lt;TGraph, TYearSetup, TPeriodSetup, TPeriodSetupSelect&gt;.TYearSetupOnRowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>fes.BelongsToNextYear = (firstYear == (fes.BegFinYear.Value.Year + 1))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.GL.YearSetupGraphBase&lt;TGraph, TYearSetup, TPeriodSetup, TPeriodSetupSelect&gt;.TYearSetupOnRowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>fes.BelongsToNextYear = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.CrossItemAttribute.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>e.NewValue = foundAlternate?.InventoryCD ?? e.NewValue</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INAccess.INSite_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>site.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INAccessItem.INItemClass_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>cLass.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INAccessItem.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>item.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INCategoryMaint.ClassFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ItemClassID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INItemClassMaint.RelationGroup_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>group.Included = UserAccess.IsIncluded(itemclass.Current.GroupMask, group)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INLotSerClassMaint.INLotSerSegment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.SegmentValue = lotSerNumVal.Current?.LotSerNumVal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INLotSerClassMaint.INLotSerSegment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.SegmentValue = this.lotserclass.Current.LotSerNumVal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INReceiptEntry.INRegister_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>((INRegister)e.Row).TransferNbr = tran.OrigRefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INReplenishmentCreate.INReplenishmentItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>rec.QtyProcess = RecalcQty(rec)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INUnitAttribute.RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _AccountRequireUnitsField, account.RequireUnits)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INUnitAttribute.RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _AccountRequireUnitsField, null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INUnitSelect2&lt;Table, itemClassID, salesUnit, purchaseUnit, baseUnit, lotSerClass&gt;.INUnit_ToUnit_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>((INUnit)e.Row).SampleToUnit = TopGetValue&lt;baseUnit, string&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INUnitSelect&lt;Table, inventoryID, itemClassID, salesUnit, purchaseUnit, baseUnit, lotSerClass&gt;.INUnit_ToUnit_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>((INUnit)e.Row).SampleToUnit = TopGetValue&lt;baseUnit, string&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INUpdateMCAssignment.UpdateMCAssignmentSettings_Year_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>settings.PeriodNbr = 1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.INUpdateMCAssignment.UpdateMCAssignmentSettings_Year_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>settings.Year = date.Year.ToString()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryAllocDetEnq.InventoryAllocDetEnqFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Label = PXMessages.LocalizeNoPrefix(Messages.ExceptLocationNotAvailable)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryAllocDetEnq.InventoryAllocDetEnqFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Label2 = PXMessages.LocalizeNoPrefix(Messages.ExceptExpired2S)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryAllocDetEnq.InventoryAllocDetEnqFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Label2 = PXMessages.LocalizeNoPrefix(Messages.ExceptExpiredS)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaint.INComponent_Percentage_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.Percentage = GetRemainingPercentage()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaint.INItemBoxEx_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MaxQty = CalculateMaxQtyInBox(Item.Current, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>((InventoryItem)e.Row).LotSerNumVal = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>((InventoryItem)e.Row).TotalPercentage = 100</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>((InventoryItem)e.Row).TotalPercentage = SumComponentsPercentage()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaint.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>((InventoryItem)e.Row).UseParentSubID = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaint.RelationGroup_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>group.Included = PX.SM.UserAccess.IsIncluded(Item.Current.GroupMask, group)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryItemMaintBase.INComponent_Percentage_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.Percentage = GetRemainingPercentage()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryLotSerInq.INTranSplit_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TranUnitCost = row.TotalQty == null || row.TotalQty == 0m ? 0m : (row.TotalCost + row.AdditionalCost) / row.TotalQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.InventoryLotSerInq.INTranSplit_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TranUnitCost = row.TotalQty == null || row.TotalQty == 0m ? 0m : (row.TotalCost) / row.TotalQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.KitAssemblyEntry.INKitRegister_InvtMult_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.InvtMult = -1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.KitAssemblyEntry.INKitRegister_InvtMult_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.InvtMult = 1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.NonStockItemMaint.INComponent_Percentage_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.Percentage = GetRemainingPercentage()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.NonStockItemMaint.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>item.TotalPercentage = 100</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.NonStockItemMaint.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>item.TotalPercentage = SumComponentsPercentage()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.NonStockItemMaint.InventoryItem_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>item.UseParentSubID = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.PIGenerator.PIGeneratorSettings_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.MaxLastCountDate = this.Accessinfo.BusinessDate.Value.AddDays(-row.LastCountPeriod.GetValueOrDefault())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.PXDBQuantityAttribute.CalcBaseQty(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, this._ResultField.Name, resultval)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.PXDBQuantityAttribute.CalcBaseQty(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValueExt(e.Row, this._ResultField.Name, resultval)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.IN.PXQuantityAttribute.CalcBaseQty(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _ResultOrdinal, resultval)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ActiveProjectOrContractForGLAttribute.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(newRow, _FieldName, e.NewValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ChangeOrderEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMChangeOrder&gt;)</target>
    <syntaxNode>e.Row.IsCostVisible = ChangeOrderClass.Current?.IsCostBudgetEnabled == true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ChangeOrderEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMChangeOrder&gt;)</target>
    <syntaxNode>e.Row.IsDetailsVisible = ChangeOrderClass.Current?.IsPurchaseOrderEnabled == true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ChangeOrderEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMChangeOrder&gt;)</target>
    <syntaxNode>e.Row.IsRevenueVisible = ChangeOrderClass.Current?.IsRevenueBudgetEnabled == true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Amount = summary.Amount.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.InvoicedAmount = summary.InvoicedAmount.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.InvoicedQty = summary.InvoicedQty.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OpenAmount = summary.OpenAmount.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OpenQty = summary.OpenQty.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.Qty = summary.Qty.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ReceivedQty = summary.ReceivedQty.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ExternalCommitmentEntry._(PX.Data.Events.FieldDefaulting&lt;PX.Objects.PM.PMCommitment, PX.Objects.PM.PMCommitment.costCodeID&gt;)</target>
    <syntaxNode>e.Row.CostCodeID = CostCodeAttribute.GetDefaultCostCode()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.PMAccess.PMProject_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>project.Included = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.PMQuoteMaint.SalesTax.Document_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.TaxCalc = TaxCalc.Calc</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProformaEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMProformaProgressLine&gt;)</target>
    <syntaxNode>e.Row.CuryPreviouslyInvoiced = !UseBaseCurrency ? GetPreviouslyInvoicedAmount(e.Row) : ConvertToDocumentCurrency(GetPreviouslyInvoicedAmount(e.Row))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProformaEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMProformaProgressLine&gt;)</target>
    <syntaxNode>e.Row.PreviouslyInvoiced = GetPreviouslyInvoicedAmount(e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.FieldDefaulting&lt;PX.Objects.PM.PMProject, PX.Objects.CT.Contract.curyID&gt;)</target>
    <syntaxNode>e.Row.CuryID = Company.Current.BaseCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.CS.NotificationRecipient&gt;)</target>
    <syntaxNode>e.Row.Email = billingContact.Email</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.CS.NotificationRecipient&gt;)</target>
    <syntaxNode>e.Row.Email = contact.EMail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMProject&gt;)</target>
    <syntaxNode>e.Row.CuryAsset = tt.CuryAsset</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMProject&gt;)</target>
    <syntaxNode>e.Row.CuryExpense = tt.CuryExpense</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMProject&gt;)</target>
    <syntaxNode>e.Row.CuryIncome = tt.CuryIncome</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMProject&gt;)</target>
    <syntaxNode>e.Row.CuryLiability = tt.CuryLiability</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.AmountToInvoiceTotal += budget.AmountToInvoice.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.AmountToInvoiceTotal -= budget.AmountToInvoice.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.AmountToInvoiceTotal -= originalValue.Value</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.AmountToInvoiceTotal = total.AmountToInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.CuryAmountToInvoiceTotal += budget.CuryAmountToInvoice.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.CuryAmountToInvoiceTotal -= budget.CuryAmountToInvoice.GetValueOrDefault()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.CuryAmountToInvoiceTotal -= originalValue.Value</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.CuryAmountToInvoiceTotal = total</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.ProjectEntry.RevenueBudgetFilter&gt;)</target>
    <syntaxNode>e.Row.CuryAmountToInvoiceTotal = total.CuryAmountToInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.RegisterEntry.PMRegister_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.AmtTotal = amount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.RegisterEntry.PMRegister_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BillableQtyTotal = billableQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.RegisterEntry.PMRegister_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.QtyTotal = qty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.RegisterEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMRegister&gt;)</target>
    <syntaxNode>e.Row.AmtTotal = amount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.RegisterEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMRegister&gt;)</target>
    <syntaxNode>e.Row.BillableQtyTotal = billableQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.RegisterEntry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMRegister&gt;)</target>
    <syntaxNode>e.Row.QtyTotal = qty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.TemplateMaint.PMProject_CuryID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.CuryID = Company.Current.BaseCuryID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.TemplateMaint._(PX.Data.Events.RowSelected&lt;PX.Objects.CS.NotificationRecipient&gt;)</target>
    <syntaxNode>e.Row.Email = contact.EMail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.TransactionInquiry.PMTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.AmountNormal = row.Amount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.TransactionInquiry.PMTran_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.AmountNormal = row.Amount * -1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.TransactionInquiry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMTran&gt;)</target>
    <syntaxNode>e.Row.TranCuryAmountNormal = e.Row.TranCuryAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PM.TransactionInquiry._(PX.Data.Events.RowSelected&lt;PX.Objects.PM.PMTran&gt;)</target>
    <syntaxNode>e.Row.TranCuryAmountNormal = e.Row.TranCuryAmount * -1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POOrderEntry.POLine_TaxCategoryID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>((POLine)e.Row).TaxCategoryID = string.Empty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POOrderEntry.POOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.HasUsedLine = (usedLines != null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POOrderEntry.POOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.RequestApproval = POSetup.Current.OrderRequestApproval</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POOrderEntry.POOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.TaxZoneID = string.Empty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POPrintOrder.POPrintOrderFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POPrintOrder.POPrintOrderFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterName = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POOrderFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OrderType = doc.POType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POOrderFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ShipToBAccountID = doc.ShipToBAccountID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POOrderFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.ShipToLocationID = doc.ShipToLocationID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POReceiptLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.AllowComplete = row.AllowOpen = source?.AllowComplete ?? false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POReceiptLine_UOM_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>row.LastBaseReceivedQty = row.BaseReceiptQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POReceipt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.InventoryDocType = _inventoryDoc.DocType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POReceipt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.InventoryDocType = doc.InvtDocType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POReceipt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.InventoryRefNbr = _inventoryDoc.RefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.PO.POReceiptEntry.POReceipt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.InventoryRefNbr = doc.InvtRefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQBiddingEntry.RQBiddingVendor_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.EntryDate = sender.Graph.Accessinfo.BusinessDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQBiddingProcess.RQBidding_OrderQty_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>row.Selected = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQBiddingProcess.RQBidding_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OrderQty = 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequestLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IssueStatus =
						received ? RQRequestIssueType.Closed :
						ordered ? RQRequestIssueType.Ordered :
											 RQRequestIssueType.Requseted</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequestLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IssueStatus = RQRequestIssueType.Canceled</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequestLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IssueStatus = RQRequestIssueType.Closed</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequestLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IssueStatus = RQRequestIssueType.Open</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequestLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IssueStatus = RQRequestIssueType.PartiallyIssued</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequestLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IssueStatus = RQRequestIssueType.Received</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequest_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.BudgetValidation	   = reqClassCur.BudgetValidation &gt; 0</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequest_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.CustomerRequest		   = reqClassCur.CustomerRequest  == true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequestEntry.RQRequest_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.VendorHidden		   = reqClassCur.VendorNotRequest == true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.RQ.RQRequisitionEntry.RQRequestLineSelect_SelectQty_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>row.Selected = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.CCAuthTranNbr = paymentState.lastTran.TranNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.CCPaymentStateDescr = GetPaymentStateDescr(state)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.CCPaymentStateDescr = paymentState.Description</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.CaptureTranNumber = extTran.TranNumber</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.CaptureTranNumber = paymentState.lastTran.PCTranNumber</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.CreatePMInstance = isCCInserted</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.PCResponseReasonText = ((PaymentTransactionDetail)lastTranRecord).PCResponseReasonText</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.PCResponseReasonText = ((PaymentTransactionDetail)paymentState.lastTran).PCResponseReasonText</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.PCResponseReasonText = string.Empty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.PreAuthTranNumber = extTran.TranNumber</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PaymentTransaction.RowSelected(PX.Data.Events.RowSelected&lt;PX.Objects.SO.SOOrder&gt;)</target>
    <syntaxNode>doc.PreAuthTranNumber = paymentState.lastTran.PCTranNumber</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PickPackShip.SOPackageDetailPick_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.IsCurrent = (this.Document.Current.CurrentPackageLineNbr != null &amp;&amp; row.LineNbr == this.Document.Current.CurrentPackageLineNbr)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.PickPackShip.SOPackageDetailPick_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.WeightUOM = CommonSetupUOM.Current.WeightUOM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.ARAdjust2_CuryAdjdAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryDocBal = CuryDocBal - adj.CuryAdjdAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.ARInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.ARInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.PaymentTransaction.SOInvoiceRowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCAuthTranNbr = paymentState.lastTran?.TranNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.PaymentTransaction.SOInvoiceRowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCPaymentStateDescr = GetPaymentStateDescr(state)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.PaymentTransaction.SOInvoiceRowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCPaymentStateDescr = paymentState.Description</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.PaymentTransaction.SOInvoiceRowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.PaymentTransaction.SOInvoiceRowSelectedHandler(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.SOInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCAuthTranNbr = lastCCran != null ? lastCCran.TranNbr : null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.SOInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCPaymentStateDescr = CCProcTranHelper.FormatCCPaymentState(ccPaymentState)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.SOInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.SOInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.IsCCPayment = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceEntry.SOInvoice_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.PaymentProjectID = PM.ProjectDefaultAttribute.NonProject()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceShipment.SOShipmentFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOInvoiceShipment.SOShipmentFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterName = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.CustomerPaymentMethodC_Descr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.Descr = pmDef.Descr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.CustomerPaymentMethodInputMode_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>inputMode.InputMode = isHFPM ? InputModeType.Token : InputModeType.Details</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOAdjust_CuryAdjdAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.AdjdCuryInfoID = Document.Current.CuryInfoID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOAdjust_CuryAdjdAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.AdjdOrigCuryInfoID = Document.Current.CuryInfoID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOAdjust_CuryAdjdAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.AdjgCuryInfoID = payment.CuryInfoID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOAdjust_CuryAdjdAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>adj.CuryDocBal = CuryDocBal - adj.CuryAdjdAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_CuryExtPrice_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>row.ManualPrice = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_CuryLineAmt_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>row.ManualPrice = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_CuryUnitPrice_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.IsPromotionalPrice = priceItem?.IsPromotionalPrice ?? false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_CuryUnitPrice_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.PriceType = priceItem?.PriceType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_CuryUnitPrice_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>row.ManualPrice = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.POCreate = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.POSource = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCAuthTranNbr = lastTran.TranNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCAuthTranNbr = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CCPaymentStateDescr = CCProcTranHelper.FormatCCPaymentState(ccPaymentState)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CaptureTranNumber = lastTran.PCTranNumber</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.CreatePMInstance = isCCInserted</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.PCResponseReasonText = lastTran != null ? lastTran.PCResponseReasonText : String.Empty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.PCResponseReasonText = string.Empty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>doc.PreAuthTranNumber = lastTran.PCTranNumber</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOPackageInfoEx_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.WeightUOM = commonsetup.Current.WeightUOM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderEntry.SOSiteStatusFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OnlyAvailable = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderProcess.SOProcessFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOOrderProcess.SOProcessFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterName = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOReleaseInvoice.SOInvoiceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOReleaseInvoice.SOInvoiceFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.PrinterName = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOShipmentEntry.SOPackageDetailEx_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.WeightUOM = commonsetup.Current.WeightUOM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOShipmentEntry.SOPackageDetail_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.WeightUOM = commonsetup.Current.WeightUOM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOShipmentEntry.SOShipment_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.PackageCount = Packages.Select().Count</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.SO.SOSiteStatusLookup&lt;Status, StatusFilter&gt;.OnFilterSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.HistoryDate =  sender.Graph.Accessinfo.BusinessDate.GetValueOrDefault().AddMonths(-3)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ProcessSVATBase.SVATConversionHistExt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>hist.TaxInvoiceDate = filter.ReversalMethod == SVATTaxReversalMethods.OnDocuments ? filter.Date : hist.AdjdDocDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ProcessSVATBase.SVATConversionHistExt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>hist.TaxInvoiceNbr = hist.AdjdRefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ProcessSVATBase.SVATConversionHistExt_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>hist.TaxInvoiceNbr = hist.AdjgRefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ReportTax.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.EndDate = (((DateTime)taxper.EndDate).AddDays(-1))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ReportTax.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.EndDate = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ReportTax.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.StartDate = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ReportTax.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.StartDate = taxper.StartDateUI</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ReportTaxReview.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.EndDate = taxPeriod?.EndDate != null
				? (DateTime?)(((DateTime)taxPeriod.EndDate).AddDays(-1))
				: null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ReportTaxReview.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.EndDate = taxPeriod?.EndDate != null
                ? (DateTime?)(((DateTime)taxPeriod.EndDate).AddDays(-1))
				: null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.ReportTaxReview.TaxPeriodFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>filter.StartDate = taxPeriod?.StartDateUI</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.RestrictTaxCalcModeAttribute.RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>sender.SetValue(e.Row, _FieldOrdinal, newValue)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.TaxAdjustmentEntry.TaxTran_TaxBucketID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.SetValue&lt;TaxTran.taxRate&gt;(e.Row, _TaxRev.TaxRate)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.TX.TaxYearMaint.TaxYearFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>taxYearFilter.ShortTaxYear |= TaxYearExSelectView.Current?.PeriodsCount &lt; TaxYearExSelectView.Current?.PlanPeriodsCount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZScenarioEntry.WZScenario_ScenarioID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.ScenarioID = Guid.NewGuid()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTaskFeature_DisplayName_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.DisplayName = FeaturesNames[row.Feature]</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTaskPredecessorRelation_TaskID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.TaskID = TasksTreeItems.Current.TaskID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTaskSuccessorRelation_TaskID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.PredecessorID = TasksTreeItems.Current.TaskID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTask_Name_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.Name = Messages.NewTask</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTask_TaskID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.ParentTaskID = Guid.Empty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTask_TaskID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.ParentTaskID = TasksTreeItems.Current.TaskID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTask_TaskID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.ScenarioID = Scenario.Current.ScenarioID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.Objects.WZ.WZTaskEntry.WZTask_TaskID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>row.TaskID = Guid.NewGuid()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.SM.AccessUsers.Users_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>user.ContactID = PXSelect&lt;Contact, Where&lt;Contact.userID, Equal&lt;Required&lt;Contact.userID&gt;&gt;&gt;&gt;
					.SelectSingleBound(this, null, user.PKID)
					.RowCast&lt;Contact&gt;()
					.FirstOrDefault()?.ContactID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.SM.EmailSendReceiveMaint.EMailAccount_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.InboxCount = inbox</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.SM.EmailSendReceiveMaint.EMailAccount_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>row.OutboxCount = outbox</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1047">
    <target>PX.TM.PXOwnerSelectorAttribute.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>sender.SetValue(copy_row, _FieldName, OwnerWorkGroup(sender.Graph, WorkGroupID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryDocBal = childRetainageBill.CuryOrigDocAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryOrigDocAmt = childRetainageBill.CuryOrigDocAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainagePaidTotal += (dummyInvoice.CuryOrigDocAmt - dummyInvoice.CuryDocBal) * dummyInvoice.SignAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainagePaidTotal = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainageUnpaidTotal += childRetainageBill.DocBal * childRetainageBill.SignAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainageUnpaidTotal = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.DocType = childRetainageBill.DocType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APInvoiceEntryRetainage.APInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.RefNbr = childRetainageBill.RefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AP.APPayBills.APAdjust_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>info_copy.CuryInfoID = null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryDocBal = childRetainageBill.CuryOrigDocAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryOrigDocAmt = childRetainageBill.CuryOrigDocAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainagePaidTotal += (dummyInvoice.CuryOrigDocAmt - dummyInvoice.CuryDocBal) * dummyInvoice.SignAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainagePaidTotal = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainageUnpaidTotal += childRetainageBill.DocBal * childRetainageBill.SignAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.CuryRetainageUnpaidTotal = 0m</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.DocType = childRetainageBill.DocType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.ARInvoiceEntryRetainage.ARInvoice_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>dummyInvoice.RefNbr = childRetainageBill.RefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.CustomerMaint.CustSalesPeople_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>locationspcount[iSP.LocationID] = ++counter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.AR.CustomerMaint.CustSalesPeople_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>locationspcount[iSP.LocationID] = 1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CM.CurrencyInfoAttribute.RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>info.ModuleCode = _ModuleCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CM.CuryRateMaint.CurrencyRate_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>newExistRate.CuryMultDiv	= cr.CuryMultDiv</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CM.CuryRateMaint.CurrencyRate_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>newExistRate.CuryRate		= cr.CuryRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CM.CuryRateMaint.CurrencyRate_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>newExistRate.RateReciprocal	= cr.RateReciprocal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.Address = row.Address</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.CreateActivity = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.DefaultOwnerID = row.OwnerID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.DeletedDatabaseRecord = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.Description = row.EmployeeCD</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.EmailAccountType = EmailAccountTypesAttribute.Exchange</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.ForbidRouting = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.IncomingHostProtocol = IncomingMailProtocolsAttribute._EXCHANGE</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>account.IncomingProcessing = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>prefs.DefaultEMailAccountID = account.EmailAccountID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.CS.Email.EMailSyncServerMaintExt.EMailSyncAccount_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>prefs.UserID = row.OwnerID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.EP.EPAssignmentMaint.EPAssignmentRoute_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>PositionFilter.Current.RouteParentID = Nodes.Current.AssignmentRouteID != RootNodeID ? Nodes.Current.AssignmentRouteID : null</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.EP.EPAssignmentMaint.EPAssignmentRoute_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>PositionFilter.Current.UseCurrentTreeItem = false</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.Extensions.MultiCurrency.MultiCurrencyGraph&lt;TGraph, TPrimary&gt;.CuryRowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs, System.Collections.Generic.List&lt;PX.Objects.Extensions.MultiCurrency.MultiCurrencyGraph&lt;TGraph, TPrimary&gt;.CuryField&gt;, System.Collections.Generic.Dictionary&lt;System.Type, string&gt;)</target>
    <syntaxNode>info.CuryInfoID = id</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.FA.AssetGLTransactions.FATran_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>ext.Selected = true</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.FA.AssetMaint.FALocationHistory_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>AssetDetails.Current.LocationRevID = ++newLocation.RevisionID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.GL.JournalEntry.GLTran_RowSelecting(PX.Data.PXCache, PX.Data.PXRowSelectingEventArgs)</target>
    <syntaxNode>batch.HasRamainingAmount = ReclassStateController.HasRamainingAmount(batch.HasRamainingAmount, e.Row as GLTran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.Detail_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>detailitem.BaseQty += ((TLSDetail)e.Row).BaseQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.Detail_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>detailitem.Qty = INUnitAttribute.ConvertFromBase(sender, detailitem.InventoryID, detailitem.UOM, (decimal)detailitem.BaseQty, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.SO.LSSOLine.Detail_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>detailitem.BaseQty += ((SOLineSplit)e.Row).BaseQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.SO.LSSOLine.Detail_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>detailitem.BaseUnreceivedQty += ((SOLineSplit)e.Row).BaseQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.SO.LSSOLine.Detail_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>detailitem.Qty = INUnitAttribute.ConvertFromBase(sender, detailitem.InventoryID, detailitem.UOM, (decimal)detailitem.BaseQty, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1048">
    <target>PX.Objects.SO.LSSOLine.Detail_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>detailitem.UnreceivedQty = INUnitAttribute.ConvertFromBase(sender, detailitem.InventoryID, detailitem.UOM, (decimal)detailitem.BaseUnreceivedQty, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.ExtendedProfileProcessingWrapper.V2ExtendedProfileProcessor.GetProvider()</target>
    <syntaxNode>"Could not set CardProcessingReaderProvider"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_CreateDocument_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>""</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.CR.QuoteMaint.ProviderInsert(System.Type, params PX.Data.PXDataFieldAssign[])</target>
    <syntaxNode>"Need update instead of insert"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.CS.Email.EmailsSyncMaint.EMailSyncAccount_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>"Some items were not synchronized. Check synchronization status and log for more details."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.DefaultEndpointImpl.BillDetail_Insert(PX.Data.PXGraph, PX.Api.ContractBased.Models.EntityImpl, PX.Api.ContractBased.Models.EntityImpl)</target>
    <syntaxNode>"Both POOrderType and POOrderNumber must be provided to add a Purchase Order to details."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.DefaultEndpointImpl.StockItemWarehouseDetail_Insert(PX.Data.PXGraph, PX.Api.ContractBased.Models.EntityImpl, PX.Api.ContractBased.Models.EntityImpl)</target>
    <syntaxNode>"Site '{0}' is missing."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.EP.EPApprovalAndAssignmentMapBase&lt;TGraph&gt;.CreateFieldStateForFieldName(object, System.Type, System.Type, string, string, int?, PX.Objects.EP.EPRuleBaseCondition)</target>
    <syntaxNode>"Minutes"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.EndpointAdapters.DefaultEndpointImpl18.AddPOReceiptLineToBill(PX.Data.PXGraph, PX.Objects.AP.APInvoiceEntry, PX.Api.ContractBased.Models.EntityValueField, PX.Api.ContractBased.Models.EntityValueField)</target>
    <syntaxNode>"Both POReceiptNbr and POReceiptLine must be provided to add a Purchase Receipt to details."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.GL.GLTaxAttribute.CalcTaxableFromTotal(PX.Data.PXCache, object, decimal)</target>
    <syntaxNode>"Taxable amount can not be calculated - tax on taxes are defined"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.GL.GLVoucherBatchEntry.GLVoucherBatch_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>"Processed"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.IN.INAccess.INTransitSiteID</target>
    <syntaxNode>"Please fill transite site id in inventory preferences."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.IN.INReceiptEntry.INTransitSiteID</target>
    <syntaxNode>"Please fill transite site id in inventory preferences."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.MasterQtyField</target>
    <syntaxNode>"'{0}' is expected."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.MasterQtyField</target>
    <syntaxNode>"Nested type is expected."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.IN.PriceWorksheetAlternateItemAttribute.PriceWrapper.PriceWrapper(object)</target>
    <syntaxNode>"Attribute supports only {0} and {1} entities"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.PM.ForecastMaint._(PX.Data.Events.FieldVerifying&lt;PX.Objects.PM.ForecastMaint.PMForecastCopyDialogInfo, PX.Objects.PM.ForecastMaint.PMForecastCopyDialogInfo.revisionID&gt;)</target>
    <syntaxNode>"Duplicate ID"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.PM.LaborCostRateMaint._(PX.Data.Events.FieldVerifying&lt;PX.Objects.PM.PMLaborCostRate, PX.Objects.PM.PMLaborCostRate.effectiveDate&gt;)</target>
    <syntaxNode>"Effective date should be greater than {0}"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.PM.LaborCostRateMaint._(PX.Data.Events.FieldVerifying&lt;PX.Objects.PM.PMLaborCostRate, PX.Objects.PM.PMLaborCostRate.effectiveDate&gt;)</target>
    <syntaxNode>"Effective date should be less than {0}"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.PM.PMQuoteMaint.ProviderInsert(System.Type, params PX.Data.PXDataFieldAssign[])</target>
    <syntaxNode>"Need update instead of insert"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.PO.POReceiptEntry.INTransitSiteID</target>
    <syntaxNode>"Please fill transite site id in inventory preferences."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.SO.GraphExtensions.CarrierRates.CarrierRatesExtension&lt;TGraph, TPrimary&gt;.UpdateRates()</target>
    <syntaxNode>"{0}: {1}"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.SO.SOOrderEntry.RefreshRates(PX.Data.PXAdapter)</target>
    <syntaxNode>"{0}: {1}"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.TX.TaxAdjustmentEntry.AddReversedTaxTransactionsToReversedTaxAdjustment(PX.Objects.TX.TaxAdjustment, PX.Objects.TX.TaxAdjustment)</target>
    <syntaxNode>"The creation reversed Tax Adjustment for the Tax Adjustment with the ID {0} failed"</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1050">
    <target>PX.Objects.TX.TaxAdjustmentEntry.CreateReversingTaxAdjustmentWithCuryInfo(PX.Objects.TX.TaxAdjustment)</target>
    <syntaxNode>"The {0} object with the ID {1} is not found. The reverse tax adjustment can't be created."</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.BaseProfileProcessingWrapper.GetBaseProfileProcessingWrapper(object, PX.Objects.AR.CCPaymentProcessing.Repositories.ICardProcessingReadersProvider)</target>
    <syntaxNode>NotLocalizableMessages.ERR_CardProcessingReadersProviderSetting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.CardTransactionProcessingWrapper.GetTransactionProcessingWrapper(object, PX.Objects.AR.CCPaymentProcessing.Repositories.ICardProcessingReadersProvider)</target>
    <syntaxNode>NotLocalizableMessages.ERR_CardProcessingReadersProviderSetting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.ExtendedProfileProcessingWrapper.GetExtendedProfileProcessingWrapper(object, PX.Objects.AR.CCPaymentProcessing.Repositories.ICardProcessingReadersProvider)</target>
    <syntaxNode>NotLocalizableMessages.ERR_CardProcessingReadersProviderSetting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.HostedFromProcessingWrapper.GetHostedFormProcessingWrapper(object, PX.Objects.AR.CCPaymentProcessing.Repositories.ICardProcessingReadersProvider)</target>
    <syntaxNode>NotLocalizableMessages.ERR_CardProcessingReadersProviderSetting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.HostedFromProcessingWrapper.GetPaymentFormProcessingWrapper(object, PX.Objects.AR.CCPaymentProcessing.Repositories.ICardProcessingReadersProvider, PX.Objects.AR.CCPaymentProcessing.Common.CCProcessingContext)</target>
    <syntaxNode>NotLocalizableMessages.ERR_CardProcessingReadersProviderSetting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.V1ProcessorBase.GetProvider()</target>
    <syntaxNode>NotLocalizableMessages.ERR_CardProcessingReadersProviderGetting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.AR.CCPaymentProcessing.Wrappers.V2ProcessorBase.GetProvider()</target>
    <syntaxNode>NotLocalizableMessages.ERR_CardProcessingReadersProviderGetting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.DR.DRProcess.Add(PX.Objects.DR.DRScheduleDetail, PX.Objects.DR.DRScheduleTran, string, decimal)</target>
    <syntaxNode>DeferredAccountType.Expense</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1051">
    <target>PX.Objects.Extensions.PaymentTransaction.PaymentTransactionGraph&lt;TGraph, TPrimary&gt;.GetPaymentDoc(TPrimary)</target>
    <syntaxNode>NotLocalizableMessages.ERR_CCProcessingNotImplementedICCPayment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.AP.APPriceWorksheetMaint.APPriceWorksheet_EffectiveDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>AR.Messages.ExpirationLessThanEffective</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.AP.APPriceWorksheetMaint.APPriceWorksheet_ExpirationDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>AR.Messages.ExpirationLessThanEffective</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.AP.APReleaseProcess.ReleaseInvoice(PX.Objects.GL.JournalEntry, ref PX.Objects.AP.APRegister, PX.Data.PXResult&lt;PX.Objects.AP.APInvoice, PX.Objects.CM.CurrencyInfo, PX.Objects.CS.Terms, PX.Objects.AP.Vendor&gt;, bool, out System.Collections.Generic.List&lt;PX.Objects.IN.INRegister&gt;)</target>
    <syntaxNode>Messages.PreliminaryAPExpenceBooking</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.AP.APReleaseProcess.ReleaseInvoice(PX.Objects.GL.JournalEntry, ref PX.Objects.AP.APRegister, PX.Data.PXResult&lt;PX.Objects.AP.APInvoice, PX.Objects.CM.CurrencyInfo, PX.Objects.CS.Terms, PX.Objects.AP.Vendor&gt;, bool, out System.Collections.Generic.List&lt;PX.Objects.IN.INRegister&gt;)</target>
    <syntaxNode>Messages.PreliminaryAPExpenceBookingAdjustment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.AR.ARPriceWorksheetMaint.ARPriceWorksheet_EffectiveDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Messages.ExpirationLessThanEffective</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.AR.ARPriceWorksheetMaint.ARPriceWorksheet_ExpirationDate_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Messages.ExpirationLessThanEffective</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_MatchStatsInfo_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Messages.TRansactionNotMatched</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_MatchStatsInfo_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Messages.TransactionMatchedToExistingDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_MatchStatsInfo_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Messages.TransactionMatchedToExistingExpenseReceipt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_MatchStatsInfo_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Messages.TransactionWillCreateNewDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_MatchStatsInfo_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Messages.TransactionWillCreateNewDocumentBasedOnRuleDefined</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTran_MatchStatsInfo_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Messages.TransactionWillPayInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CA.CAReleaseProcess.ReleaseDocProc&lt;TCADocument&gt;(PX.Objects.GL.JournalEntry, ref System.Collections.Generic.List&lt;PX.Objects.GL.Batch&gt;, TCADocument)</target>
    <syntaxNode>Messages.Offset</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.CR.OUSearchMaint.SendRequestToExchange(string, string, string)</target>
    <syntaxNode>Messages.SystemCannotExecuteWebRequest</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.Common.Discount.DiscountEngine&lt;TLine, TDiscountDetail&gt;.SetExternalManualDocDiscount(PX.Data.PXCache, PX.Data.PXSelectBase&lt;TLine&gt;, PX.Data.PXSelectBase&lt;TDiscountDetail&gt;, TDiscountDetail, TDiscountDetail, PX.Objects.Common.Discount.DiscountEngine.DiscountCalculationOptions)</target>
    <syntaxNode>AR.Messages.OnlyGroupDiscountExceedLimit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.Common.Discount.DiscountEngine&lt;TLine, TDiscountDetail&gt;.SetManualGroupDocDiscount(PX.Data.PXCache, PX.Data.PXSelectBase&lt;TLine&gt;, TLine, PX.Data.PXSelectBase&lt;TDiscountDetail&gt;, TDiscountDetail, string, string, int?, int?, System.DateTime, PX.Objects.Common.Discount.DiscountEngine.DiscountCalculationOptions)</target>
    <syntaxNode>AR.Messages.OnlyGroupDiscountExceedLimit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.FA.PercentTotalDBDecimalAttribute.RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>Messages.WrongValue</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.IN.WMS.CartsSupport&lt;TSelf, TWMSSystem, TWMSHeader, TGraph, TScanDocument, TScanLine&gt;.GetModePrompt(System.Func&lt;string&gt;)</target>
    <syntaxNode>Msg.CartPrompt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.PM.ChangeOrderEntry.CreatePOOrderFromChangedLine(PX.Objects.PM.PMChangeOrderLine)</target>
    <syntaxNode>Messages.ChangeOrderPrefix</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.PM.PMBillEngine.BillPrepayment(PX.Objects.PM.PMProject, PX.Objects.AR.Customer, PX.Objects.PM.PMTask, PX.Objects.PM.PMBillingRule, System.DateTime)</target>
    <syntaxNode>Messages.Prepayment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.SO.PickPackShip.PromptForPackageWeight(bool)</target>
    <syntaxNode>Msg.PackageWeightAutoCalcFailedPrompt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1052">
    <target>PX.Objects.SO.SOShipmentEntry.PrintCarrierLabels(System.Collections.Generic.List&lt;PX.Objects.SO.SOShipment&gt;, PX.Data.PXAdapter)</target>
    <syntaxNode>SOShipmentEntryActionsAttribute.Messages.PrintLabels</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.AR.CCPaymentProcessing.CCCustomerInformationManager.GetNewPaymentProfiles(PX.Data.PXGraph, PX.Objects.AR.CCPaymentProcessing.ICCPaymentProfileAdapter, PX.Objects.AR.CCPaymentProcessing.ICCPaymentProfileDetailAdapter)</target>
    <syntaxNode>e.Message + ". " + Messages.FailedToSyncCC</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.AR.CCPaymentProcessing.CCCustomerInformationManager.GetNewPaymentProfiles(PX.Data.PXGraph, PX.Objects.AR.CCPaymentProcessing.ICustomerPaymentMethodAdapter, PX.Objects.AR.CCPaymentProcessing.ICustomerPaymentMethodDetailAdapter)</target>
    <syntaxNode>e.Message + ". " + Messages.FailedToSyncCC</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CA.CABalValidate.Validate(PX.Objects.CA.CATranEntryLight, PX.Objects.CA.CashAccount, PX.Objects.CA.CABalValidate.CABalanceValidationPeriodFilter)</target>
    <syntaxNode>GL.Messages.Prefix + ": " + GL.Messages.ProcessingRequireFinPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CA.CABankTransactionsMaint.DoProcessing(System.Collections.Generic.IEnumerable&lt;PX.Objects.CA.CABankTran&gt;, System.Collections.Generic.Dictionary&lt;int, PX.Data.PXSetPropertyException&gt;)</target>
    <syntaxNode>e.Message + " " + e.InnerMessages[0]</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CR.OUSearchMaint.SendRequestToExchange(string, string, string)</target>
    <syntaxNode>PXMessages.LocalizeFormatNoPrefix(Messages.SystemCannotExecuteWebRequest) + Environment.NewLine + text</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CS.CSAttributeMaint.CSAttribute_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>string.Concat(displayName, ": ", PXUIFieldAttribute.GetError&lt;CSAttribute.attributeID&gt;(sender, row))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CS.DimensionMaint.CheckLength(PX.Data.PXCache, object, System.Collections.Generic.ICollection&lt;System.Exception&gt;)</target>
    <syntaxNode>Messages.NumberingIDCannotBeUsedWithSegment + Messages.EnsureSegmentLength</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CS.DimensionMaint.CheckLength(PX.Data.PXCache, object, System.Collections.Generic.ICollection&lt;System.Exception&gt;)</target>
    <syntaxNode>Messages.NumberingIDCannotBeUsedWithSegment + Messages.EnsureSegmentMask</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CS.DimensionMaint.CheckLength(PX.Data.PXCache, object, System.Collections.Generic.ICollection&lt;System.Exception&gt;)</target>
    <syntaxNode>Messages.NumberingIDCannotBeUsedWithSegmentCustom + Messages.EnsureSegmentLength</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CS.DimensionMaint.CheckLength(PX.Data.PXCache, object, System.Collections.Generic.ICollection&lt;System.Exception&gt;)</target>
    <syntaxNode>Messages.NumberingIDCannotBeUsedWithSegmentCustom + Messages.EnsureSegmentMask</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.CS.PXDimensionMaskAttribute.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>String.Format(localstring, errs.ToArray())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.EP.EPEarningTypesSetup.EPEarningType_IsActive_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>String.Format(EP.Messages.EarningTypeDeactivate, row.TypeCD, PXUIFieldAttribute.GetDisplayName&lt;EPSetup.holidaysType&gt;(Setup.Cache))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.EP.EPEarningTypesSetup.EPEarningType_IsActive_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>String.Format(EP.Messages.EarningTypeDeactivate, row.TypeCD, PXUIFieldAttribute.GetDisplayName&lt;EPSetup.regularHoursType&gt;(Setup.Cache))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.EP.EPEarningTypesSetup.EPEarningType_IsActive_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>String.Format(EP.Messages.EarningTypeDeactivate, row.TypeCD, PXUIFieldAttribute.GetDisplayName&lt;EPSetup.vacationsType&gt;(Setup.Cache))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.EP.TimeCardMaint.OnSubmitClicked()</target>
    <syntaxNode>PXMessages.LocalizeNoPrefix(Messages.TimecardIsNotValid) + " " + errorMsg</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.EP.TimeCardMaint.SelectSummaryRecords(PX.Objects.EP.EPTimeCard, bool)</target>
    <syntaxNode>Messages.SummarySyncFailed
									+ Environment.NewLine + ex.MessageNoPrefix</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.FinPeriodNonLockedSelectorAttribute.FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>Messages.Prefix + ": " + Messages.ProcessingRequireFinPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLBudgetEntry.GLBudgetLine_SubID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>String.Format(PXMessages.LocalizeNoPrefix(Messages.BudgetSubaccountNotAllowed), CurrentSelected.SubMask)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLBudgetEntry.wnext(PX.Data.PXAdapter)</target>
    <syntaxNode>String.Format(PXMessages.LocalizeNoPrefix(Messages.BudgetAccountNotAllowed), CurrentSelected.AccountMask)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLBudgetEntry.wnext(PX.Data.PXAdapter)</target>
    <syntaxNode>String.Format(PXMessages.LocalizeNoPrefix(Messages.BudgetSubaccountNotAllowed), CurrentSelected.SubMask)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLBudgetTreeMaint.GLBudgetTree_SubID_FieldVerifying(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>String.Format(PXMessages.LocalizeNoPrefix(Messages.BudgetSubaccountNotAllowed), CurrentSelected.SubMaskWildcard)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLBudgetTreeMaint.Persist()</target>
    <syntaxNode>String.Format(PXMessages.LocalizeNoPrefix(Messages.BudgetTreeOverlappingMask), row.AccountMask, row.SubMask)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLBudgetTreeMaint.VerifyParentChildMask(PX.Objects.GL.GLBudgetTree, PX.Objects.GL.GLBudgetTree)</target>
    <syntaxNode>String.Format(PXMessages.LocalizeNoPrefix(Messages.BudgetTreeIncorrectAccountMask), parent.AccountMask)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLBudgetTreeMaint.VerifyParentChildMask(PX.Objects.GL.GLBudgetTree, PX.Objects.GL.GLBudgetTree)</target>
    <syntaxNode>String.Format(PXMessages.LocalizeNoPrefix(Messages.BudgetTreeIncorrectSubMask), parent.SubMask)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLConsolReadMaint.CreateBatch(PX.Objects.GL.JournalEntry, string, int?, int?, PX.Objects.GL.GLConsolSetup)</target>
    <syntaxNode>exception.Message + Messages.ConsolidationBatchOutOfBalance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.GL.GLHistoryValidate.Validate(PX.Objects.GL.PostGraph, PX.Objects.GL.Ledger, PX.Objects.GL.GLHistoryValidate.GLIntegrityCheckFilter)</target>
    <syntaxNode>Messages.Prefix + ": " + Messages.ProcessingRequireFinPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.INTranCostUpdateAccum.PersistInserted(PX.Data.PXCache, object)</target>
    <syntaxNode>String.Format(Messages.INTranCostOverReceipted
                    , sender.Graph.Caches[typeof(INTran)].GetValueExt&lt;INTran.inventoryID&gt;(it)
                    , sender.Graph.Caches[typeof(INTran)].GetValueExt&lt;INTran.subItemID&gt;(it))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.PM.PMAllocator.AllocateBudget(PX.Objects.PM.PMTask, PX.Objects.PM.PMAllocationStep, int, int, int, string, decimal, decimal)</target>
    <syntaxNode>PXMessages.LocalizeNoPrefix(Messages.GenericFieldErrorOnAllocation) + " " + ex.Message</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.PM.PMAllocator.AllocateBudget(PX.Objects.PM.PMTask, PX.Objects.PM.PMAllocationStep, int, int, int, string, decimal, decimal)</target>
    <syntaxNode>PXMessages.LocalizeNoPrefix(Messages.LocationNotFound) + " " + ex.Message</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.PM.PMAllocator.AllocateBudget(PX.Objects.PM.PMTask, PX.Objects.PM.PMAllocationStep, int, int, string, decimal, decimal)</target>
    <syntaxNode>PXMessages.LocalizeNoPrefix(Messages.GenericFieldErrorOnAllocation) + " " + ex.Message</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.PM.PMAllocator.AllocateBudget(PX.Objects.PM.PMTask, PX.Objects.PM.PMAllocationStep, int, int, string, decimal, decimal)</target>
    <syntaxNode>PXMessages.LocalizeNoPrefix(Messages.LocationNotFound) + " " + ex.Message</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.PM.RateMaint.OnValidateEntities()</target>
    <syntaxNode>PXMessages.LocalizeNoPrefix(Messages.RateTableIsInvalid) + Environment.NewLine + errors</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.PM.RegisterRelease.Post(System.Collections.Generic.List&lt;PX.Objects.PM.ProcessInfo&lt;PX.Objects.GL.Batch&gt;&gt;, bool)</target>
    <syntaxNode>PXMessages.LocalizeNoPrefix(Messages.PostToGLFailed) + "\r\n" + e.Message</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.Objects.PO.POOrderEntry.Persist()</target>
    <syntaxNode>Messages.PrepaymentNotUpdated + ex.Message</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1053">
    <target>PX.TM.CompanyTreeMaint.EPCompanyTreeMember_Active_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>res + "\n" + Objects.EP.Messages.EmployeeIsInUseAtAssignmentMapPart2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APInvoiceDiscountDetail.DocType</target>
    <syntaxNode>PXDBString(3, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APInvoiceDiscountDetail.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APInvoiceDiscountDetail.RefNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APPriceWorksheetDetail.LineID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APPriceWorksheetDetail.RefNbr</target>
    <syntaxNode>PXDBString(15, IsKey = true, IsUnicode = true, InputMask = "&gt;CCCCCCCCCCCCCCC")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APTaxTran.Module</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APTaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APTaxTran.RefNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true, InputMask = "&gt;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AP.APTaxTran.TranType</target>
    <syntaxNode>PXDBString(3, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARFinChargePercent.BeginDate</target>
    <syntaxNode>PXDBDate(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARFinChargePercent.FinChargeID</target>
    <syntaxNode>PXDBString(10, IsUnicode = true, IsKey = true, InputMask = "&gt;aaaaaaaaaa")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARFinChargePercent.PercentID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARInvoiceDiscountDetail.DocType</target>
    <syntaxNode>PXDBString(3, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARInvoiceDiscountDetail.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARInvoiceDiscountDetail.RefNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARPriceWorksheetDetail.LineID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARPriceWorksheetDetail.RefNbr</target>
    <syntaxNode>PXDBString(15, IsKey = true, IsUnicode = true, InputMask = "&gt;CCCCCCCCCCCCCCC")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARTaxTran.Module</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARTaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARTaxTran.RefNbr</target>
    <syntaxNode>PXDBString(15, IsKey = true, IsUnicode = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARTaxTran.TranType</target>
    <syntaxNode>PXDBString(3, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARTempCreditLimit.CustomerID</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.ARTempCreditLimit.LineID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.CustomerPaymentMethod.BAccountID</target>
    <syntaxNode>Customer(DescriptionField = typeof(Customer.acctName), IsKey = true, DirtyRead = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.CustomerPaymentMethod.PMInstanceID</target>
    <syntaxNode>PXDBForeignIdentity(typeof(PMInstance), IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.DiscountSequenceDetail.DiscountDetailsID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.AR.DiscountSequenceDetail.IsLast</target>
    <syntaxNode>PXDBBool(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CA.CABankTran.CashAccountID</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CA.CABankTran.TranID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CA.CATaxTran.Module</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CA.CATaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CA.CATaxTran.RefNbr</target>
    <syntaxNode>PXDBString(15, IsKey = true, IsUnicode = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CA.CATaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CA.CATaxTran.TranType</target>
    <syntaxNode>PXDBString(3, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CR.CROpportunityDiscountDetail.QuoteID</target>
    <syntaxNode>PXDBGuid(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CR.CROpportunityDiscountDetail.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CR.CROpportunityDiscountDetail.Type</target>
    <syntaxNode>PXDBString(1, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CR.CRTaxTran.LineNbr</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CR.CRTaxTran.QuoteID</target>
    <syntaxNode>PXDBGuid(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CR.CRTaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CR.CRTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CS.CarrierPluginCustomer.CarrierPluginID</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CS.CarrierPluginCustomer.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CS.NotificationSource.SetupID</target>
    <syntaxNode>PXDBGuid(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CS.NotificationSource.SourceID</target>
    <syntaxNode>PXDBIdentity(IsKey=true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CS.NumberingSequence.NumberingID</target>
    <syntaxNode>PXDBString(10, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CS.NumberingSequence.NumberingSEQ</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractBillingTrace.ContractID</target>
    <syntaxNode>PXDBInt(IsKey=true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractBillingTrace.DocType</target>
    <syntaxNode>PXDBString(3, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractBillingTrace.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractBillingTrace.RefNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true, InputMask = "")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractDetailExt.ContractDetailID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractDetailExt.RevID</target>
    <syntaxNode>PXDBInt(MinValue = 1, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractRevisionByPeriod.ContractID</target>
    <syntaxNode>PXDBIdentity(IsKey = true, BqlField = typeof(ContractRenewalHistory.contractID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.ContractRevisionByPeriod.FinPeriodID</target>
    <syntaxNode>FinPeriodID(IsKey = true, BqlField = typeof(MasterFinPeriod.finPeriodID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.Standalone.ContractDetail.ContractDetailID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.Standalone.ContractDetail.ContractID</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.CT.Standalone.ContractDetail.RevID</target>
    <syntaxNode>PXDBInt(MinValue = 1, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.EP.EPLoginType.LoginTypeID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.EP.EPLoginType.LoginTypeName</target>
    <syntaxNode>PXDBString(50, IsUnicode = true, IsKey = true, InputMask = "")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.EP.EPOtherAttendee.AttendeeID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.EP.EPOtherAttendee.EventNoteID</target>
    <syntaxNode>PXDBGuid(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.EP.ExpenseClaimEntry.EPExpenseClaimDetailsForSubmit.ClaimDetailID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.GL.GLAllocationDestination.GLAllocationID</target>
    <syntaxNode>PXDBString(10, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.GL.GLAllocationDestination.LineID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.GL.GLAllocationSource.GLAllocationID</target>
    <syntaxNode>PXDBString(10, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.GL.GLAllocationSource.LineID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INCategory.CategoryCD</target>
    <syntaxNode>PXDBString(10, IsKey = true, InputMask = "", IsUnicode = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INCategory.CategoryID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INItemPlan.InventoryID</target>
    <syntaxNode>AnyInventory(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INItemPlan.PlanID</target>
    <syntaxNode>PXDBLongIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INReplenishmentSeason.ReplenishmentPolicyID</target>
    <syntaxNode>PXDBString(10, IsUnicode = true, IsKey = true, InputMask = "&gt;aaaaaaaaaa")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INReplenishmentSeason.SeasonID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INUpdateStdCostRecord.InventoryID</target>
    <syntaxNode>Inventory(IsKey = true, DirtyRead = true, DisplayName = "Inventory ID")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.INUpdateStdCostRecord.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.IN.InventoryAllocDetEnq.INItemPlan.InventoryID</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PM.PMTaxTran.LineNbr</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PM.PMTaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PM.PMTaxTran.RefNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, InputMask = "", IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PM.PMTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POLandedCostTaxTran.DocType</target>
    <syntaxNode>PXDBString(1, IsFixed = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POLandedCostTaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POLandedCostTaxTran.RefNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, InputMask = "", IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POLandedCostTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POOrderDiscountDetail.OrderNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POOrderDiscountDetail.OrderType</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POOrderDiscountDetail.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POTaxTran.LineNbr</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POTaxTran.OrderNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, InputMask = "", IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POTaxTran.OrderType</target>
    <syntaxNode>PXDBString(2, IsFixed = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POTaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.PO.POTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOOrderDiscountDetail.OrderNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOOrderDiscountDetail.OrderType</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOOrderDiscountDetail.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOShipmentDiscountDetail.OrderNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOShipmentDiscountDetail.OrderType</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOShipmentDiscountDetail.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOShipmentDiscountDetail.ShipmentNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOShipmentDiscountDetail.Type</target>
    <syntaxNode>PXDBString(1, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOTaxTran.LineNbr</target>
    <syntaxNode>PXDBInt(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOTaxTran.OrderNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, InputMask = "", IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOTaxTran.OrderType</target>
    <syntaxNode>PXDBString(2, IsFixed = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOTaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.SO.SOTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.SVATTaxTran.Module</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.SVATTaxTran.RefNbr</target>
    <syntaxNode>PXDBString(15, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.SVATTaxTran.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.SVATTaxTran.TranType</target>
    <syntaxNode>PXDBString(3, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.TaxRev.RevisionID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.TaxRev.TaxID</target>
    <syntaxNode>PXDBString(Tax.taxID.Length, IsUnicode = true, IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.TaxTran.Module</target>
    <syntaxNode>PXDBString(2, IsKey = true, IsFixed = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1055">
    <target>PX.Objects.TX.TaxTran.RecordID</target>
    <syntaxNode>PXDBIdentity(IsKey = true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1059">
    <target>PX.Objects.CT.UsageMaint.UsageMaint()</target>
    <syntaxNode>EnsurePMDocumentCreated()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.AP.APDiscountSequenceMaint.VendorDiscountSequence_DiscountedFor_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;VendorDiscountSequence.prorate&gt;(sender, e.Row, ((VendorDiscountSequence)e.Row).DiscountedFor == DiscountOption.Amount)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CA.CATranEntry.CAAdj_Rejected_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;CAAdj.hold&gt;(cache, e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CR.CRActivityListBase&lt;TPrimaryView, TActivity&gt;.Table_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>CorrectButtons(sender, row, PXEntryStatus.Notchanged)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CR.CRAttributeList&lt;TEntity&gt;.AttrFieldSelectingHandler(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;CSAnswers.attributeID&gt;(sender, e.Row, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CR.OUSearchMaint.OUSearchEntity_OutgoingEmail_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXStringListAttribute.SetList&lt;OUSearchEntity.outgoingEmail&gt;(sender, this.Filter.Current, values, labels)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CR.StateAttribute.FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled(sender, e.Row, FieldName, countryID != null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.CSAttributeMaint.CSAttribute_ControlType_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>SetControlsState(e.Row as CSAttribute, sender)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.DimensionMaint.Segment_SegmentID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;Segment.segmentID&gt;(cache, currow, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.SegmentMaint.SegmentValue_IsConsolidatedValue_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;SegmentValue.isConsolidatedValue&gt;(cache, null, isSubitem)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.SegmentMaint.SegmentValue_IsConsolidatedValue_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetVisible&lt;SegmentValue.isConsolidatedValue&gt;(cache, null, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.SegmentMaint.SegmentValue_IsConsolidatedValue_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetVisible&lt;SegmentValue.isConsolidatedValue&gt;(cache, null, isSubitem)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.SegmentMaint.SegmentValue_MappedSegValue_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetVisible&lt;SegmentValue.mappedSegValue&gt;(cache, null, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.SegmentMaint.SegmentValue_MappedSegValue_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetVisible&lt;SegmentValue.mappedSegValue&gt;(cache, null, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.TermsAttribute.CalcDisc(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled(sender, e.Row, _CuryDiscBal.Name, (terms.InstallmentType == TermsInstallmentType.Single))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.TermsAttribute.FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>CalcDisc(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CS.TermsAttribute.VerifyDiscount(PX.Data.PXCache, PX.Data.PXFieldVerifyingEventArgs)</target>
    <syntaxNode>CalcDisc(sender, new PXFieldUpdatedEventArgs(newrow, null, true))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CT.ContractMaint.Contract_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetRequired&lt;ContractBillingSchedule.nextDate&gt;(sender, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CT.ContractMaint.Contract_Type_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>SetControlsState(row, sender)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.CT.TemplateMaint.ContractTemplate_Type_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>SetControlsState(row, sender)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.EP.EPApprovalMapMaint.EPAssignmentMap_GraphType_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXStringListAttribute.SetList&lt;EPAssignmentMap.graphType&gt;(sender, row,
					list.Select(x =&gt; x.GraphType).ToArray(), list.Select(x =&gt; x.Title).ToArray())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.EP.EPApprovalMapMaint.EPAssignmentMap_GraphType_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXStringListAttribute.SetLocalizable&lt;EPAssignmentMap.graphType&gt;(sender, null, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.EP.EPAssignmentMapMaint.EPAssignmentMap_GraphType_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXStringListAttribute.SetList&lt;EPAssignmentMap.graphType&gt;(sender, row,
					list.Select(x =&gt; x.GraphType).ToArray(), list.Select(x =&gt; x.Title).ToArray())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.EP.EPAssignmentMapMaint.EPAssignmentMap_GraphType_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXStringListAttribute.SetLocalizable&lt;EPAssignmentMap.graphType&gt;(sender, null, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.FA.AssetGLTransactions._(PX.Data.Events.FieldVerifying&lt;PX.Objects.FA.FATran.tranDate&gt;)</target>
    <syntaxNode>PXUIFieldAttribute.SetVisible&lt;APTran.tranDate&gt;(e.Cache, null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.FA.DepreciationTableMethodMaint.FADepreciationMethod_RecordType_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetRequired&lt;FADepreciationMethod.parentMethodID&gt;(sender, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.FA.DepreciationTableMethodMaint.FADepreciationMethod_RecordType_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetRequired&lt;FADepreciationMethod.parentMethodID&gt;(sender, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.GL.AccountByPeriodEnq.GLTranR_Selected_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>reclassify.SetEnabled(GetSelectedTrans().Any())</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.GL.GLBudgetTreeMaint.GLBudgetTree_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;GLBudgetTree.accountMask&gt;(cache, row, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.GL.GLBudgetTreeMaint.GLBudgetTree_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;GLBudgetTree.isGroup&gt;(cache, row, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.GL.GLBudgetTreeMaint.GLBudgetTree_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;GLBudgetTree.subMask&gt;(cache, row, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.GL.Reclassification.UI.ReclassifyTransactionsProcess.GLTranForReclassification_ReclassBatchNbr_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetVisible&lt;GLTranForReclassification.reclassBatchNbr&gt;(GLTranForReclass.Cache, null, status == PXLongRunStatus.Completed || State.ReclassScreenMode == ReclassScreenMode.Editing)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.IN.InventoryTranDetEnq.InventoryTranDetEnqFilter_ByFinancialPeriod_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;InventoryTranDetEnqFilter.endDate&gt;(cache, null, !byFinancialPeriod)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.IN.InventoryTranDetEnq.InventoryTranDetEnqFilter_ByFinancialPeriod_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;InventoryTranDetEnqFilter.startDate&gt;(cache, null, !byFinancialPeriod)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.RowInserted&lt;PX.Objects.PM.PMProject&gt;)</target>
    <syntaxNode>PXUIFieldAttribute.SetRequired&lt;ContractBillingSchedule.nextDate&gt;(e.Cache, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.PM.RegisterEntry.PMTran_Billable_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;PMTran.billableQty&gt;(sender, e.Row, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.PM.RegisterEntry.PMTran_Billable_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;PMTran.billableQty&gt;(sender, e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.PM.RegisterEntry._(PX.Data.Events.FieldUpdated&lt;PX.Objects.PM.PMTran, PX.Objects.PM.PMTran.billable&gt;)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;PMTran.billableQty&gt;(e.Cache, e.Row, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.PM.RegisterEntry._(PX.Data.Events.FieldUpdated&lt;PX.Objects.PM.PMTran, PX.Objects.PM.PMTran.billable&gt;)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;PMTran.billableQty&gt;(e.Cache, e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.PO.POOrderEntry.POOrder_Cancelled_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;POOrder.hold&gt;(cache, e.Row, true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.RQ.RQRequestEntry.POSiteStatusFilter_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;POSiteStatusFilter.onlyAvailable&gt;(sitestatusfilter.Cache, row, Document.Current.VendorID != null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.RQ.RQRequisitionEntry.POSiteStatusFilter_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;POSiteStatusFilter.onlyAvailable&gt;(sitestatusfilter.Cache, row, Document.Current.VendorID != null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.RUTROT.ARInvoiceEntryRUTROT.ARTran_RUTROTItemType_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;ARTranRUTROT.rUTROTWorkTypeID&gt;(sender, row, rowRR.RUTROTItemType != RUTROTItemTypes.OtherCost)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.RUTROT.SOOrderEntryRUTROT.SOLine_RUTROTItemType_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;SOLineRUTROT.rUTROTWorkTypeID&gt;(sender, row, rowRR.RUTROTItemType != RUTROTItemTypes.OtherCost)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.SO.SOInvoiceTermsAttribute.CalcDisc_CuryDocBal(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>base.CalcDisc(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.SO.SOInvoiceTermsAttribute.CalcDisc_CuryOrigDocAmt(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>base.CalcDisc(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.SO.SOInvoiceTermsAttribute.FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>CalcDisc_CuryDocBal(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.SO.SOInvoiceTermsAttribute.FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>CalcDisc_CuryOrigDocAmt(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.SO.SOInvoiceTermsAttribute.FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>base.FieldUpdated(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.TX.SalesTaxMaint.Tax_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>ProcessTaxRevOnTaxVendorChangeOnTaxUpdate(sender, newTax, oldTax)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.TX.TaxYearMaint.TaxYearEx_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;TaxYearFilter.shortTaxYear&gt;(cache, null, taxYearFilter.ShortTaxYear != true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.WZ.WZTaskEntry.WZScenario_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>activateScenario.SetEnabled(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.WZ.WZTaskEntry.WZScenario_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>completeScenario.SetEnabled(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1070">
    <target>PX.Objects.WZ.WZTaskEntry.WZScenario_RowInserting(PX.Data.PXCache, PX.Data.PXRowInsertingEventArgs)</target>
    <syntaxNode>suspendScenario.SetEnabled(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.AP.APInvoiceEntry.APTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, tran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.AP.APQuickCheckEntry.APTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>DR.ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, e.Row as APTran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.AP.APScheduleMaint.DocumentSelection_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>RemoveApplications(document)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.AR.ARCashSaleEntry.ARTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>DR.ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(this, e.Row as ARTran)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.AR.ARInvoiceEntry.ARTran_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>ScheduleHelper.DeleteAssociatedScheduleIfDeferralCodeChanged(sender, documentLine)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.AR.ARScheduleMaint.DocumentSelection_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>RemoveApplications(document)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.CA.CAReconEntry.CARecon_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.CA.CATranEnq.CAEnqFilter_AccountID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.EP.EPApprovalAutomation&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.Approved_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>this.Approve(doc)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.EP.EPApprovalAutomation&lt;SourceAssign, Approved, Rejected, Hold, SetupApproval&gt;.Rejected_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>this.Reject(doc)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.GL.JournalEntry.GLTran_RowDeleted(PX.Data.PXCache, PX.Data.PXRowDeletedEventArgs)</target>
    <syntaxNode>je.Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.GL.MasterFinPeriodMaint._(PX.Data.Events.RowDeleting&lt;PX.Objects.GL.FinPeriods.MasterFinYear&gt;)</target>
    <syntaxNode>yearSetup.AutoFill.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.GL.MasterFinPeriodMaint._(PX.Data.Events.RowDeleting&lt;PX.Objects.GL.FinPeriods.MasterFinYear&gt;)</target>
    <syntaxNode>yearSetup.Save.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.IN.INAdjustmentEntry.INRegister_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>piReview.ReopenPI(adjustment.PIID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.IN.INPICountEntry.INBarCodeItem_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>UpdatePhysicalQty()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.IN.WarehouseManagementSystemGraph&lt;TSelf, TGraph, TDocument, TWMSHeader&gt;._(PX.Data.Events.FieldUpdated&lt;TWMSHeader, PX.Objects.IN.WMSHeader.barcode&gt;)</target>
    <syntaxNode>Scan.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.PM.ProjectEntry._(PX.Data.Events.FieldUpdated&lt;PX.Objects.PM.PMProject, PX.Objects.PM.PMProject.retainagePct&gt;)</target>
    <syntaxNode>updateRetainage.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.SO.SOOrderEntry.SOOrder_RowUpdated(PX.Data.PXCache, PX.Data.PXRowUpdatedEventArgs)</target>
    <syntaxNode>creditHold.Press(new PXAdapter(dummyView))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1071">
    <target>PX.Objects.WZ.WZTaskEntry.WZTask_Status_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>this.completeScenarioWithoutRefresh.Press()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.CA.CATrxRelease.ReleaseCATran(PX.Objects.CA.CATran, ref PX.Data.PXGraph, System.Collections.Generic.List&lt;PX.Objects.GL.Batch&gt;)</target>
    <syntaxNode>caGraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.CA.Descriptor.ReportFunctions.FindCurrencyRate(string, string, string, System.DateTime)</target>
    <syntaxNode>graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.CA.PaymentReclassifyProcess.CheckAPTransaction(PX.Objects.CA.ICADocSource)</target>
    <syntaxNode>te</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.CA.PaymentReclassifyProcess.CheckARTransaction(PX.Objects.CA.ICADocSource)</target>
    <syntaxNode>te</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.CR.CREmailActivityMaint.loadEmailSource()</target>
    <syntaxNode>new PXGraph()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.CR.CRSMEmailPrimaryGraphAttribute.GetGraphType(PX.Data.PXCache, ref object, bool, System.Type)</target>
    <syntaxNode>graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.CS.Email.PXEmailSyncHelper.GetConfig(int)</target>
    <syntaxNode>graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.Common.ReportFunctions.GetOrganizationByBAccountCD(string)</target>
    <syntaxNode>graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.EP.ConversationEmailProcessor.Process(PX.Objects.EP.BasicEmailProcessor.Package)</target>
    <syntaxNode>graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.EP.ExchangeEmailProcessor.Process(PX.Objects.EP.BasicEmailProcessor.Package)</target>
    <syntaxNode>graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.PM.EPExpenseAllowProjectTaskAttribute.FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>graph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.SO.SOOrderEntry.InvoiceOrder(System.Collections.Generic.Dictionary&lt;string, object&gt;, System.Collections.Generic.IEnumerable&lt;PX.Objects.SO.SOOrder&gt;, PX.Objects.CS.DocumentList&lt;PX.Objects.AR.ARInvoice, PX.Objects.SO.SOInvoice&gt;, bool, PX.Data.PXQuickProcess.ActionFlow)</target>
    <syntaxNode>docgraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.SO.SOOrderEntry.InvoiceOrder(System.Collections.Generic.Dictionary&lt;string, object&gt;, System.Collections.Generic.List&lt;PX.Objects.SO.SOOrder&gt;, PX.Objects.CS.DocumentList&lt;PX.Objects.AR.ARInvoice, PX.Objects.SO.SOInvoice&gt;, bool, PX.Data.PXQuickProcess.ActionFlow)</target>
    <syntaxNode>docgraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1072">
    <target>PX.Objects.SO.SOShipmentEntry.InvoiceReceipt(System.Collections.Generic.Dictionary&lt;string, object&gt;, System.Collections.Generic.List&lt;PX.Objects.SO.SOShipment&gt;, PX.Objects.CS.DocumentList&lt;PX.Objects.AR.ARInvoice, PX.Objects.SO.SOInvoice&gt;, bool)</target>
    <syntaxNode>docgraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AP.APDiscountMaint.APDiscount_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>DiscountEngine.GetDiscountTypes(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoice_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXLockViolationException(typeof(APInvoice), PXDBOperation.Insert, new object[] { doc.DocType, doc.RefNbr });</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoice_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXRowPersistedException(typeof(APPayment.refNbr).Name, doc.RefNbr, Messages.SameRefNbr, Messages.Check, doc.RefNbr);</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXLockViolationException(typeof(APPayment), PXDBOperation.Insert, new object[] { row.DocType, row.RefNbr });</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AP.APPaymentEntry.APPayment_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXRowPersistedException(typeof(APPayment.refNbr).Name, row.RefNbr, Messages.SameRefNbr, searchDocType == APDocType.Check ? Messages.Check : Messages.Prepayment, row.RefNbr);</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AP.BaseVendorRefNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>CheckUniqueness(vrn)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AR.ARDiscountMaint.ARDiscount_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>DiscountEngine.GetDiscountTypes(true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AR.ARInvoiceNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>base.RowPersisted(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AR.ARInvoiceNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.AR.InvoiceNbrAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXRowPersistedException(_FieldName, SetNumber, Messages.DuplicateInvoiceNbr);</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.CS.OrganizationMaint.Organization_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(PX.Objects.CS.Messages.CantAutoNumber);</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.EP.EPApprovalList&lt;SourceAssign, Approved, Rejected&gt;.OnPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>TemplateNotificationGenerator.Create(this._Graph, e.Row, approval.NotificationID.Value)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.EP.EPApprovalList&lt;SourceAssign, Approved, Rejected&gt;.OnPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>sender.Send()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.LocationStatusAccumulatorAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(message,
                        PXForeignSelectorAttribute.GetValueExt&lt;LocationStatus.inventoryID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;LocationStatus.subItemID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;LocationStatus.siteID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;LocationStatus.locationID&gt;(sender, e.Row));</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.LotSerialStatusAccumulatorAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(message,
                        PXForeignSelectorAttribute.GetValueExt&lt;LotSerialStatus.inventoryID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;LotSerialStatus.subItemID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;LotSerialStatus.siteID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;LotSerialStatus.locationID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;LotSerialStatus.lotSerialNbr&gt;(sender, e.Row));</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.SiteStatusAccumulatorAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(message,
                        PXForeignSelectorAttribute.GetValueExt&lt;SiteStatus.inventoryID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;SiteStatus.subItemID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;SiteStatus.siteID&gt;(sender, e.Row));</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.TransitLocationStatusAccumulatorAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(message,
                        PXForeignSelectorAttribute.GetValueExt&lt;TransitLocationStatus.inventoryID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;TransitLocationStatus.subItemID&gt;(sender, e.Row));</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.TransitLotSerialStatusAccumulatorAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(message,
                        PXForeignSelectorAttribute.GetValueExt&lt;TransitLotSerialStatus.inventoryID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;TransitLotSerialStatus.subItemID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;TransitLotSerialStatus.lotSerialNbr&gt;(sender, e.Row));</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.TransitSiteStatusAccumulatorAttribute.RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(message,
                        PXForeignSelectorAttribute.GetValueExt&lt;SiteStatus.inventoryID&gt;(sender, e.Row),
                        PXForeignSelectorAttribute.GetValueExt&lt;SiteStatus.subItemID&gt;(sender, e.Row));</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.SO.SOOrderEntry.CCOrderList.Authorize(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>ccProcGraph.RecordAuthorization(iOrder, iOrder.PreAuthTranNumber, iOrder.CuryCCPreAuthAmount, iOrder.CCAuthExpirationDate, ref tranID)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.SO.SOOrderEntry.CCOrderList.Authorize(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>ccProcGraph.RecordAuthorization(iOrder, tranRecord)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.SO.SOOrderEntry.CCOrderList.Authorize(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(Messages.OrderHaveZeroBalanceError);</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1073">
    <target>PX.Objects.SO.SOShipmentEntry.ShipmentINTranRowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>throw new PXException(ErrorMessages.RecordAddedByAnotherProcess, sender.DisplayName, ErrorMessages.ChangesWillBeLost);</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.AP.APPayBills.APAdjust_RowInserted(PX.Data.PXCache, PX.Data.PXRowInsertedEventArgs)</target>
    <syntaxNode>CheckIfRowNotApprovedForPayment((APAdjust)e.Row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.AR.ARCreateWriteOff.ARWriteOffFilter_ReasonCode_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>ARSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesApplyParameters_StatementCycle_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>this.ARSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.GL.JournalWithSubEntry.APAdjust_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.GL.JournalWithSubEntry.GLTranDoc_RowPersisting(PX.Data.PXCache, PX.Data.PXRowPersistingEventArgs)</target>
    <syntaxNode>this.apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.PO.POOrderEntry.POLine_ExpenseSubID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.PO.POOrderEntry.POLine_ProjectID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1074">
    <target>PX.Objects.PO.POOrderEntry.POOrder_ProjectID_FieldUpdated(PX.Data.PXCache, PX.Data.PXFieldUpdatedEventArgs)</target>
    <syntaxNode>apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AP.APInvoiceEntryExt.APInvoice_RefNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, e.Row as APInvoice)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AP.APPaymentEntryExt.APPayment_RefNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, e.Row as APPayment)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AP.APQuickCheckEntryExt.APQuickCheck_RefNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, e.Row as AP.Standalone.APQuickCheck)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AP.BatchRefAttribute.PX.Data.IPXFieldDefaultingSubscriber.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling(_FieldName, e.Row, null, new PXSetPropertyException(ErrorMessages.FieldIsEmpty, PXUIFieldAttribute.GetDisplayName&lt;PaymentMethodAccount.aPBatchLastRefNbr&gt;(sender.Graph.Caches[typeof(PaymentMethodAccount)])))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AP.PaymentRefAttribute.PX.Data.IPXFieldDefaultingSubscriber.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling(_FieldName, e.Row, e.NewValue, null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AP.PaymentRefAttribute.PX.Data.IPXFieldDefaultingSubscriber.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling(_FieldName, e.Row, null, new AutoNumberException(CS.Messages.CantAutoNumberSpecific, _TargetDisplayName ))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AR.ARCashSaleEntryExt.ARCashSale_RefNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, e.Row as AR.Standalone.ARCashSale)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AR.ARInvoiceEntryExt.ARInvoice_RefNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, e.Row as ARInvoice)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AR.ARPaymentEntryExt.ARPayment_RefNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, e.Row as ARPayment)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AR.CustomerMaint.Customer_MailDunningLetters_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>CheckExcludedFromDunning(cache, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AR.CustomerMaint.Customer_PrintDunningLetters_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>CheckExcludedFromDunning(cache, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.AR.PaymentRefAttribute.PX.Data.IPXFieldDefaultingSubscriber.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling(_FieldName, e.Row, null, new AutoNumberException(CS.Messages.CantAutoNumberSpecific, _TargetDisplayName))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.CA.CATranEntryExt.CAAdj_AdjRefNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.CM.RevalueAPAccounts.RevalueFilter_TotalRevalued_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Filter.Cache.RaiseExceptionHandling&lt;RevalueFilter.totalRevalued&gt;(e.Row, val,
							new PXSetPropertyException(Messages.NoRevaluationEntryWasMade, PXErrorLevel.Warning))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.CM.RevalueARAccounts.RevalueFilter_TotalRevalued_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Filter.Cache.RaiseExceptionHandling&lt;RevalueFilter.totalRevalued&gt;(e.Row, val,
							new PXSetPropertyException(Messages.NoRevaluationEntryWasMade, PXErrorLevel.Warning))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.CM.RevalueGLAccounts.RevalueFilter_TotalRevalued_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>Filter.Cache.RaiseExceptionHandling&lt;RevalueFilter.totalRevalued&gt;(e.Row, val,
							new PXSetPropertyException(Messages.NoRevaluationEntryWasMade, PXErrorLevel.Warning))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EPActivityDefaultWeekAttribute.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling(FieldName, e.Row, true, exception)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EPApprovalAndAssignmentMapBase&lt;TGraph&gt;.EPRuleCondition_FieldName_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>CreateFieldStateForFieldName(e.ReturnState, AssigmentMap.Current.EntityType, AssigmentMap.Current.GraphType, row.Entity, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EPApprovalList&lt;SourceAssign, Approved, Rejected&gt;.OnPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>this._Pending.Cache.RaiseExceptionHandling&lt;EPApproval.status&gt;(approval, approval.Status,
                                new PXSetPropertyException(Messages.ApprovalNotificationError, PXErrorLevel.Warning, ex.Message))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EPApprovalMapMaint.EPRuleEmployeeCondition_FieldName_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>CreateFieldStateForFieldName(e.ReturnState, row.Entity, null, row.Entity)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EPApprovalMapMaint.EPRuleEmployeeCondition_Value2_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>CreateFieldStateForFieldName(e.ReturnState,
					AssigmentMap.Current.EntityType,
					null,
					AssigmentMap.Current.EntityType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EPApprovalMapMaint.EPRuleEmployeeCondition_Value_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>CreateFieldStateForFieldName(e.ReturnState,
					AssigmentMap.Current.EntityType,
					null,
					AssigmentMap.Current.EntityType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_FromWeek_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;PMTimeActivityFilter.fromWeek&gt;(e.Row, null, exception)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_TillWeek_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;PMTimeActivityFilter.fromWeek&gt;(e.Row, null, exception)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.FA.AssetMaint.FAUsage_MeasurementDate_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;FAUsage.measurementDate&gt;(cur, e.NewValue, new PXSetPropertyException(CS.Messages.Entry_GT, prev.MeasurementDate))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.GL.JournalEntry.GLTran_TaxID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>this.GLTranModuleBatNbr.Cache.RaiseExceptionHandling&lt;GLTran.taxID&gt;(row, null, new PXSetPropertyException(Messages.TaxIDMissingForAccountAssociatedWithTaxes, PXErrorLevel.Warning))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.GL.JournalEntryExt.Batch_BatchNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.GL.OpenPeriodAttribute.FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>OpenPeriodDefaulting(sender, e)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.GL.OpenPeriodAttribute.OpenPeriodDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>IsValidPeriod(sender, e.Row, UnFormatPeriod((string)e.NewValue))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.GL.OpenPeriodAttribute.OpenPeriodDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling(_FieldName, e.Row, e.NewValue, ex)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.GL.PostGraphExt.Batch_BatchNbr_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs, PX.Data.PXFieldDefaulting)</target>
    <syntaxNode>SetNumbering(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.INTransferEntry.INTran_INTransitQty_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INTran.inventoryID, INTran.uOM&gt;(sender, e.Row, row.INTransitBaseQty.GetValueOrDefault(), INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.INTransferEntry.INTran_ReceiptedQty_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INTran.inventoryID, INTran.uOM&gt;(sender, e.Row, row.ReceiptedBaseQty.GetValueOrDefault(), INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.InventoryItemMaint.INItemXRef_AlternateID_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;INItemXRef.alternateID&gt;(row, row.AlternateID, new PXSetPropertyException(Messages.AlternateIDDoesNotCorrelateWithCurrentSegmentRules, PXErrorLevel.Warning))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.InventoryItemMaintBase.INItemXRef_AlternateID_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;INItemXRef.alternateID&gt;(row, row.AlternateID, new PXSetPropertyException(Messages.AlternateIDDoesNotCorrelateWithCurrentSegmentRules, PXErrorLevel.Warning))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentMasterTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INKitRegister.inventoryID, INKitRegister.uOM&gt;(sender, e.Row, (decimal)availability.QtyActual, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentMasterTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INKitRegister.kitInventoryID, INKitRegister.uOM&gt;(sender, e.Row, (decimal)availability.QtyAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentMasterTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INKitRegister.kitInventoryID, INKitRegister.uOM&gt;(sender, e.Row, (decimal)availability.QtyHardAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentMasterTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INKitRegister.kitInventoryID, INKitRegister.uOM&gt;(sender, e.Row, (decimal)availability.QtyNotAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentMasterTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INKitRegister.kitInventoryID, INKitRegister.uOM&gt;(sender, e.Row, (decimal)availability.QtyOnHand, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INComponentTran.inventoryID, INComponentTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyActual, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INComponentTran.inventoryID, INComponentTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INComponentTran.inventoryID, INComponentTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyHardAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INComponentTran.inventoryID, INComponentTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyNotAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINComponentTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INComponentTran.inventoryID, INComponentTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyOnHand, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>AvailabilityCheck(sender, (INTran)e.Row, availability)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INTran.inventoryID, INTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyActual, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INTran.inventoryID, INTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INTran.inventoryID, INTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyHardAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INTran.inventoryID, INTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyNotAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSINTran.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;INTran.inventoryID, INTran.uOM&gt;(sender, e.Row, (decimal)availability.QtyOnHand, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.Detail_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>MasterCache.RaiseExceptionHandling(exception.InnerFields[i], master, null, new PXSetPropertyException(exception.InnerMessages[i]))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.Master_RowPersisted(PX.Data.PXCache, PX.Data.PXRowPersistedEventArgs)</target>
    <syntaxNode>Detail_RowPersisted(cache, new PXRowPersistedEventArgs(detail, e.Operation, e.TranStatus, e.Exception))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.LocationAttribute.FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling(_FieldName, e.Row, null, new PXSetPropertyException(ErrorMessages.ElementDoesntExist, PXErrorLevel.Warning, Messages.Location))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.IN.NonStockItemMaint.INItemXRef_AlternateID_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;INItemXRef.alternateID&gt;(row, row.AlternateID, new PXSetPropertyException(Messages.AlternateIDDoesNotCorrelateWithCurrentSegmentRules, PXErrorLevel.Warning))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.PO.LSPOReceiptLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;POReceiptLine.inventoryID, POReceiptLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.PO.LSPOReceiptLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;POReceiptLine.inventoryID, POReceiptLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyHardAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.PO.LSPOReceiptLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;POReceiptLine.inventoryID, POReceiptLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyNotAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.PO.LSPOReceiptLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;POReceiptLine.inventoryID, POReceiptLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyOnHand, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.RQ.RQRequisitionEntry.RQRequisitionLine_Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;RQRequisitionLine.inventoryID, RQRequisitionLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.RQ.RQRequisitionEntry.RQRequisitionLine_Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;RQRequisitionLine.inventoryID, RQRequisitionLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyHardAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.RQ.RQRequisitionEntry.RQRequisitionLine_Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;RQRequisitionLine.inventoryID, RQRequisitionLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyNotAvail, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.RQ.RQRequisitionEntry.RQRequisitionLine_Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;RQRequisitionLine.inventoryID, RQRequisitionLine.uOM&gt;(sender, e.Row, (decimal)availability.QtyOnHand, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.LSSOLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;SOLine.inventoryID, SOLine.uOM&gt;(sender, e.Row, 0m, INPrecision.QUANTITY)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.LSSOLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;SOLine.inventoryID, SOLine.uOM&gt;(sender, e.Row, 1m, INPrecision.NOROUND)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.LSSOShipLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>AvailabilityCheck(sender, (SOShipLine)e.Row, availability)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.LSSOShipLine.Availability_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertFromBase&lt;SOShipLine.inventoryID, SOShipLine.uOM&gt;(sender, e.Row, 1m, INPrecision.NOROUND)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.SOInvoiceEntry.ARTran_SubID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;ARTran.subID&gt;(e.Row, null, new PXSetPropertyException(ex.Message))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.SOInvoiceEntry.ARTran_SubID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;ARTran.subID&gt;(e.Row, value, ex)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_AvgCost_FieldSelecting(PX.Data.PXCache, PX.Data.PXFieldSelectingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertToBase&lt;SOLine.inventoryID, SOLine.uOM&gt;(sender, e.Row, (decimal)AvgCost, INPrecision.UNITCOST)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_CuryUnitCost_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>INUnitAttribute.ConvertToBase&lt;SOLine.inventoryID, SOLine.uOM&gt;(sender, e.Row, (decimal)unitcost, INPrecision.NOROUND)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_SalesSubID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;SOLine.salesSubID&gt;(e.Row, null, new PXSetPropertyException(ex.Message))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1075">
    <target>PX.Objects.SO.SOOrderEntry.SOLine_SalesSubID_FieldDefaulting(PX.Data.PXCache, PX.Data.PXFieldDefaultingEventArgs)</target>
    <syntaxNode>sender.RaiseExceptionHandling&lt;SOLine.salesSubID&gt;(e.Row, value, ex)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1083">
    <target>PX.Objects.IN.INUpdateABCAssignment.resultPreview()</target>
    <syntaxNode>CalcABCAssignments(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1083">
    <target>PX.Objects.IN.INUpdateMCAssignment.resultPreview()</target>
    <syntaxNode>CalcMCAssignments(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1083">
    <target>PX.Objects.IN.PIGenerator.preliminaryResultRecs()</target>
    <syntaxNode>CalcPIRows(false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>PX.Objects.AP.APDocumentEnq.filter()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;APVendorBalanceEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>PX.Objects.AR.ARDocumentEnq.filter()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;ARCustomerBalanceEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>PX.Objects.GL.ScheduleRunBase&lt;TGraph, TMaintenanceGraph, TProcessGraph&gt;.schedule_List()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;TMaintenanceGraph&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>PX.Objects.PM.ProformaEntry.unbilled()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;PMBillEngine&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.APGLDiscrepancyByAccountEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;APVendorBalanceEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.APGLDiscrepancyByAccountEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;AccountByPeriodEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.APGLDiscrepancyByDocumentEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;APDocumentEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.APGLDiscrepancyByDocumentEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;AccountByPeriodEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;APVendorBalanceEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;AccountByPeriodEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.ARGLDiscrepancyByAccountEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;ARCustomerBalanceEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.ARGLDiscrepancyByAccountEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;AccountByPeriodEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;ARCustomerBalanceEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;AccountByPeriodEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.ARGLDiscrepancyByDocumentEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;ARDocumentEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1084">
    <target>ReconciliationTools.ARGLDiscrepancyByDocumentEnq.rows()</target>
    <syntaxNode>PXGraph.CreateInstance&lt;AccountByPeriodEnq&gt;</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AP.APInvoiceEntry.APInvoiceEntry()</target>
    <syntaxNode>PopulateBoxList()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AP.APPayBills.APPayBills()</target>
    <syntaxNode>APSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AP.APPrintChecks.APPrintChecks()</target>
    <syntaxNode>APSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AP.APQuickCheckEntry.APQuickCheckEntry()</target>
    <syntaxNode>PopulateBoxList()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AP.APQuickCheckEntry.APQuickCheckEntry()</target>
    <syntaxNode>apsetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AP.APQuickCheckEntry.APQuickCheckEntry()</target>
    <syntaxNode>glsetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AP.APScheduleRun.APScheduleRun()</target>
    <syntaxNode>APSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARAutoApplyPayments.ARAutoApplyPayments()</target>
    <syntaxNode>arsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARCashSaleEntry.ARCashSaleEntry()</target>
    <syntaxNode>arsetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARCashSaleEntry.ARCashSaleEntry()</target>
    <syntaxNode>glsetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARChargeInvoices.ARChargeInvoices()</target>
    <syntaxNode>ARSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARCreateWriteOff.ARCreateWriteOff()</target>
    <syntaxNode>ARSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARDunningLetterMaint.ARDunningLetterMaint()</target>
    <syntaxNode>Details.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARDunningLetterMaint.ARDunningLetterMaint()</target>
    <syntaxNode>PXSelect&lt;ARDunningLetterProcess.ARInvoiceWithDL, Where&lt;ARDunningLetterProcess.ARInvoiceWithDL.refNbr, Equal&lt;Required&lt;ARInvoice.refNbr&gt;&gt;, And&lt;ARDunningLetterProcess.ARInvoiceWithDL.docType, Equal&lt;Required&lt;ARInvoice.docType&gt;&gt;&gt;&gt;&gt;.Select(this, detail.RefNbr, detail.DocType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARDunningLetterPrint.ARDunningLetterPrint()</target>
    <syntaxNode>ARSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterProcess()</target>
    <syntaxNode>PXSelectOrderBy&lt;ARDunningSetup, OrderBy&lt;Asc&lt;ARDunningSetup.dunningLetterLevel&gt;&gt;&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterProcess()</target>
    <syntaxNode>arsetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesApplyMaint()</target>
    <syntaxNode>ARSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.AR.ARScheduleRun.ARScheduleRun()</target>
    <syntaxNode>ARSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTransactionsMaint()</target>
    <syntaxNode>APSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTransactionsMaint()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CA.CABankTransactionsMaint.CABankTransactionsMaint()</target>
    <syntaxNode>EnableCreateTab(Details.Cache, null, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CA.CABatchEntry.CABatchEntry()</target>
    <syntaxNode>APSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CR.CRAccountValidationProcess.CRAccountValidationProcess()</target>
    <syntaxNode>PXSelect&lt;CRValidationRules&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CR.CRImportLeadsMaint.CRImportLeadsMaint()</target>
    <syntaxNode>new Processor(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CR.CRLeadContactValidationProcess.CRLeadContactValidationProcess()</target>
    <syntaxNode>PXSelect&lt;CRValidationRules&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CR.OpportunityMaint.OpportunityMaint()</target>
    <syntaxNode>PXSelect&lt;Segment,
				Where&lt;Segment.dimensionID, Equal&lt;Required&lt;Segment.dimensionID&gt;&gt;&gt;&gt;.Select(this, "BIZACCT")</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CR.QuoteMaintExt.Initialize()</target>
    <syntaxNode>VisibilityHandler(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CS.OrganizationMaint.OrganizationMaint()</target>
    <syntaxNode>EntityInUseHelper.IsEntityInUse&lt;CurrencyInUse&gt;()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.CS.OrganizationMaint.OrganizationMaint()</target>
    <syntaxNode>PXSelectReadonly&lt;Organization&gt;.SelectWindowed(this, 0, 1)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.EP.EPCustomerBilling.EPCustomerBilling()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.EP.EPDocumentRelease.EPDocumentRelease()</target>
    <syntaxNode>APSetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.EmployeeActivitiesEntry()</target>
    <syntaxNode>PXSelect&lt;EPActivityType&gt;.Search&lt;EPActivityType.type&gt;(this, EPsetingst.Current.DefaultActivityType)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.EmployeeActivitiesEntry()</target>
    <syntaxNode>PXSelect&lt;EPEmployee, Where&lt;EP.EPEmployee.userID, Equal&lt;Current&lt;AccessInfo.userID&gt;&gt;&gt;&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.EP.EmployeeActivitiesRelease.EmployeeActivitiesRelease()</target>
    <syntaxNode>PXSelect&lt;EPSetup&gt;.SelectSingleBound(this, null, null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.EP.EmployeeMaint.EmployeeMaint()</target>
    <syntaxNode>ApplyUserAccessRights(User, Roles)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.FA.AssetGLTransactions.AssetGLTransactions()</target>
    <syntaxNode>PXSelect&lt;Numbering, Where&lt;Numbering.numberingID, Equal&lt;Current&lt;FASetup.registerNumberingID&gt;&gt;&gt;&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.FA.AssetMaint.AssetMaint()</target>
    <syntaxNode>PXSelect&lt;FABook&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.FA.AssetMaint.AssetMaint()</target>
    <syntaxNode>PXSelectGroupBy&lt;FABookBalance2, Aggregate&lt;Max&lt;FABookBalance2.exactLife&gt;&gt;&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.FA.AssetProcess.AssetProcess()</target>
    <syntaxNode>fasetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.FA.DepreciationCalculation.DepreciationCalculation()</target>
    <syntaxNode>PXSelectJoin&lt;Currency, InnerJoin&lt;GL.Company, On&lt;GL.Company.baseCuryID, Equal&lt;Currency.curyID&gt;&gt;&gt;&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.GLBudgetEntry.GLBudgetEntry()</target>
    <syntaxNode>PXSelect&lt;
				OrganizationFinYear, 
				Where&lt;OrganizationFinYear.year, Equal&lt;Required&lt;OrganizationFinYear.year&gt;&gt;,
					And&lt;OrganizationFinYear.organizationID, Equal&lt;Required&lt;OrganizationFinYear.organizationID&gt;&gt;&gt;&gt;&gt;
				.Select(this, Filter.Current.FinYear, PXAccess.GetParentOrganizationID(Filter.Current.BranchID))</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.GLBudgetEntry.GLBudgetEntry()</target>
    <syntaxNode>PXSelectOrderBy&lt;
					MasterFinYear,
					OrderBy&lt;
						Desc&lt;MasterFinYear.finPeriods&gt;&gt;&gt;
					.SelectSingleBound(this, null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.GLWorkBookMaint.GLWorkBookMaint()</target>
    <syntaxNode>FillSequences()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.JournalEntry.JournalEntry()</target>
    <syntaxNode>CASetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.JournalWithSubEntry.JournalWithSubEntry()</target>
    <syntaxNode>this.apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.JournalWithSubEntry.JournalWithSubEntry()</target>
    <syntaxNode>this.arsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.Reclassification.UI.ReclassificationHistoryInq.ReclassificationHistoryInq()</target>
    <syntaxNode>PXSelect&lt;GLTranReclHist,
                                Where&lt;GLTranReclHist.module, Equal&lt;Required&lt;GLTran.module&gt;&gt;,
                                        And&lt;GLTranReclHist.batchNbr, Equal&lt;Required&lt;GLTran.batchNbr&gt;&gt;,
                                        And&lt;GLTranReclHist.lineNbr, Equal&lt;Required&lt;GLTran.lineNbr&gt;&gt;&gt;&gt;&gt;&gt;
                                .Select(this,
                                    srcTranKey.Module,
                                    srcTranKey.BatchNbr,
                                    srcTranKey.LineNbr)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.GL.Reclassification.UI.ReclassificationHistoryInq.ReclassificationHistoryInq()</target>
    <syntaxNode>PXSelectReadonly&lt;GLTranReclHist,
                       Where&lt;GLTranReclHist.reclassSourceTranModule, Equal&lt;Required&lt;GLTranReclHist.module&gt;&gt;,
                                   And&lt;GLTranReclHist.reclassSourceTranBatchNbr, Equal&lt;Required&lt;GLTranReclHist.batchNbr&gt;&gt;,
                                   And&lt;GLTranReclHist.reclassSourceTranLineNbr, Equal&lt;Required&lt;GLTranReclHist.lineNbr&gt;&gt;&gt;&gt;&gt;, OrderBy&lt;Asc&lt;GLTranReclHist.reclassSeqNbr&gt;&gt;&gt;
                       .Select(this, srcTran.Module, srcTran.BatchNbr, srcTran.LineNbr)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.IN.INPostClassMaint.INPostClassMaint()</target>
    <syntaxNode>insetup.Select()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.IN.INReleaseProcess.INReleaseProcess()</target>
    <syntaxNode>ParseSubItemSegKeys()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.IN.INSiteMaint.INSiteMaint()</target>
    <syntaxNode>getDefaultSiteID()</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PM.BillingProcess.BillingProcess()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PM.PMQuoteMaintExt.Initialize()</target>
    <syntaxNode>VisibilityHandler(sender, row)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PM.RegisterEntry.RegisterEntry()</target>
    <syntaxNode>PXSelect&lt;ARSetup&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PM.RegisterEntry.RegisterEntry()</target>
    <syntaxNode>PXSelect&lt;PMSetup&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POCreate.POCreate()</target>
    <syntaxNode>APSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POLandedCostProcess.POLandedCostProcess()</target>
    <syntaxNode>APSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POOrderEntry.POOrderEntry()</target>
    <syntaxNode>PXSelect&lt;PMSetup&gt;.Select(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POOrderEntry.POOrderEntry()</target>
    <syntaxNode>apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POPrintOrder.POPrintOrder()</target>
    <syntaxNode>APSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POReceiptEntry.POReceiptEntry()</target>
    <syntaxNode>APSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POReleaseReceipt.POReleaseReceipt()</target>
    <syntaxNode>APSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.PO.POVendorCatalogueMaint.POVendorCatalogueMaint()</target>
    <syntaxNode>APSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOCreate.SOCreate()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOCreateShipment.SOCreateShipment()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOInvoiceEntry.SOInvoiceEntry()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOInvoiceShipment.SOInvoiceShipment()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOOrderEntry.SOOrderEntry()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOOrderProcess.SOOrderProcess()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOReleaseInvoice.SOReleaseInvoice()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.SO.SOShipmentEntry.SOShipmentEntry()</target>
    <syntaxNode>ARSetupNoMigrationMode.EnsureMigrationModeDisabled(this)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1085">
    <target>PX.Objects.TX.SalesTaxMaint.SalesTaxMaint()</target>
    <syntaxNode>PopulateBucketList(new TX.Tax { TaxType = TX.CSTaxType.Sales })</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1086">
    <target>PX.Objects.AP.APPayBills.PayBillsFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>graph.CreatePayments(list, filter, info, paytype)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1086">
    <target>PX.Objects.PO.POCreate.POCreateFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>CreateProc(list, filter.PurchDate, filter.OrderNbr != null)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1087">
    <target>PX.Objects.SO.SOInvoiceEntry.adjustments()</target>
    <syntaxNode>LoadDocumentsProc(applcount)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1087">
    <target>PX.Objects.SO.SOInvoiceEntry.adjustments()</target>
    <syntaxNode>Transactions.Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1087">
    <target>PX.Objects.SO.SOInvoiceEntry.sHipmentlist()</target>
    <syntaxNode>Transactions.Select</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.AP.APPayBills.PayBillsFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>graph.CreatePayments(list, filter, info, paytype)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.AP.MISC1099EFileProcessing.MISC1099EFileFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>graph.Process(list, rowfilter)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.CA.CCSynchronizeCards.CCSynchronizeCards()</target>
    <syntaxNode>DoLoadCards(filter)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.CM.TranslationRelease.TranslationRelease()</target>
    <syntaxNode>graph.CreateBatch(transl, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.CR.PurgeContactsProcess.CRPurgeFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>Activities</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.CR.PurgeContactsProcess.CRPurgeFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>Address</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.FA.TransferProcess.TransferFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>Transfer(filter, list)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.FinPeriodStatusProcess.ProcessStatus(System.Collections.Generic.List&lt;PX.Objects.GL.FinPeriods.TableDefinition.FinPeriod&gt;)</target>
    <syntaxNode>OrganizationFinPeriods</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.FinPeriodStatusProcess.ProcessStatus(System.Collections.Generic.List&lt;PX.Objects.GL.FinPeriods.TableDefinition.FinPeriod&gt;)</target>
    <syntaxNode>VerifyFinPeriodForLock(finPeriod)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.GLConsolReadMaint.ProcessConsolidationRead(PX.Objects.GL.GLConsolReadMaint, PX.Objects.GL.GLConsolSetup)</target>
    <syntaxNode>processor.ConsolidationRead(item)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.GLConsolSetupMaint.Synchronize(PX.Objects.GL.GLConsolSetupMaint, PX.Objects.GL.GLConsolSetup)</target>
    <syntaxNode>Branches</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.GLConsolSetupMaint.Synchronize(PX.Objects.GL.GLConsolSetupMaint, PX.Objects.GL.GLConsolSetup)</target>
    <syntaxNode>ConsolAccounts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.GLConsolSetupMaint.Synchronize(PX.Objects.GL.GLConsolSetupMaint, PX.Objects.GL.GLConsolSetup)</target>
    <syntaxNode>ConsolBranches</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.GLConsolSetupMaint.Synchronize(PX.Objects.GL.GLConsolSetupMaint, PX.Objects.GL.GLConsolSetup)</target>
    <syntaxNode>ConsolLedgers</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.GL.GLConsolSetupMaint.Synchronize(PX.Objects.GL.GLConsolSetupMaint, PX.Objects.GL.GLConsolSetup)</target>
    <syntaxNode>Ledgers</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1088">
    <target>PX.Objects.IN.INIntegrityCheck.INSiteFilter_RowSelected(PX.Data.PXCache, PX.Data.PXRowSelectedEventArgs)</target>
    <syntaxNode>graph.IntegrityCheckProc(new INItemSiteSummary { InventoryID = item.InventoryID, SiteID = filter != null ? filter.SiteID : null }, filter != null &amp;&amp; filter.RebuildHistory == true ? filter.FinPeriodID : null, filter.ReplanBackorders == true)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1089">
    <target>PX.Objects.AR.ARSPCommissionProcess.processAll(PX.Data.PXAdapter)</target>
    <syntaxNode>PXUIFieldAttribute.SetEnabled&lt;ARSalesPerTranExt.selected&gt;(cache, null, false)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1090">
    <target>PX.Objects.PO.POOrderEntry.CreateAPInvoice(PX.Data.PXAdapter)</target>
    <syntaxNode>apsetup.Current</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1091">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.CaptureOnlyCCPayment(PX.Data.PXAdapter)</target>
    <syntaxNode>base.CaptureOnlyCCPayment(adapter)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1091">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RecordCCPayment(PX.Data.PXAdapter)</target>
    <syntaxNode>base.RecordCCPayment(adapter)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1091">
    <target>PX.Objects.Extensions.PaymentTransaction.PaymentTransactionAcceptFormGraph&lt;TGraph, TPrimary&gt;.AuthorizeCCPayment(PX.Data.PXAdapter)</target>
    <syntaxNode>base.AuthorizeCCPayment(adapter)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1091">
    <target>PX.Objects.Extensions.PaymentTransaction.PaymentTransactionAcceptFormGraph&lt;TGraph, TPrimary&gt;.CaptureCCPayment(PX.Data.PXAdapter)</target>
    <syntaxNode>base.CaptureCCPayment(adapter)</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.AP1099DetailEnq.Year1099DetailReport(PX.Data.PXAdapter)</target>
    <syntaxNode>Year1099DetailReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.AP1099DetailEnq.Year1099SummaryReport(PX.Data.PXAdapter)</target>
    <syntaxNode>Year1099SummaryReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.AP1099SummaryEnq.Open1099PaymentsReport(PX.Data.PXAdapter)</target>
    <syntaxNode>Open1099PaymentsReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.AP1099SummaryEnq.Year1099DetailReport(PX.Data.PXAdapter)</target>
    <syntaxNode>Year1099DetailReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.AP1099SummaryEnq.Year1099SummaryReport(PX.Data.PXAdapter)</target>
    <syntaxNode>Year1099SummaryReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APDocumentEnq.APAgedOutstandingReport(PX.Data.PXAdapter)</target>
    <syntaxNode>APAgedOutstandingReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APDocumentEnq.APAgedPastDueReport(PX.Data.PXAdapter)</target>
    <syntaxNode>APAgedPastDueReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APDocumentEnq.APBalanceByVendorReport(PX.Data.PXAdapter)</target>
    <syntaxNode>APBalanceByVendorReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APDocumentEnq.APRegisterReport(PX.Data.PXAdapter)</target>
    <syntaxNode>APRegisterReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APDocumentEnq.VendorHistoryReport(PX.Data.PXAdapter)</target>
    <syntaxNode>VendorHistoryReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APDocumentEnq.ViewOriginalDocument(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewOriginalDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APInvoiceEntry.Approve(PX.Data.PXAdapter)</target>
    <syntaxNode>Approve</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APInvoiceEntry.Reject(PX.Data.PXAdapter)</target>
    <syntaxNode>Reject</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APPPDDebitAdjProcess.ViewInvoice(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APPPDDebitAdjProcess.ViewPayment(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewPayment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APPayBills.ViewOriginalDocument(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewOriginalDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APPaymentEntry.ViewPPDDebitAdj(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewPPDDebitAdj</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APRetainageRelease.ViewDocument(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APSetupMaint.ViewAssignmentMap(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewAssignmentMap</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APVendorBalanceEnq.APAgedOutstandingReport(PX.Data.PXAdapter)</target>
    <syntaxNode>APAgedOutstandingReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APVendorBalanceEnq.APAgedPastDueReport(PX.Data.PXAdapter)</target>
    <syntaxNode>APAgedPastDueReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APVendorBalanceEnq.APBalanceByVendorReport(PX.Data.PXAdapter)</target>
    <syntaxNode>APBalanceByVendorReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APVendorBalanceEnq.VendorHistoryReport(PX.Data.PXAdapter)</target>
    <syntaxNode>VendorHistoryReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AP.APVendorPriceMaint.CreateWorksheet(PX.Data.PXAdapter)</target>
    <syntaxNode>CreateWorksheet</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARAgedOutstandingReport(PX.Data.PXAdapter)</target>
    <syntaxNode>ARAgedOutstandingReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARAgedPastDueReport(PX.Data.PXAdapter)</target>
    <syntaxNode>ARAgedPastDueReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARBalanceByCustomerReport(PX.Data.PXAdapter)</target>
    <syntaxNode>ARBalanceByCustomerReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.CustomerHistoryReport(PX.Data.PXAdapter)</target>
    <syntaxNode>CustomerHistoryReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARDocumentEnq.ARAgedOutstandingReport(PX.Data.PXAdapter)</target>
    <syntaxNode>ARAgedOutstandingReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARDocumentEnq.ARAgedPastDueReport(PX.Data.PXAdapter)</target>
    <syntaxNode>ARAgedPastDueReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARDocumentEnq.ARBalanceByCustomerReport(PX.Data.PXAdapter)</target>
    <syntaxNode>ARBalanceByCustomerReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARDocumentEnq.ARRegisterReport(PX.Data.PXAdapter)</target>
    <syntaxNode>ARRegisterReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARDocumentEnq.CustomerHistoryReport(PX.Data.PXAdapter)</target>
    <syntaxNode>CustomerHistoryReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.CaptureOnlyCCPayment(PX.Data.PXAdapter)</target>
    <syntaxNode>CaptureOnlyCCPayment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARPaymentEntry.PaymentTransaction.RecordCCPayment(PX.Data.PXAdapter)</target>
    <syntaxNode>RecordCCPayment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARRetainageRelease.ViewDocument(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARSalesPriceMaint.CreateWorksheet(PX.Data.PXAdapter)</target>
    <syntaxNode>CreateWorksheet</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.AR.ARSetupMaint.ViewAssignmentMap(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewAssignmentMap</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CA.CABankTransactionsMaint.RefreshAfterRuleCreate()</target>
    <syntaxNode>RefreshAfterRuleCreate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CA.CATranEntry.Flow(PX.Data.PXAdapter)</target>
    <syntaxNode>Flow</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CA.CATranEntry.ViewBatch()</target>
    <syntaxNode>ViewBatch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CA.CCSynchronizeCards.viewCustomer()</target>
    <syntaxNode>viewCustomer</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CM.TranslationHistoryMaint.TranslationDetailsReport(PX.Data.PXAdapter)</target>
    <syntaxNode>TranslationDetailsReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CR.CRCommunicationBase&lt;TWhere&gt;.viewEMail(PX.Data.PXAdapter)</target>
    <syntaxNode>viewEMail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CR.OpportunityMaint.EditQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>EditQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CR.OpportunityMaint.PrintQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>PrintQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CR.OpportunityMaint.SendQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>SendQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CR.OpportunityMaint.SubmitQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>SubmitQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CR.QuoteMaint.PrintQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>PrintQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.CR.QuoteMaint.SendQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>SendQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.DR.DRDraftScheduleProc.ViewDocument(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.DR.SchedulesInq.ViewDocument(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.ActivitiesEnq.doubleClick(PX.Data.PXAdapter)</target>
    <syntaxNode>doubleClick</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.ActivitiesEnq.viewActivity(PX.Data.PXAdapter)</target>
    <syntaxNode>viewActivity</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.EPEventEnq.doubleClick(PX.Data.PXAdapter)</target>
    <syntaxNode>doubleClick</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.EPEventEnq.viewEvent(PX.Data.PXAdapter)</target>
    <syntaxNode>viewEvent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.EPTaskEnq.doubleClick(PX.Data.PXAdapter)</target>
    <syntaxNode>doubleClick</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.EPTaskEnq.viewTask(PX.Data.PXAdapter)</target>
    <syntaxNode>viewTask</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.EquipmentTimecardPrimary.Create()</target>
    <syntaxNode>Create</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.EquipmentTimecardPrimary.Delete()</target>
    <syntaxNode>Delete</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.EquipmentTimecardPrimary.Update()</target>
    <syntaxNode>Update</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.ExpenseClaimDetailMaint.ViewClaim()</target>
    <syntaxNode>ViewClaim</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.ExpenseClaimEntry.ViewUnsubmitReceipt()</target>
    <syntaxNode>ViewUnsubmitReceipt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.TasksAndEventsReminder.Defer(PX.Data.PXAdapter)</target>
    <syntaxNode>Defer</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.TasksAndEventsReminder.Dismiss(PX.Data.PXAdapter)</target>
    <syntaxNode>Dismiss</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.TasksAndEventsReminder.Navigate(PX.Data.PXAdapter)</target>
    <syntaxNode>Navigate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.EP.TimecardPrimary.Update()</target>
    <syntaxNode>Update</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.IN.INItemClassMaint.ViewGroupDetails(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewGroupDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.IN.INPIReview.SetNotEnteredToZero(PX.Data.PXAdapter)</target>
    <syntaxNode>SetNotEnteredToZero</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.IN.InventoryItemMaint.ViewGroupDetails(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewGroupDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ChangeOrderEntry.AddCostBudget(PX.Data.PXAdapter)</target>
    <syntaxNode>AddCostBudget</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ChangeOrderEntry.AddPOLines(PX.Data.PXAdapter)</target>
    <syntaxNode>AddPOLines</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ChangeOrderEntry.AddRevenueBudget(PX.Data.PXAdapter)</target>
    <syntaxNode>AddRevenueBudget</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ChangeOrderEntry.Approve(PX.Data.PXAdapter)</target>
    <syntaxNode>Approve</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ChangeOrderEntry.Reject(PX.Data.PXAdapter)</target>
    <syntaxNode>Reject</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.PMQuoteMaint.PrintQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>PrintQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.PMQuoteMaint.SendQuote(PX.Data.PXAdapter)</target>
    <syntaxNode>SendQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ProformaEntry.Approve(PX.Data.PXAdapter)</target>
    <syntaxNode>Approve</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ProformaEntry.Reject(PX.Data.PXAdapter)</target>
    <syntaxNode>Reject</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.ProformaEntry.UploadUnbilled(PX.Data.PXAdapter)</target>
    <syntaxNode>UploadUnbilled</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.RegisterEntry.SelectBaseRate(PX.Data.PXAdapter)</target>
    <syntaxNode>SelectBaseRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.PM.RegisterEntry.SelectProjectRate(PX.Data.PXAdapter)</target>
    <syntaxNode>SelectProjectRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.SM.EmailEnq.doubleClick(PX.Data.PXAdapter)</target>
    <syntaxNode>doubleClick</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.SM.EmailEnq.viewEMail(PX.Data.PXAdapter)</target>
    <syntaxNode>viewEMail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.SM.EmailEnq.viewEntity(PX.Data.PXAdapter)</target>
    <syntaxNode>viewEntity</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.WZ.WZSetupMaint.DisableWizards(PX.Data.PXAdapter)</target>
    <syntaxNode>DisableWizards</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.WZ.WZSetupMaint.EnableWizards(PX.Data.PXAdapter)</target>
    <syntaxNode>EnableWizards</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.WZ.WZTaskEntry.ActivateScenarioWithoutRefresh(PX.Data.PXAdapter)</target>
    <syntaxNode>ActivateScenarioWithoutRefresh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.WZ.WZTaskEntry.CompleteScenarioWithoutRefresh(PX.Data.PXAdapter)</target>
    <syntaxNode>CompleteScenarioWithoutRefresh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.Objects.WZ.WZTaskEntry.PrepareTasksForActivation(PX.Data.PXAdapter)</target>
    <syntaxNode>PrepareTasksForActivation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>PX.TM.EPCalendarEnq.CreateNew(PX.Data.PXAdapter)</target>
    <syntaxNode>CreateNew</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>ReconciliationTools.APGLDiscrepancyByAccountEnq.ViewDetails(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnq.ViewDetails(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>ReconciliationTools.ARGLDiscrepancyByAccountEnq.ViewDetails(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1092">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnq.ViewDetails(PX.Data.PXAdapter)</target>
    <syntaxNode>ViewDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.AR.ARDiscountMaint</target>
    <syntaxNode>SOSetupMaint</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.AR.ARExpiredCardsProcess</target>
    <syntaxNode>ARExpiringCardsProcess</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.AR.ARSPCommissionReview</target>
    <syntaxNode>ARSPCommissionProcess</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.AR.ARStatementPrint</target>
    <syntaxNode>ARStatementDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.CS.OrganizationMaint.SeparateBranchMaint</target>
    <syntaxNode>BranchMaint</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.CS.ShipTermsMaint</target>
    <syntaxNode>CarrierMaint</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.DR.DRDraftScheduleProc</target>
    <syntaxNode>DRRecognition</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.IN.INRegisterEntryBase</target>
    <syntaxNode>PXGraph</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1093">
    <target>PX.Objects.TX.ReportTaxReview</target>
    <syntaxNode>ReportTax</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.AP1099YearMaster</target>
    <syntaxNode>AP1099YearMaster</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APChecksToPrintEnq.CheckSummary</target>
    <syntaxNode>CheckSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APChecksToPrintEnq.DocFilter</target>
    <syntaxNode>DocFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APDiscountSequenceMaint.UpdateSettingsFilter</target>
    <syntaxNode>UpdateSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentFilter</target>
    <syntaxNode>APDocumentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APDocumentEnq.APDocumentResult</target>
    <syntaxNode>APDocumentResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APEditReportFilter</target>
    <syntaxNode>APEditReportFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APIntegrityCheckFilter</target>
    <syntaxNode>APIntegrityCheckFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.APAdjust</target>
    <syntaxNode>APAdjust</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.LinkLineFilter</target>
    <syntaxNode>LinkLineFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.LinkLineOrder</target>
    <syntaxNode>LinkLineOrder</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.LinkLineReceipt</target>
    <syntaxNode>LinkLineReceipt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.POLandedCostDetailFilter</target>
    <syntaxNode>POLandedCostDetailFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.POOrderRS</target>
    <syntaxNode>POOrderRS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.POReceiptFilter</target>
    <syntaxNode>POReceiptFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceEntry.POReceiptLineAdd</target>
    <syntaxNode>POReceiptLineAdd</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APInvoiceExt</target>
    <syntaxNode>APInvoiceExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APPPDDebitAdjParameters</target>
    <syntaxNode>APPPDDebitAdjParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingInvoiceFilter</target>
    <syntaxNode>PendingInvoiceFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APPendingInvoicesEnq.PendingPaymentSummary</target>
    <syntaxNode>PendingPaymentSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APRegisterAccess</target>
    <syntaxNode>APRegisterAccess</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APRegisterP</target>
    <syntaxNode>APRegisterP</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APRetainageFilter</target>
    <syntaxNode>APRetainageFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APRetainageInvoice</target>
    <syntaxNode>APRetainageInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APUpdateDiscounts.ItemFilter</target>
    <syntaxNode>ItemFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistoryFilter</target>
    <syntaxNode>APHistoryFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistoryResult</target>
    <syntaxNode>APHistoryResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APVendorBalanceEnq.APHistorySummary</target>
    <syntaxNode>APHistorySummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.APVendorPriceFilter</target>
    <syntaxNode>APVendorPriceFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.ARAddItemSelected</target>
    <syntaxNode>ARAddItemSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.AddItemFilter</target>
    <syntaxNode>AddItemFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.AddItemParameters</target>
    <syntaxNode>AddItemParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.ApproveBillsFilter</target>
    <syntaxNode>ApproveBillsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.BalancedAPDocument</target>
    <syntaxNode>BalancedAPDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.CalculatePricesFilter</target>
    <syntaxNode>CalculatePricesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.CopyPricesFilter</target>
    <syntaxNode>CopyPricesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.DAC.APReportParameters</target>
    <syntaxNode>APReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.DAC.ReportParameters.AP1099ReportParameters</target>
    <syntaxNode>AP1099ReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.DAC.ReportParameters.APRetainageReportParameters</target>
    <syntaxNode>APRetainageReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.MISC1099EFileFilter</target>
    <syntaxNode>MISC1099EFileFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.MISC1099EFileProcessingInfo</target>
    <syntaxNode>MISC1099EFileProcessingInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.MISC1099EFileProcessingInfoRaw</target>
    <syntaxNode>MISC1099EFileProcessingInfoRaw</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.Overrides.APDocumentRelease.AP1099Hist</target>
    <syntaxNode>AP1099Hist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.Overrides.APDocumentRelease.AP1099Yr</target>
    <syntaxNode>AP1099Yr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.Overrides.APDocumentRelease.APHistory2</target>
    <syntaxNode>APHistory2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.Overrides.APDocumentRelease.CuryAPHistory2</target>
    <syntaxNode>CuryAPHistory2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.Overrides.ScheduleMaint.DocumentSelection</target>
    <syntaxNode>DocumentSelection</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.PayBillsFilter</target>
    <syntaxNode>PayBillsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.PendingPPDDebitAdjApp</target>
    <syntaxNode>PendingPPDDebitAdjApp</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.PrintChecksFilter</target>
    <syntaxNode>PrintChecksFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.ReleaseChecksFilter</target>
    <syntaxNode>ReleaseChecksFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.RetainageOptions</target>
    <syntaxNode>RetainageOptions</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.SelectedVendorLocation</target>
    <syntaxNode>SelectedVendorLocation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.Standalone.APQuickCheck</target>
    <syntaxNode>APQuickCheck</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.VendorDiscountSequence</target>
    <syntaxNode>VendorDiscountSequence</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AP.VendorMaint.SuppliedByVendor</target>
    <syntaxNode>SuppliedByVendor</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARAddItemSelected</target>
    <syntaxNode>ARAddItemSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARAdjust2</target>
    <syntaxNode>ARAdjust2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARAutoApplyParameters</target>
    <syntaxNode>ARAutoApplyParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARChargeInvoices.PayBillsFilter</target>
    <syntaxNode>PayBillsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARCreateWriteOff.ARRegisterEx</target>
    <syntaxNode>ARRegisterEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryFilter</target>
    <syntaxNode>ARHistoryFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistoryResult</target>
    <syntaxNode>ARHistoryResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARCustomerBalanceEnq.ARHistorySummary</target>
    <syntaxNode>ARHistorySummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.CreditHoldParameters</target>
    <syntaxNode>CreditHoldParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARCustomerCreditHoldProcess.DetailsResult</target>
    <syntaxNode>DetailsResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDiscountSequenceMaint.ARDiscountEx</target>
    <syntaxNode>ARDiscountEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDiscountSequenceMaint.UpdateSettingsFilter</target>
    <syntaxNode>UpdateSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentFilter</target>
    <syntaxNode>ARDocumentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDocumentEnq.ARDocumentResult</target>
    <syntaxNode>ARDocumentResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDunningLetterByCustomerEnq.DLByCustomerFilter</target>
    <syntaxNode>DLByCustomerFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDunningLetterByDocumentEnq.DLByDocumentFilter</target>
    <syntaxNode>DLByDocumentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDunningLetterPrint.DetailsResult</target>
    <syntaxNode>DetailsResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDunningLetterPrint.PrintParameters</target>
    <syntaxNode>PrintParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterList</target>
    <syntaxNode>ARDunningLetterList</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARDunningLetterRecordsParameters</target>
    <syntaxNode>ARDunningLetterRecordsParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARDunningLetterProcess.ARInvoiceWithDL</target>
    <syntaxNode>ARInvoiceWithDL</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARExpiredCardsProcess.ARExpiredCardFilter</target>
    <syntaxNode>ARExpiredCardFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARExpiringCardsEnq.ARExpiringCardFilter</target>
    <syntaxNode>ARExpiringCardFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARExpiringCardsProcess.ARExpiringCardFilter</target>
    <syntaxNode>ARExpiringCardFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesApplyParameters</target>
    <syntaxNode>ARFinChargesApplyParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARFinChargesApplyMaint.ARFinChargesDetails</target>
    <syntaxNode>ARFinChargesDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARIntegrityCheckFilter</target>
    <syntaxNode>ARIntegrityCheckFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARInvoiceExt</target>
    <syntaxNode>ARInvoiceExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARPPDCreditMemoParameters</target>
    <syntaxNode>ARPPDCreditMemoParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARPaymentEntry.CCPaymentInfo</target>
    <syntaxNode>CCPaymentInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARPaymentEntry.LoadOptions</target>
    <syntaxNode>LoadOptions</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARPaymentInfo</target>
    <syntaxNode>ARPaymentInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARPaymentsAutoProcessing.PaymentFilter</target>
    <syntaxNode>PaymentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARRegisterAR610500</target>
    <syntaxNode>ARRegisterAR610500</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARRegisterAR622000</target>
    <syntaxNode>ARRegisterAR622000</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARRegisterAccess</target>
    <syntaxNode>ARRegisterAccess</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARRetainageFilter</target>
    <syntaxNode>ARRetainageFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARRetainageInvoice</target>
    <syntaxNode>ARRetainageInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARSPCommissionProcess.ARSalesPerTranExt</target>
    <syntaxNode>ARSalesPerTranExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARSPCommnDocResult</target>
    <syntaxNode>ARSPCommnDocResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARSalesPriceFilter</target>
    <syntaxNode>ARSalesPriceFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARSetupApproval</target>
    <syntaxNode>ARSetupApproval</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementDetails.ARStatementDetailsParameters</target>
    <syntaxNode>ARStatementDetailsParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementDetails.DetailsResult</target>
    <syntaxNode>DetailsResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementForCustomer.ARStatementForCustomerParameters</target>
    <syntaxNode>ARStatementForCustomerParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementForCustomer.DetailsResult</target>
    <syntaxNode>DetailsResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementHistory.ARStatementHistoryParameters</target>
    <syntaxNode>ARStatementHistoryParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementHistory.Customer</target>
    <syntaxNode>Customer</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementHistory.HistoryResult</target>
    <syntaxNode>HistoryResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementPrint.ContactR</target>
    <syntaxNode>ContactR</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementPrint.DetailsResult</target>
    <syntaxNode>DetailsResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementPrint.PrintParameters</target>
    <syntaxNode>PrintParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARStatementProcess.Parameters</target>
    <syntaxNode>Parameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARTranAccrueCost</target>
    <syntaxNode>ARTranAccrueCost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARUpdateDiscounts.ItemFilter</target>
    <syntaxNode>ItemFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARUpdateDiscounts.SelectedItem</target>
    <syntaxNode>SelectedItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.ARWriteOffFilter</target>
    <syntaxNode>ARWriteOffFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.AddItemFilter</target>
    <syntaxNode>AddItemFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.AddItemParameters</target>
    <syntaxNode>AddItemParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.BalancedARDocument</target>
    <syntaxNode>BalancedARDocument</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.CCTransactionsHistoryEnq.CCTransactionsHistoryFilter</target>
    <syntaxNode>CCTransactionsHistoryFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.CalculatePricesFilter</target>
    <syntaxNode>CalculatePricesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.CopyPricesFilter</target>
    <syntaxNode>CopyPricesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.CustomerMaint.ARLatestHistory</target>
    <syntaxNode>ARLatestHistory</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.DAC.ReportParameters.ARRetainageReportParameters</target>
    <syntaxNode>ARRetainageReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.DiscountSequenceDetail2</target>
    <syntaxNode>DiscountSequenceDetail2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.DuplicateFilter</target>
    <syntaxNode>DuplicateFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.FailedCCPaymentEnq.CCPaymentFilter</target>
    <syntaxNode>CCPaymentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.FailedCCPaymentEnq.CCProcTranH</target>
    <syntaxNode>CCProcTranH</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.FilterCustomerByClass</target>
    <syntaxNode>FilterCustomerByClass</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.Override.BAccount</target>
    <syntaxNode>BAccount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.Override.Customer</target>
    <syntaxNode>Customer</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.Overrides.ARDocumentRelease.ARHistory2</target>
    <syntaxNode>ARHistory2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.Overrides.ARDocumentRelease.CuryARHistory2</target>
    <syntaxNode>CuryARHistory2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.PendingPPDCreditMemoApp</target>
    <syntaxNode>PendingPPDCreditMemoApp</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.PrintInvoicesFilter</target>
    <syntaxNode>PrintInvoicesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.RetainageOptions</target>
    <syntaxNode>RetainageOptions</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.SPDocFilter</target>
    <syntaxNode>SPDocFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.SelectedCustomerLocation</target>
    <syntaxNode>SelectedCustomerLocation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.AR.StatementCycleProcessBO.CustomerWithActiveBalance</target>
    <syntaxNode>CustomerWithActiveBalance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.AddTrxFilter</target>
    <syntaxNode>AddTrxFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.BankStatementHelpers.CATranExt</target>
    <syntaxNode>CATranExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.BankStatementHelpers.MatchSettings</target>
    <syntaxNode>MatchSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.BankStatementProtoHelpers.CABankTranInvoiceMatch</target>
    <syntaxNode>CABankTranInvoiceMatch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAAPAROpenPeriodAttribute.OrigModulePh</target>
    <syntaxNode>OrigModulePh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CABalValidate.CABalanceValidationPeriodFilter</target>
    <syntaxNode>CABalanceValidationPeriodFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CABankTranMatch2</target>
    <syntaxNode>CABankTranMatch2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CABankTranRulePopup</target>
    <syntaxNode>CABankTranRulePopup</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CABankTransactionsEnq.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CABankTransactionsImport.CABankTran2</target>
    <syntaxNode>CABankTran2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CABankTransactionsMaint.CreateRuleSettings</target>
    <syntaxNode>CreateRuleSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CABankTransactionsMaint.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CADepositEntry.APPaymentUpdate</target>
    <syntaxNode>APPaymentUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CADepositEntry.ARPaymentUpdate</target>
    <syntaxNode>ARPaymentUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CADepositEntry.PaymentFilter</target>
    <syntaxNode>PaymentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAEnqFilter</target>
    <syntaxNode>CAEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAReconEntry.CABankTranMatch2</target>
    <syntaxNode>CABankTranMatch2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAReconEntry.CABatchDetail2</target>
    <syntaxNode>CABatchDetail2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAReconEntry.CATran2</target>
    <syntaxNode>CATran2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAReconEntry.CATranExt</target>
    <syntaxNode>CATranExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAReconEntry.CATranInBatch</target>
    <syntaxNode>CATranInBatch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAReconEntry.CATranR</target>
    <syntaxNode>CATranR</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CAReconFilter</target>
    <syntaxNode>CAReconFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CARegister</target>
    <syntaxNode>CARegister</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CASplitExt</target>
    <syntaxNode>CASplitExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CATranEnq.CATranExt</target>
    <syntaxNode>CATranExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CATranRefNbr</target>
    <syntaxNode>CATranRefNbr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CCSynchronizeCard</target>
    <syntaxNode>CCSynchronizeCard</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CCSynchronizeCards.CreditCardsFilter</target>
    <syntaxNode>CreditCardsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CCSynchronizeCards.CustomerPaymentProfile</target>
    <syntaxNode>CustomerPaymentProfile</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CCUpdateExpirationDatesProcess.CPMFilter</target>
    <syntaxNode>CPMFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CashAccountMaint.PaymentMethodAccount2</target>
    <syntaxNode>PaymentMethodAccount2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CashFlowEnq.CashFlowFilter</target>
    <syntaxNode>CashFlowFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.CashForecastEntry.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.FinPeriodFilter</target>
    <syntaxNode>FinPeriodFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.APAdjust</target>
    <syntaxNode>APAdjust</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.APInvoice</target>
    <syntaxNode>APInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.APPayment</target>
    <syntaxNode>APPayment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.APRegister</target>
    <syntaxNode>APRegister</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.ARAdjust</target>
    <syntaxNode>ARAdjust</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.ARInvoice</target>
    <syntaxNode>ARInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.ARPayment</target>
    <syntaxNode>ARPayment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.ARRegister</target>
    <syntaxNode>ARRegister</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.BAccount</target>
    <syntaxNode>BAccount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.CABankTranAdjustment</target>
    <syntaxNode>CABankTranAdjustment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.Light.CustomerMaster</target>
    <syntaxNode>CustomerMaster</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.PaymentInfo</target>
    <syntaxNode>PaymentInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.PaymentMethodConverter.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.PaymentReclassifyProcess.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CA.RuleTest</target>
    <syntaxNode>RuleTest</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.APHistoryLastRevaluation</target>
    <syntaxNode>APHistoryLastRevaluation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.ARHistoryLastRevaluation</target>
    <syntaxNode>ARHistoryLastRevaluation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.CMReportTranType</target>
    <syntaxNode>CMReportTranType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.CuryRateFilter</target>
    <syntaxNode>CuryRateFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.Extensions.CuryRateFilter</target>
    <syntaxNode>CuryRateFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.RefreshFilter</target>
    <syntaxNode>RefreshFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.RefreshRate</target>
    <syntaxNode>RefreshRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.RevalueFilter</target>
    <syntaxNode>RevalueFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.RevaluedAPHistory</target>
    <syntaxNode>RevaluedAPHistory</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.RevaluedARHistory</target>
    <syntaxNode>RevaluedARHistory</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.RevaluedGLHistory</target>
    <syntaxNode>RevaluedGLHistory</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.TranslationEnqFilter</target>
    <syntaxNode>TranslationEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CM.TranslationProcess.TranslationParams</target>
    <syntaxNode>TranslationParams</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.AccountValidationRules</target>
    <syntaxNode>AccountValidationRules</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.BAccount2</target>
    <syntaxNode>BAccount2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.BAccountEnq.BAccountFilter</target>
    <syntaxNode>BAccountFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.BAccountR</target>
    <syntaxNode>BAccountR</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.Building</target>
    <syntaxNode>Building</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.BusinessAccountGraphBase&lt;Base, Primary, WhereClause&gt;.BAccountItself</target>
    <syntaxNode>BAccountItself</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CRCaseRelated</target>
    <syntaxNode>CRCaseRelated</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CRImportLeadsMaint.CRBatchLead</target>
    <syntaxNode>CRBatchLead</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CRLeadContactValidationProcess.Contact2</target>
    <syntaxNode>Contact2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CROpportunityClassProbability</target>
    <syntaxNode>CROpportunityClassProbability</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CRPMSMEmail</target>
    <syntaxNode>CRPMSMEmail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CRPMTimeActivity</target>
    <syntaxNode>CRPMTimeActivity</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CRParentActivity</target>
    <syntaxNode>CRParentActivity</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CRTaxTran</target>
    <syntaxNode>CRTaxTran</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.CampaignEnq.CampaignFilter</target>
    <syntaxNode>CampaignFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.ContactAccount</target>
    <syntaxNode>ContactAccount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.ContactBAccount</target>
    <syntaxNode>ContactBAccount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.ContactEnq.ContactFilter</target>
    <syntaxNode>ContactFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.Lead</target>
    <syntaxNode>Lead</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.LeadAccountValidationRules</target>
    <syntaxNode>LeadAccountValidationRules</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.LeadContactValidationRules</target>
    <syntaxNode>LeadContactValidationRules</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.OperationParam</target>
    <syntaxNode>OperationParam</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.OpportunityMaint.CopyQuoteFilter</target>
    <syntaxNode>CopyQuoteFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.OpportunityMaint.CreateAccountsFilter</target>
    <syntaxNode>CreateAccountsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.OpportunityMaint.CreateInvoicesFilter</target>
    <syntaxNode>CreateInvoicesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.OpportunityMaint.CreateQuotesFilter</target>
    <syntaxNode>CreateQuotesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.PMCRActivity</target>
    <syntaxNode>PMCRActivity</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.QuoteMaint.CopyQuoteFilter</target>
    <syntaxNode>CopyQuoteFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.SendKBArticleMaint.Article</target>
    <syntaxNode>Article</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.SendKBArticleMaint.EmailMessage</target>
    <syntaxNode>EmailMessage</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.Standalone.CROpportunity</target>
    <syntaxNode>CROpportunity</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.Standalone.CROpportunityRevision</target>
    <syntaxNode>CROpportunityRevision</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.Standalone.CRQuote</target>
    <syntaxNode>CRQuote</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CR.Standalone.Location</target>
    <syntaxNode>Location</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CS.ARTranAlias</target>
    <syntaxNode>ARTranAlias</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CS.AfterActivation</target>
    <syntaxNode>AfterActivation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CS.BuildingMaint.BuildingFilter</target>
    <syntaxNode>BuildingFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CS.OrganizationMaint.LedgerCreateParameters</target>
    <syntaxNode>LedgerCreateParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CS.OrganizationMaint.State</target>
    <syntaxNode>State</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.CTFormulaDescriptionContainer</target>
    <syntaxNode>CTFormulaDescriptionContainer</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractAR677000</target>
    <syntaxNode>ContractAR677000</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractBilling.BillingFilter</target>
    <syntaxNode>BillingFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractDetailAcum</target>
    <syntaxNode>ContractDetailAcum</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractMaint.ActivationSettingsFilter</target>
    <syntaxNode>ActivationSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractMaint.BillingOnDemandSettingsFilter</target>
    <syntaxNode>BillingOnDemandSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractMaint.RenewalSettingsFilter</target>
    <syntaxNode>RenewalSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractMaint.SetupSettingsFilter</target>
    <syntaxNode>SetupSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractMaint.TerminationSettingsFilter</target>
    <syntaxNode>TerminationSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ContractPriceUpdate.ContractFilter</target>
    <syntaxNode>ContractFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.ExpiringContractsEng.ExpiringContractFilter</target>
    <syntaxNode>ExpiringContractFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.RenewContracts.ContractsList</target>
    <syntaxNode>ContractsList</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.RenewContracts.RenewalContractFilter</target>
    <syntaxNode>RenewalContractFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.RenewManualNumberingFilter</target>
    <syntaxNode>RenewManualNumberingFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.SelContractWatcher</target>
    <syntaxNode>SelContractWatcher</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.Standalone.ContractDetail</target>
    <syntaxNode>ContractDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.CT.UsageMaint.UsageFilter</target>
    <syntaxNode>UsageFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.DAC.QueryParameters</target>
    <syntaxNode>QueryParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.DAC.ReportParameters.OrganizationBranchReportParameters</target>
    <syntaxNode>OrganizationBranchReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.DataIntegrity.DataIntegrityLog</target>
    <syntaxNode>DataIntegrityLog</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.Discount.RecalcDiscountsParamFilter</target>
    <syntaxNode>RecalcDiscountsParamFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.FinPeriodClosingProcessBase.FinPeriodClosingProcessParameters</target>
    <syntaxNode>FinPeriodClosingProcessParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.FinPeriodClosingProcessBase.UnprocessedObjectsQueryParameters</target>
    <syntaxNode>UnprocessedObjectsQueryParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.Adjust</target>
    <syntaxNode>Adjust</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.Adjust2</target>
    <syntaxNode>Adjust2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.DocumentLine</target>
    <syntaxNode>DocumentLine</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.Invoice</target>
    <syntaxNode>Invoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.InvoiceBase</target>
    <syntaxNode>InvoiceBase</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.PaidInvoice</target>
    <syntaxNode>PaidInvoice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Common.GraphExtensions.Abstract.DAC.Payment</target>
    <syntaxNode>Payment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.APAROpenPeriodAttribute.OrigModulePh</target>
    <syntaxNode>OrigModulePh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DAC.ReportParameters.DRReportParameters</target>
    <syntaxNode>DRReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRBalanceValidation.DRBalanceType</target>
    <syntaxNode>DRBalanceType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRBalanceValidation.DRBalanceValidationFilter</target>
    <syntaxNode>DRBalanceValidationFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRDraftScheduleProc.SchedulesFilter</target>
    <syntaxNode>SchedulesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRExpenseBalance2</target>
    <syntaxNode>DRExpenseBalance2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRProcess.DRScheduleParameters</target>
    <syntaxNode>DRScheduleParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRProjection.ScheduleProjectionFilter</target>
    <syntaxNode>ScheduleProjectionFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRRecognition.ScheduleRecognitionFilter</target>
    <syntaxNode>ScheduleRecognitionFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRRecognition.ScheduledTran</target>
    <syntaxNode>ScheduledTran</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRRevenueBalance2</target>
    <syntaxNode>DRRevenueBalance2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRSingleProcess.ComponentDeferredCode</target>
    <syntaxNode>ComponentDeferredCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.DRSingleProcess.ComponentINItem</target>
    <syntaxNode>ComponentINItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.ScheduleMaint.DRScheduleDetailEx</target>
    <syntaxNode>DRScheduleDetailEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.ScheduleTransInq.ScheduleTransFilter</target>
    <syntaxNode>ScheduleTransFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.SchedulesInq.SchedulesFilter</target>
    <syntaxNode>SchedulesFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.DR.SchedulesInq.SchedulesInqResult</target>
    <syntaxNode>SchedulesInqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.ContractEx</target>
    <syntaxNode>ContractEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.ContractExEx</target>
    <syntaxNode>ContractExEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.CustomersList</target>
    <syntaxNode>CustomersList</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPActivityApprove</target>
    <syntaxNode>EPActivityApprove</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPApprovalProcess.EPOwned</target>
    <syntaxNode>EPOwned</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPCustomerBilling.BillingFilter</target>
    <syntaxNode>BillingFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPEmployeeCompanyTreeMember</target>
    <syntaxNode>EPEmployeeCompanyTreeMember</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPEmployeeEx</target>
    <syntaxNode>EPEmployeeEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPOtherAttendeeWithNotification</target>
    <syntaxNode>EPOtherAttendeeWithNotification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPRuleTree</target>
    <syntaxNode>EPRuleTree</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPTaskEnq.TaskFilter</target>
    <syntaxNode>TaskFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPTaxAggregate</target>
    <syntaxNode>EPTaxAggregate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPTaxTran</target>
    <syntaxNode>EPTaxTran</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EPTimeCardEx</target>
    <syntaxNode>EPTimeCardEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter</target>
    <syntaxNode>PMTimeActivityFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.EquipmentTimecardPrimary.EPEquipmentTimeCardEx</target>
    <syntaxNode>EPEquipmentTimeCardEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.ExpenseClaimDetailMaint.ExpenseClaimDetailsFilter</target>
    <syntaxNode>ExpenseClaimDetailsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.ExpenseClaimEntry.EPExpenseClaimDetailsForSubmit</target>
    <syntaxNode>EPExpenseClaimDetailsForSubmit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.Standalone.EPEmployeeClass</target>
    <syntaxNode>EPEmployeeClass</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.TimeCardMaint.ContractEx</target>
    <syntaxNode>ContractEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.TimeCardMaint.EPTimecardDetail</target>
    <syntaxNode>EPTimecardDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.TimecardPrimary.TimecardFilter</target>
    <syntaxNode>TimecardFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.EP.TimecardWithTotals</target>
    <syntaxNode>TimecardWithTotals</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.ContactAddress.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.ContactAddress.DocumentAddress</target>
    <syntaxNode>DocumentAddress</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.ContactAddress.DocumentContact</target>
    <syntaxNode>DocumentContact</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.Discount.Detail</target>
    <syntaxNode>Detail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.Discount.Discount</target>
    <syntaxNode>Discount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.Discount.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.MultiCurrency.CurySource</target>
    <syntaxNode>CurySource</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.MultiCurrency.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.PaymentProfile.CustomerPaymentMethod</target>
    <syntaxNode>CustomerPaymentMethod</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.PaymentProfile.CustomerPaymentMethodDetail</target>
    <syntaxNode>CustomerPaymentMethodDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.PaymentProfile.PaymentMethodDetail</target>
    <syntaxNode>PaymentMethodDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.PaymentTransaction.InputPaymentInfo</target>
    <syntaxNode>InputPaymentInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.PaymentTransaction.Payment</target>
    <syntaxNode>Payment</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.PaymentTransaction.PaymentTransactionDetail</target>
    <syntaxNode>PaymentTransactionDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.SalesPrice.Detail</target>
    <syntaxNode>Detail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.SalesPrice.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.SalesPrice.PriceClassSource</target>
    <syntaxNode>PriceClassSource</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.SalesTax.Detail</target>
    <syntaxNode>Detail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.SalesTax.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.SalesTax.TaxDetail</target>
    <syntaxNode>TaxDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.Extensions.SalesTax.TaxTotal</target>
    <syntaxNode>TaxTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.AccBalanceByAssetInq.AccBalanceByAssetFilter</target>
    <syntaxNode>AccBalanceByAssetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.AccBalanceByAssetInq.Amounts</target>
    <syntaxNode>Amounts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.AccountFilter</target>
    <syntaxNode>AccountFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.AssetFilter</target>
    <syntaxNode>AssetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.AssetGLTransactions.Error</target>
    <syntaxNode>Error</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.AssetGLTransactions.GLTran</target>
    <syntaxNode>GLTran</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.AssetTranRelease.ReleaseFilter</target>
    <syntaxNode>ReleaseFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.BalanceFilter</target>
    <syntaxNode>BalanceFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.BoundaryYears</target>
    <syntaxNode>BoundaryYears</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.DeprBookFilter</target>
    <syntaxNode>DeprBookFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.Descriptor.FAQueryParameters</target>
    <syntaxNode>FAQueryParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.DisposalProcess.DisposalFilter</target>
    <syntaxNode>DisposalFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.DsplFAATran</target>
    <syntaxNode>DsplFAATran</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.FABookPeriodReportParameters</target>
    <syntaxNode>FABookPeriodReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.FABookPeriodSelection</target>
    <syntaxNode>FABookPeriodSelection</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.FAOrganizationBook</target>
    <syntaxNode>FAOrganizationBook</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.FASheetHistory</target>
    <syntaxNode>FASheetHistory</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.FixedAsset.FADetails</target>
    <syntaxNode>FADetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.FixedAssetCostEnq.Amounts</target>
    <syntaxNode>Amounts</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.FixedAssetCostEnq.FixedAssetFilter</target>
    <syntaxNode>FixedAssetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.GLTranFilter</target>
    <syntaxNode>GLTranFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.Overrides.AssetProcess.FABookHist</target>
    <syntaxNode>FABookHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.SplitParams</target>
    <syntaxNode>SplitParams</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.SplitProcess.SplitFilter</target>
    <syntaxNode>SplitFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.Standalone.FABookBalance</target>
    <syntaxNode>FABookBalance</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.SuspendParams</target>
    <syntaxNode>SuspendParams</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.TranBookFilter</target>
    <syntaxNode>TranBookFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.Transact</target>
    <syntaxNode>Transact</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.FA.TransferProcess.TransferFilter</target>
    <syntaxNode>TransferFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GDPR.SMPersonalDataLog</target>
    <syntaxNode>SMPersonalDataLog</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.ADL.Account</target>
    <syntaxNode>Account</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.ADL.Batch</target>
    <syntaxNode>Batch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.ADL.Sub</target>
    <syntaxNode>Sub</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.AccountByPeriodFilter</target>
    <syntaxNode>AccountByPeriodFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.AccountByYearFilter</target>
    <syntaxNode>AccountByYearFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.AccountsPreloadFilter</target>
    <syntaxNode>AccountsPreloadFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.AdjustedBranch</target>
    <syntaxNode>AdjustedBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.AdjustingBranch</target>
    <syntaxNode>AdjustingBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.AllocationProcess.AllocationExt</target>
    <syntaxNode>AllocationExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.AllocationProcess.AllocationFilter</target>
    <syntaxNode>AllocationFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.BatchPostedForModule</target>
    <syntaxNode>BatchPostedForModule</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.BatchReport</target>
    <syntaxNode>BatchReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.BudgetDistributeFilter</target>
    <syntaxNode>BudgetDistributeFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.BudgetFilter</target>
    <syntaxNode>BudgetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.BudgetPreloadFilter</target>
    <syntaxNode>BudgetPreloadFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.CAExpenseBranch</target>
    <syntaxNode>CAExpenseBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.CASplitBranch</target>
    <syntaxNode>CASplitBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.CashAccountBranch</target>
    <syntaxNode>CashAccountBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.DAC.OrganizationLedgerLink</target>
    <syntaxNode>OrganizationLedgerLink</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriodGenerateParameters</target>
    <syntaxNode>FinPeriodGenerateParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriodSaveDialog</target>
    <syntaxNode>FinPeriodSaveDialog</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriodStatusProcess.FinPeriodStatusProcessParameters</target>
    <syntaxNode>FinPeriodStatusProcessParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.MasterFinPeriod</target>
    <syntaxNode>MasterFinPeriod</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.MasterFinYear</target>
    <syntaxNode>MasterFinYear</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriod</target>
    <syntaxNode>OrganizationFinPeriod</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriodAlias</target>
    <syntaxNode>OrganizationFinPeriodAlias</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinPeriodStatus</target>
    <syntaxNode>OrganizationFinPeriodStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.OrganizationFinYear</target>
    <syntaxNode>OrganizationFinYear</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.TableDefinition.FinPeriod2</target>
    <syntaxNode>FinPeriod2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.FinPeriods.TableDefinition.FinYear</target>
    <syntaxNode>FinYear</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLBatchDocRelease.GLTranDocU</target>
    <syntaxNode>GLTranDocU</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLConsolLedger2</target>
    <syntaxNode>GLConsolLedger2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLHistoryEnqFilter</target>
    <syntaxNode>GLHistoryEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLHistoryLastRevaluation</target>
    <syntaxNode>GLHistoryLastRevaluation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLHistoryValidate.GLIntegrityCheckFilter</target>
    <syntaxNode>GLIntegrityCheckFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLTranKey</target>
    <syntaxNode>GLTranKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLTranR</target>
    <syntaxNode>GLTranR</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLVoucherBatchEntry.CreateBatchSettings</target>
    <syntaxNode>CreateBatchSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.GLVoucherBatchEntry.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.INSiteBranch</target>
    <syntaxNode>INSiteBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.INSiteTo</target>
    <syntaxNode>INSiteTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.INSiteToBranch</target>
    <syntaxNode>INSiteToBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.JournalEntryImport.GLHistoryEnquiryWithSubResult</target>
    <syntaxNode>GLHistoryEnquiryWithSubResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.JournalEntryImport.OperationParam</target>
    <syntaxNode>OperationParam</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.JournalEntryImport.TrialBalanceTemplate</target>
    <syntaxNode>TrialBalanceTemplate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.JournalWithSubEntry.RefDocKey</target>
    <syntaxNode>RefDocKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.LineBranch</target>
    <syntaxNode>LineBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.ManageBudgetDialog</target>
    <syntaxNode>ManageBudgetDialog</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.OrganizationFinPeriodMaint.FinYearKey</target>
    <syntaxNode>FinYearKey</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.OrganizationFinPeriodMaint.NewOrganizationCalendarParameters</target>
    <syntaxNode>NewOrganizationCalendarParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.Overrides.ScheduleProcess.GLTranNew</target>
    <syntaxNode>GLTranNew</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.PeriodIDAttribute.QueryParams</target>
    <syntaxNode>QueryParams</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.ReclassBatch</target>
    <syntaxNode>ReclassBatch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.Reclassification.Common.GLTranForReclassification</target>
    <syntaxNode>GLTranForReclassification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.Reclassification.Common.ReclassGraphState</target>
    <syntaxNode>ReclassGraphState</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.Reclassification.UI.GLTranReclHist</target>
    <syntaxNode>GLTranReclHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.Reclassification.UI.ReclassifyTransactionsProcess.LoadOptions</target>
    <syntaxNode>LoadOptions</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.Reclassification.UI.ReclassifyTransactionsProcess.ReplaceOptions</target>
    <syntaxNode>ReplaceOptions</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.ReclassifyingGLTranAggregate</target>
    <syntaxNode>ReclassifyingGLTranAggregate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.ScheduleRun.Parameters</target>
    <syntaxNode>Parameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.SegmentFilter</target>
    <syntaxNode>SegmentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.TranBranch</target>
    <syntaxNode>TranBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.TranINSite</target>
    <syntaxNode>TranINSite</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.GL.TranINSiteBranch</target>
    <syntaxNode>TranINSiteBranch</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.DAC.WarehouseReference</target>
    <syntaxNode>WarehouseReference</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.ExcludedInventoryItem</target>
    <syntaxNode>ExcludedInventoryItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.ExcludedLocation</target>
    <syntaxNode>ExcludedLocation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.FilterItemByClass</target>
    <syntaxNode>FilterItemByClass</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INABCTotal</target>
    <syntaxNode>INABCTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INBarCodeItem</target>
    <syntaxNode>INBarCodeItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INCategoryMaint.ClassFilter</target>
    <syntaxNode>ClassFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INCategoryMaint.INCategoryCurrent</target>
    <syntaxNode>INCategoryCurrent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INCategoryMaint.INFolderCategory</target>
    <syntaxNode>INFolderCategory</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INCostStatusTransitLineSummary</target>
    <syntaxNode>INCostStatusTransitLineSummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INCostSubItemXRef</target>
    <syntaxNode>INCostSubItemXRef</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INCreateAssemblyFilter</target>
    <syntaxNode>INCreateAssemblyFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INInventoryByItemClassEnq.INItemClassFilter</target>
    <syntaxNode>INItemClassFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INInventoryByItemClassEnq.InventoryByClassFilter</target>
    <syntaxNode>InventoryByClassFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INItemBoxEx</target>
    <syntaxNode>INItemBoxEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INItemCategoryBuffer</target>
    <syntaxNode>INItemCategoryBuffer</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INItemClassMaint.GoTo</target>
    <syntaxNode>GoTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INKitSerialPart</target>
    <syntaxNode>INKitSerialPart</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INLocationCostStatus</target>
    <syntaxNode>INLocationCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INLocationStatus2</target>
    <syntaxNode>INLocationStatus2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INLotSerFilter</target>
    <syntaxNode>INLotSerFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INLotSerialCostStatus</target>
    <syntaxNode>INLotSerialCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INLotSerialStatus2</target>
    <syntaxNode>INLotSerialStatus2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INNotification</target>
    <syntaxNode>INNotification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INPIClassItemClass</target>
    <syntaxNode>INPIClassItemClass</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INPIInventoryFilter</target>
    <syntaxNode>INPIInventoryFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INPILocationFilter</target>
    <syntaxNode>INPILocationFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INPIStatusItem</target>
    <syntaxNode>INPIStatusItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INPIStatusLoc</target>
    <syntaxNode>INPIStatusLoc</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INReleaseProcess.INItemPlanDemand</target>
    <syntaxNode>INItemPlanDemand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INRepForecastApplicationGraph.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INReplenishmentFilter</target>
    <syntaxNode>INReplenishmentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INReplenishmentItem</target>
    <syntaxNode>INReplenishmentItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INScanCount.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INScanIssue.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INScanReceive.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INScanTransfer.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INSiteCostStatus</target>
    <syntaxNode>INSiteCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INSiteFilter</target>
    <syntaxNode>INSiteFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INSiteStatusFilter</target>
    <syntaxNode>INSiteStatusFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INSiteStatusSelected</target>
    <syntaxNode>INSiteStatusSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INSiteSummaryEnq.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTranSplitCostDetail</target>
    <syntaxNode>INTranSplitCostDetail</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTransfer</target>
    <syntaxNode>INTransfer</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTransferEntry.INSiteStatusSelected</target>
    <syntaxNode>INSiteStatusSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTransferEntry.INTransferStatusFilter</target>
    <syntaxNode>INTransferStatusFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTransferLocationStatus</target>
    <syntaxNode>INTransferLocationStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTransferStatus</target>
    <syntaxNode>INTransferStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTransitLineLotSerialStatus</target>
    <syntaxNode>INTransitLineLotSerialStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INTransitLineStatus</target>
    <syntaxNode>INTransitLineStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INUpdateReplenishmentRules.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.INUpdateStdCostRecord</target>
    <syntaxNode>INUpdateStdCostRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryAllocDetEnqFilter</target>
    <syntaxNode>InventoryAllocDetEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryAllocDetEnqResult</target>
    <syntaxNode>InventoryAllocDetEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryItemLookup.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryLotSerInq.INTranSplit</target>
    <syntaxNode>INTranSplit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryLotSerInq.POReceiptLine</target>
    <syntaxNode>POReceiptLine</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryLotSerInq.SOLine</target>
    <syntaxNode>SOLine</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventorySummaryEnqFilter</target>
    <syntaxNode>InventorySummaryEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventorySummaryEnquiryResult</target>
    <syntaxNode>InventorySummaryEnquiryResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryTranByAcctEnqFilter</target>
    <syntaxNode>InventoryTranByAcctEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryTranByAcctEnqResult</target>
    <syntaxNode>InventoryTranByAcctEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryTranDetEnqFilter</target>
    <syntaxNode>InventoryTranDetEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryTranDetEnqResult</target>
    <syntaxNode>InventoryTranDetEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryTranHistEnqFilter</target>
    <syntaxNode>InventoryTranHistEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryTranHistEnqResult</target>
    <syntaxNode>InventoryTranHistEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.InventoryTranSumEnqFilter</target>
    <syntaxNode>InventoryTranSumEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.ItemClassTree.INItemClass</target>
    <syntaxNode>INItemClass</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.LSSelect&lt;TLSMaster, TLSDetail, Where&gt;.LotSerOptions</target>
    <syntaxNode>LotSerOptions</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.LocationAvailAttribute.InventoryPh</target>
    <syntaxNode>InventoryPh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.LocationAvailAttribute.SiteIDPh</target>
    <syntaxNode>SiteIDPh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.LocationAvailAttribute.SubItemPh</target>
    <syntaxNode>SubItemPh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ARTranUpdate</target>
    <syntaxNode>ARTranUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.AverageCostStatus</target>
    <syntaxNode>AverageCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.FIFOCostStatus</target>
    <syntaxNode>FIFOCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.INTranCostUpdate</target>
    <syntaxNode>INTranCostUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.INTranSplitAdjustmentUpdate</target>
    <syntaxNode>INTranSplitAdjustmentUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.INTranSplitUpdate</target>
    <syntaxNode>INTranSplitUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.INTranUpdate</target>
    <syntaxNode>INTranUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemCostHist</target>
    <syntaxNode>ItemCostHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemCustDropShipStats</target>
    <syntaxNode>ItemCustDropShipStats</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemCustSalesHist</target>
    <syntaxNode>ItemCustSalesHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemCustSalesStats</target>
    <syntaxNode>ItemCustSalesStats</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemLotSerial</target>
    <syntaxNode>ItemLotSerial</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemSalesHist</target>
    <syntaxNode>ItemSalesHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemSalesHistD</target>
    <syntaxNode>ItemSalesHistD</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemSiteHist</target>
    <syntaxNode>ItemSiteHist</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemSiteHistD</target>
    <syntaxNode>ItemSiteHistD</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemSiteHistDay</target>
    <syntaxNode>ItemSiteHistDay</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ItemStats</target>
    <syntaxNode>ItemStats</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.LocationStatus</target>
    <syntaxNode>LocationStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.LotSerialStatus</target>
    <syntaxNode>LotSerialStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.OversoldCostStatus</target>
    <syntaxNode>OversoldCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.POReceiptLineUpdate</target>
    <syntaxNode>POReceiptLineUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.ReceiptStatus</target>
    <syntaxNode>ReceiptStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.SOShipLineUpdate</target>
    <syntaxNode>SOShipLineUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.SiteLotSerial</target>
    <syntaxNode>SiteLotSerial</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.SiteStatus</target>
    <syntaxNode>SiteStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.SpecificCostStatus</target>
    <syntaxNode>SpecificCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.SpecificTransitCostStatus</target>
    <syntaxNode>SpecificTransitCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.StandardCostStatus</target>
    <syntaxNode>StandardCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.TransitLocationStatus</target>
    <syntaxNode>TransitLocationStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.TransitLotSerialStatus</target>
    <syntaxNode>TransitLotSerialStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.TransitSiteStatus</target>
    <syntaxNode>TransitSiteStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.Overrides.INDocumentRelease.UnmanagedCostStatus</target>
    <syntaxNode>UnmanagedCostStatus</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.PICountFilter</target>
    <syntaxNode>PICountFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.PIGeneratorSettings</target>
    <syntaxNode>PIGeneratorSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.PIPreliminaryResult</target>
    <syntaxNode>PIPreliminaryResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.PriceWorksheetInventoryAttribute.INItemXRefExt</target>
    <syntaxNode>INItemXRefExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.S.INItemSite</target>
    <syntaxNode>INItemSite</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.SiteAvailAttribute.InventoryPh</target>
    <syntaxNode>InventoryPh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.SiteAvailAttribute.SubItemPh</target>
    <syntaxNode>SubItemPh</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.StoragePlaceLookup.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.UpdateABCAssignmentResult</target>
    <syntaxNode>UpdateABCAssignmentResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.UpdateABCAssignmentSettings</target>
    <syntaxNode>UpdateABCAssignmentSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.UpdateMCAssignmentResult</target>
    <syntaxNode>UpdateMCAssignmentResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.UpdateMCAssignmentSettings</target>
    <syntaxNode>UpdateMCAssignmentSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.WMS.ScanDAC</target>
    <syntaxNode>ScanDAC</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.WMS.ScanHeader</target>
    <syntaxNode>ScanHeader</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.WMS.ScanLine</target>
    <syntaxNode>ScanLine</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.WMS.ScanSplit</target>
    <syntaxNode>ScanSplit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.WMSHeader</target>
    <syntaxNode>WMSHeader</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.WMSInfo</target>
    <syntaxNode>WMSInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.IN.WMSScanLog</target>
    <syntaxNode>WMSScanLog</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.AccountGroupMaint.AccountPtr</target>
    <syntaxNode>AccountPtr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.AllocationPMTran</target>
    <syntaxNode>AllocationPMTran</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.AllocationProcess.AllocationFilter</target>
    <syntaxNode>AllocationFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.AllocationProcessByProject.AllocationFilter</target>
    <syntaxNode>AllocationFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.AllocationProcessByProject.PMAccountGroupFrom</target>
    <syntaxNode>PMAccountGroupFrom</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.AllocationProcessByProject.PMAccountGroupTo</target>
    <syntaxNode>PMAccountGroupTo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.AllocationProcessByProject.PMProjectForAllocation</target>
    <syntaxNode>PMProjectForAllocation</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.BillingProcess.BillingFilter</target>
    <syntaxNode>BillingFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.BillingProcess.ProjectsList</target>
    <syntaxNode>ProjectsList</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ChangeOrderEntry.CostBudgetFilter</target>
    <syntaxNode>CostBudgetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ChangeOrderEntry.POLineFilter</target>
    <syntaxNode>POLineFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ChangeOrderEntry.RevenueBudgetFilter</target>
    <syntaxNode>RevenueBudgetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.CommitmentInquiry.ProjectBalanceFilter</target>
    <syntaxNode>ProjectBalanceFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ForecastMaint.PMForecastAddPeriodDialogInfo</target>
    <syntaxNode>PMForecastAddPeriodDialogInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ForecastMaint.PMForecastCopyDialogInfo</target>
    <syntaxNode>PMForecastCopyDialogInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ForecastMaint.PMForecastDistributeDialogInfo</target>
    <syntaxNode>PMForecastDistributeDialogInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ForecastMaint.PMForecastFilter</target>
    <syntaxNode>PMForecastFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.LaborCostRateMaint.PMLaborCostRateFilter</target>
    <syntaxNode>PMLaborCostRateFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMBillingRecord</target>
    <syntaxNode>PMBillingRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMBudgetInfo</target>
    <syntaxNode>PMBudgetInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMBudgetedCostCode</target>
    <syntaxNode>PMBudgetedCostCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMChangeOrderCostBudget</target>
    <syntaxNode>PMChangeOrderCostBudget</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMChangeOrderPrevioslyAmount</target>
    <syntaxNode>PMChangeOrderPrevioslyAmount</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMChangeOrderRevenueBudget</target>
    <syntaxNode>PMChangeOrderRevenueBudget</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMCostBudget</target>
    <syntaxNode>PMCostBudget</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMForecastDetailInfo</target>
    <syntaxNode>PMForecastDetailInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMForecastHistoryInfo</target>
    <syntaxNode>PMForecastHistoryInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMForecastRecord</target>
    <syntaxNode>PMForecastRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMHistoryAccum</target>
    <syntaxNode>PMHistoryAccum</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMNotification</target>
    <syntaxNode>PMNotification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMOtherBudget</target>
    <syntaxNode>PMOtherBudget</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMProformaProgressLine</target>
    <syntaxNode>PMProformaProgressLine</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMProformaTransactLine</target>
    <syntaxNode>PMProformaTransactLine</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMProgressLineTotal</target>
    <syntaxNode>PMProgressLineTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMProjectUnion</target>
    <syntaxNode>PMProjectUnion</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMQuoteMaint.ConvertToProjectFilter</target>
    <syntaxNode>ConvertToProjectFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMQuoteMaint.CopyQuoteFilter</target>
    <syntaxNode>CopyQuoteFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMReportMetadata</target>
    <syntaxNode>PMReportMetadata</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMRevenueBudget</target>
    <syntaxNode>PMRevenueBudget</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMSetupProformaApproval</target>
    <syntaxNode>PMSetupProformaApproval</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMSetupProjectApproval</target>
    <syntaxNode>PMSetupProjectApproval</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMTaskAllocTotalAccum</target>
    <syntaxNode>PMTaskAllocTotalAccum</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMTaskTotal</target>
    <syntaxNode>PMTaskTotal</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMUnbilledDailySummary</target>
    <syntaxNode>PMUnbilledDailySummary</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMUnbilledDailySummaryAccum</target>
    <syntaxNode>PMUnbilledDailySummaryAccum</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMUnion</target>
    <syntaxNode>PMUnion</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMValidationFilter</target>
    <syntaxNode>PMValidationFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.PMWorkCode</target>
    <syntaxNode>PMWorkCode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.POLinePM</target>
    <syntaxNode>POLinePM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.POOrderPM</target>
    <syntaxNode>POOrderPM</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProFormaProcess.ProFormaFilter</target>
    <syntaxNode>ProFormaFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProformaEntry.PMProformaOverflow</target>
    <syntaxNode>PMProformaOverflow</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProjectAttributeGroupMaint.GroupTypeFilter</target>
    <syntaxNode>GroupTypeFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProjectEntry.CopyDialogInfo</target>
    <syntaxNode>CopyDialogInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProjectEntry.CostBudgetFilter</target>
    <syntaxNode>CostBudgetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProjectEntry.PMProjectBalanceRecord</target>
    <syntaxNode>PMProjectBalanceRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProjectEntry.RevenueBudgetFilter</target>
    <syntaxNode>RevenueBudgetFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ProjectEntry.TemplateSettingsFilter</target>
    <syntaxNode>TemplateSettingsFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.RateDefinitionMaint.PMRateDefinitionFilter</target>
    <syntaxNode>PMRateDefinitionFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.ReverseUnbilledProcess.TranFilter</target>
    <syntaxNode>TranFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.TemplateMaint.CopyDialogInfo</target>
    <syntaxNode>CopyDialogInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PM.TransactionInquiry.TranFilter</target>
    <syntaxNode>TranFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.DAC.Projections.POReceiptLineAdd</target>
    <syntaxNode>POReceiptLineAdd</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.DAC.ReportParameters</target>
    <syntaxNode>ReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.DAC.Unbound.POReceiptFilter</target>
    <syntaxNode>POReceiptFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.INTransitLineStatusSO</target>
    <syntaxNode>INTransitLineStatusSO</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.LandedCosts.POLandedCostDetailFilter</target>
    <syntaxNode>POLandedCostDetailFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.LandedCosts.POReceiptFilter</target>
    <syntaxNode>POReceiptFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.LinkLineFilter</target>
    <syntaxNode>LinkLineFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.LinkLineOrder</target>
    <syntaxNode>LinkLineOrder</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.LinkLineReceipt</target>
    <syntaxNode>LinkLineReceipt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POCreate.POCreateFilter</target>
    <syntaxNode>POCreateFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POFixedDemand</target>
    <syntaxNode>POFixedDemand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POItemCostManager.POVendorInventoryPriceUpdate</target>
    <syntaxNode>POVendorInventoryPriceUpdate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POLandedCostDetailS</target>
    <syntaxNode>POLandedCostDetailS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POLandedCostDocS</target>
    <syntaxNode>POLandedCostDocS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POLineR</target>
    <syntaxNode>POLineR</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POLineUOpen</target>
    <syntaxNode>POLineUOpen</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.PONotification</target>
    <syntaxNode>PONotification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderEntry.POOrderCache</target>
    <syntaxNode>POOrderCache</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderEntry.POOrderFilter</target>
    <syntaxNode>POOrderFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderEntry.POOrderR</target>
    <syntaxNode>POOrderR</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderEntry.POOrderS</target>
    <syntaxNode>POOrderS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderEntry.SOLineSplit3</target>
    <syntaxNode>SOLineSplit3</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderFilter</target>
    <syntaxNode>POOrderFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderRS</target>
    <syntaxNode>POOrderRS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderReceipt</target>
    <syntaxNode>POOrderReceipt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POOrderReceiptLink</target>
    <syntaxNode>POOrderReceiptLink</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POPrintOrder.POPrintOrderOwned</target>
    <syntaxNode>POPrintOrderOwned</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POPrintOrderFilter</target>
    <syntaxNode>POPrintOrderFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POReceiptBillingReport</target>
    <syntaxNode>POReceiptBillingReport</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POReceiptEntry.POLineS</target>
    <syntaxNode>POLineS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POReceiptEntry.POOrderFilter</target>
    <syntaxNode>POOrderFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POReceiptEntry.POOrderS</target>
    <syntaxNode>POOrderS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POReceiptEntry.POReceiptLineS</target>
    <syntaxNode>POReceiptLineS</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POReceiptLineR1</target>
    <syntaxNode>POReceiptLineR1</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POReceiptReturnFilter</target>
    <syntaxNode>POReceiptReturnFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POSiteStatusFilter</target>
    <syntaxNode>POSiteStatusFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.POSiteStatusSelected</target>
    <syntaxNode>POSiteStatusSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.PO.ReceivePutAway.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQBidding</target>
    <syntaxNode>RQBidding</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQBiddingState</target>
    <syntaxNode>RQBiddingState</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQInventoryItem</target>
    <syntaxNode>RQInventoryItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQNotification</target>
    <syntaxNode>RQNotification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequestClassItem</target>
    <syntaxNode>RQRequestClassItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequestEnq.RQRequestSelection</target>
    <syntaxNode>RQRequestSelection</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequestLineFilter</target>
    <syntaxNode>RQRequestLineFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequestLineOwned</target>
    <syntaxNode>RQRequestLineOwned</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequestLineSelect</target>
    <syntaxNode>RQRequestLineSelect</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequestSelection</target>
    <syntaxNode>RQRequestSelection</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequisitionContent</target>
    <syntaxNode>RQRequisitionContent</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequisitionLineBidding</target>
    <syntaxNode>RQRequisitionLineBidding</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequisitionLineReceived</target>
    <syntaxNode>RQRequisitionLineReceived</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequisitionOrder</target>
    <syntaxNode>RQRequisitionOrder</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequisitionOwned</target>
    <syntaxNode>RQRequisitionOwned</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequisitionProcess.RQRequisitionSelection</target>
    <syntaxNode>RQRequisitionSelection</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQRequisitionStatic</target>
    <syntaxNode>RQRequisitionStatic</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQSetupApproval</target>
    <syntaxNode>RQSetupApproval</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RQ.RQSiteStatusSelected</target>
    <syntaxNode>RQSiteStatusSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.ClaimRUTROTFilter</target>
    <syntaxNode>ClaimRUTROTFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.DAC.RUTROTConfigurationHolder</target>
    <syntaxNode>RUTROTConfigurationHolder</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.HiddenInventoryItem</target>
    <syntaxNode>HiddenInventoryItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.RUTROT</target>
    <syntaxNode>RUTROT</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.RUTROTDistribution</target>
    <syntaxNode>RUTROTDistribution</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.RUTROTItem</target>
    <syntaxNode>RUTROTItem</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.RUTROTSetup</target>
    <syntaxNode>RUTROTSetup</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.RUTROTWorkType</target>
    <syntaxNode>RUTROTWorkType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.RUTROT.RUTROTWorkTypesMaint.Filter</target>
    <syntaxNode>Filter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SM.FullTextIndexRebuildProc.RecordType</target>
    <syntaxNode>RecordType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.AddInvoiceFilter</target>
    <syntaxNode>AddInvoiceFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.AddSOFilter</target>
    <syntaxNode>AddSOFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.CopyParamFilter</target>
    <syntaxNode>CopyParamFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.CustomerPaymentMethodC</target>
    <syntaxNode>CustomerPaymentMethodC</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.FilterARTranType</target>
    <syntaxNode>FilterARTranType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.GraphExtensions.CarrierRates.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.InvoiceSplits</target>
    <syntaxNode>InvoiceSplits</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.POLine3</target>
    <syntaxNode>POLine3</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.PickPackInfo</target>
    <syntaxNode>PickPackInfo</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.PickPackShip.Header</target>
    <syntaxNode>Header</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.PickPackShip.SOPackageDetailPick</target>
    <syntaxNode>SOPackageDetailPick</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.PickPackShip.SOShipLineSplitPick</target>
    <syntaxNode>SOShipLineSplitPick</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOCarrierRate</target>
    <syntaxNode>SOCarrierRate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOCreate.SOCreateFilter</target>
    <syntaxNode>SOCreateFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOCreate.SOFixedDemand</target>
    <syntaxNode>SOFixedDemand</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOInvoiceFilter</target>
    <syntaxNode>SOInvoiceFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOInvoicePrintFormFilter</target>
    <syntaxNode>SOInvoicePrintFormFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOLine2</target>
    <syntaxNode>SOLine2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOLine4</target>
    <syntaxNode>SOLine4</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOLineSplit2</target>
    <syntaxNode>SOLineSplit2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOMiscLine2</target>
    <syntaxNode>SOMiscLine2</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SONotification</target>
    <syntaxNode>SONotification</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOOrderEntry.CCProcTranV</target>
    <syntaxNode>CCProcTranV</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOOrderEntry.SOAdjust</target>
    <syntaxNode>SOAdjust</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOOrderFilter</target>
    <syntaxNode>SOOrderFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOOrderProcessSelected</target>
    <syntaxNode>SOOrderProcessSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOPackageDetailEx</target>
    <syntaxNode>SOPackageDetailEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOPackageInfoEx</target>
    <syntaxNode>SOPackageInfoEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOParamFilter</target>
    <syntaxNode>SOParamFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOPickPackShipUserPrintCarrierLabelSetup</target>
    <syntaxNode>SOPickPackShipUserPrintCarrierLabelSetup</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOPickPackShipUserPrintShipmentConfirmationSetup</target>
    <syntaxNode>SOPickPackShipUserPrintShipmentConfirmationSetup</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOPostShipmentFilter</target>
    <syntaxNode>SOPostShipmentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOProcessFilter</target>
    <syntaxNode>SOProcessFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOQuickProcessParameters</target>
    <syntaxNode>SOQuickProcessParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOShipmentFilter</target>
    <syntaxNode>SOShipmentFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOShipmentPlan</target>
    <syntaxNode>SOShipmentPlan</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOSiteStatusFilter</target>
    <syntaxNode>SOSiteStatusFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.SOSiteStatusSelected</target>
    <syntaxNode>SOSiteStatusSelected</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.ScanLog</target>
    <syntaxNode>ScanLog</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.SO.Table.SOShipLineSplit</target>
    <syntaxNode>SOShipLineSplit</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.AddBillFilter</target>
    <syntaxNode>AddBillFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.DAC.ReportParameters.TaxPeriodReportParameters</target>
    <syntaxNode>TaxPeriodReportParameters</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.DAC.TaxTranForReporting</target>
    <syntaxNode>TaxTranForReporting</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.ExternalTaxPost.Document</target>
    <syntaxNode>Document</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.SVATConversionHistExt</target>
    <syntaxNode>SVATConversionHistExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.SVATTaxFilter</target>
    <syntaxNode>SVATTaxFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TXImportFileData</target>
    <syntaxNode>TXImportFileData</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TXImportSettings</target>
    <syntaxNode>TXImportSettings</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TXImportState</target>
    <syntaxNode>TXImportState</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TXImportZipFileData</target>
    <syntaxNode>TXImportZipFileData</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxBucketMaster</target>
    <syntaxNode>TaxBucketMaster</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxBuilderFilter</target>
    <syntaxNode>TaxBuilderFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxByZipEnq.TaxFilter</target>
    <syntaxNode>TaxFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxByZipEnq.TaxZoneDetails</target>
    <syntaxNode>TaxZoneDetails</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxHistoryMaster</target>
    <syntaxNode>TaxHistoryMaster</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxPeriodEffective</target>
    <syntaxNode>TaxPeriodEffective</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxPeriodFilter</target>
    <syntaxNode>TaxPeriodFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxPeriodForReportShowing</target>
    <syntaxNode>TaxPeriodForReportShowing</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxRecord</target>
    <syntaxNode>TaxRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxYearMaint.TaxPeriodEx</target>
    <syntaxNode>TaxPeriodEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxYearMaint.TaxYearEx</target>
    <syntaxNode>TaxYearEx</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.TaxYearMaint.TaxYearFilter</target>
    <syntaxNode>TaxYearFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.ZoneDetailRecord</target>
    <syntaxNode>ZoneDetailRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.TX.ZoneRecord</target>
    <syntaxNode>ZoneRecord</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.WZ.PendingWZScenario</target>
    <syntaxNode>PendingWZScenario</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.Objects.WZ.WZSubTask</target>
    <syntaxNode>WZSubTask</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.SM.CustomerManagementFeature</target>
    <syntaxNode>CustomerManagementFeature</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.SM.EmailProcessingMaint.EmailProcessingFilter</target>
    <syntaxNode>EmailProcessingFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.SM.ReportUsers</target>
    <syntaxNode>ReportUsers</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.SM.WikiPageStatusFilterExt</target>
    <syntaxNode>WikiPageStatusFilterExt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>PX.TM.ImportCompanyTreeMaint.SelectedNode</target>
    <syntaxNode>SelectedNode</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.APGLDiscrepancyByDocumentEnqResult</target>
    <syntaxNode>APGLDiscrepancyByDocumentEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnqFilter</target>
    <syntaxNode>APGLDiscrepancyByVendorEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.APGLDiscrepancyByVendorEnqResult</target>
    <syntaxNode>APGLDiscrepancyByVendorEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.APGLDiscrepancyEnqFilter</target>
    <syntaxNode>APGLDiscrepancyEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnqFilter</target>
    <syntaxNode>ARGLDiscrepancyByCustomerEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.ARGLDiscrepancyByCustomerEnqResult</target>
    <syntaxNode>ARGLDiscrepancyByCustomerEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.ARGLDiscrepancyByDocumentEnqResult</target>
    <syntaxNode>ARGLDiscrepancyByDocumentEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.ARGLDiscrepancyEnqFilter</target>
    <syntaxNode>ARGLDiscrepancyEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.DiscrepancyByAccountEnqResult</target>
    <syntaxNode>DiscrepancyByAccountEnqResult</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1094">
    <target>ReconciliationTools.DiscrepancyEnqFilter</target>
    <syntaxNode>DiscrepancyEnqFilter</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AP.AP1099Year.EndDate</target>
    <syntaxNode>EndDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AP.AP1099Year.StartDate</target>
    <syntaxNode>StartDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AP.APInvoice.EstPayDate</target>
    <syntaxNode>EstPayDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AP.APTran.DiscCost</target>
    <syntaxNode>DiscCost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AP.PurchaseTax.HistTaxAcctID</target>
    <syntaxNode>HistTaxAcctID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AP.PurchaseTax.HistTaxSubID</target>
    <syntaxNode>HistTaxSubID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AP.PurchaseTax.TranTaxType</target>
    <syntaxNode>TranTaxType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AR.CustomerPaymentMethodInfo.Descr</target>
    <syntaxNode>Descr</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AR.SalesTax.HistTaxAcctID</target>
    <syntaxNode>HistTaxAcctID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AR.SalesTax.HistTaxSubID</target>
    <syntaxNode>HistTaxSubID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.AR.SalesTax.TranTaxType</target>
    <syntaxNode>TranTaxType</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.CR.Contact.ContactPriority</target>
    <syntaxNode>ContactPriority</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.CS.DimensionMaint.INSubItemDup.SubItemCD</target>
    <syntaxNode>SubItemCD</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.CT.Contract.GraceDate</target>
    <syntaxNode>GraceDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.CT.Contract.IsTemplate</target>
    <syntaxNode>IsTemplate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.CT.ContractTemplate.GraceDate</target>
    <syntaxNode>GraceDate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.FA.FABookBalance.DeprFromYear</target>
    <syntaxNode>DeprFromYear</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.FA.FABookBalance.DeprToYear</target>
    <syntaxNode>DeprToYear</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.FA.FABookBalance2.ExactLife</target>
    <syntaxNode>ExactLife</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.FA.FABookBalanceTransfer.TransferPeriodID</target>
    <syntaxNode>TransferPeriodID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.GL.GLHistory.FinYear</target>
    <syntaxNode>FinYear</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemCost.TranUnitCost</target>
    <syntaxNode>TranUnitCost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSite.NegativeCost</target>
    <syntaxNode>NegativeCost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSite.POCreate</target>
    <syntaxNode>POCreate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSite.POSource</target>
    <syntaxNode>POSource</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSite.TranUnitCost</target>
    <syntaxNode>TranUnitCost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.ABCCodeID</target>
    <syntaxNode>ABCCodeID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.INItemSiteExists</target>
    <syntaxNode>INItemSiteExists</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.InvtAcctID</target>
    <syntaxNode>InvtAcctID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.InvtSubID</target>
    <syntaxNode>InvtSubID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.MovementClassID</target>
    <syntaxNode>MovementClassID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.POCreate</target>
    <syntaxNode>POCreate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.POSource</target>
    <syntaxNode>POSource</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.PreferredVendorID</target>
    <syntaxNode>PreferredVendorID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.PreferredVendorLocationID</target>
    <syntaxNode>PreferredVendorLocationID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.ReplenishmentSource</target>
    <syntaxNode>ReplenishmentSource</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INItemSiteSettings.ReplenishmentSourceSiteID</target>
    <syntaxNode>ReplenishmentSourceSiteID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INLocation.CostSiteID</target>
    <syntaxNode>CostSiteID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.INTran.OrigQty</target>
    <syntaxNode>OrigQty</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.IN.S.INItemSite.POCreate</target>
    <syntaxNode>POCreate</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.PO.POFixedDemand.POSiteID</target>
    <syntaxNode>POSiteID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.PO.POLine.DiscCost</target>
    <syntaxNode>DiscCost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.RQ.RQBiddingRequisitionLine.QuoteCost</target>
    <syntaxNode>QuoteCost</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.RQ.RQRequestLineBudget.AprovedAmt</target>
    <syntaxNode>AprovedAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.RQ.RQRequestLineBudget.CuryAprovedAmt</target>
    <syntaxNode>CuryAprovedAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.RQ.RQRequestLineBudget.CuryUnaprovedAmt</target>
    <syntaxNode>CuryUnaprovedAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.RQ.RQRequestLineBudget.UnaprovedAmt</target>
    <syntaxNode>UnaprovedAmt</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.SO.SOCreate.SOFixedDemand.DemandSiteID</target>
    <syntaxNode>DemandSiteID</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.SO.SOLine.DiscPrice</target>
    <syntaxNode>DiscPrice</syntaxNode>
  </suppressMessage>
  <suppressMessage id="PX1095">
    <target>PX.Objects.SO.SOLine2.ActualUnitPrice</target>
    <syntaxNode>ActualUnitPrice</syntaxNode>
  </suppressMessage>
</suppressions>